/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 532 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_VAR_LIB_PB2_SB_1_6500051_1648043689_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_VAR_LIB_PB2_SB_1_6500051_1648043689_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    KEYWORD_USED_AS_IDENT = 1201,
    KEYWORD_USED_AS_KEYWORD = 1202,
    CONDITIONLESS_JOIN = 1203,
    SUBQUERY_AS_EXPR = 1204,
    EMPTY_FROM_CLAUSE = 1205
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define KEYWORD_USED_AS_IDENT 1201
#define KEYWORD_USED_AS_KEYWORD 1202
#define CONDITIONLESS_JOIN 1203
#define SUBQUERY_AS_EXPR 1204
#define EMPTY_FROM_CLAUSE 1205

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_VAR_LIB_PB2_SB_1_6500051_1648043689_66_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2187 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1138
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89671

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  818
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1018
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3221
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5563

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1205

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   815,     2,     2,     2,   803,   798,     2,
     807,   808,   801,   800,   812,   799,   813,   802,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   814,   810,
       2,     2,     2,     2,   811,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   804,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   816,   797,   817,   805,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       2,   794,   795,   796,   806,   809
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2180,  2180,  2181,  2186,  2196,  2214,  2218,  2226,  2239,
    2238,  2263,  2270,  2272,  2276,  2277,  2282,  2283,  2284,  2285,
    2286,  2287,  2288,  2289,  2290,  2291,  2292,  2293,  2294,  2295,
    2296,  2297,  2298,  2299,  2300,  2301,  2302,  2303,  2304,  2305,
    2306,  2307,  2308,  2309,  2310,  2311,  2312,  2313,  2314,  2315,
    2316,  2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,  2325,
    2326,  2327,  2328,  2329,  2330,  2331,  2332,  2333,  2334,  2335,
    2336,  2337,  2338,  2339,  2340,  2341,  2342,  2343,  2344,  2345,
    2346,  2347,  2348,  2349,  2350,  2351,  2352,  2353,  2354,  2355,
    2356,  2357,  2358,  2359,  2360,  2361,  2362,  2363,  2364,  2365,
    2366,  2367,  2368,  2369,  2370,  2371,  2372,  2373,  2374,  2375,
    2376,  2377,  2378,  2379,  2380,  2381,  2382,  2383,  2384,  2385,
    2386,  2387,  2388,  2389,  2390,  2391,  2392,  2393,  2394,  2395,
    2396,  2397,  2398,  2399,  2400,  2401,  2402,  2403,  2404,  2405,
    2406,  2407,  2408,  2409,  2410,  2411,  2412,  2413,  2414,  2415,
    2416,  2420,  2430,  2431,  2435,  2455,  2462,  2473,  2472,  2483,
    2485,  2489,  2490,  2494,  2507,  2506,  2525,  2530,  2535,  2534,
    2551,  2550,  2568,  2569,  2572,  2579,  2586,  2593,  2600,  2607,
    2615,  2624,  2630,  2637,  2644,  2652,  2661,  2667,  2673,  2681,
    2689,  2695,  2702,  2709,  2717,  2729,  2735,  2742,  2749,  2757,
    2767,  2768,  2772,  2778,  2782,  2787,  2791,  2797,  2801,  2806,
    2810,  2815,  2819,  2824,  2828,  2833,  2837,  2842,  2846,  2851,
    2855,  2860,  2864,  2869,  2873,  2878,  2882,  2887,  2891,  2896,
    2900,  2905,  2909,  2914,  2918,  2923,  2927,  2932,  2936,  2941,
    2945,  2950,  2954,  2959,  2963,  2968,  2972,  2977,  2981,  2986,
    2990,  2995,  2999,  3003,  3007,  3011,  3015,  3025,  3029,  3033,
    3038,  3049,  3054,  3058,  3062,  3066,  3067,  3071,  3075,  3079,
    3084,  3088,  3092,  3096,  3102,  3136,  3140,  3144,  3148,  3154,
    3155,  3171,  3172,  3188,  3189,  3206,  3209,  3211,  3212,  3216,
    3222,  3228,  3237,  3241,  3245,  3252,  3256,  3260,  3274,  3279,
    3287,  3292,  3296,  3301,  3305,  3309,  3325,  3329,  3340,  3341,
    3346,  3356,  3366,  3371,  3379,  3386,  3399,  3398,  3413,  3415,
    3428,  3448,  3467,  3487,  3504,  3509,  3518,  3523,  3535,  3547,
    3561,  3577,  3581,  3588,  3597,  3605,  3616,  3617,  3621,  3625,
    3629,  3633,  3637,  3642,  3646,  3654,  3653,  3685,  3684,  3693,
    3702,  3703,  3709,  3715,  3725,  3731,  3739,  3741,  3750,  3751,
    3755,  3761,  3770,  3771,  3779,  3779,  3837,  3838,  3839,  3840,
    3841,  3842,  3843,  3844,  3845,  3846,  3847,  3848,  3849,  3853,
    3867,  3886,  3887,  3891,  3892,  3897,  3899,  3901,  3903,  3905,
    3907,  3909,  3915,  3916,  3917,  3921,  3925,  3932,  3939,  3940,
    3947,  3949,  3953,  3954,  3958,  4009,  4011,  4015,  4016,  4020,
    4070,  4071,  4072,  4073,  4077,  4078,  4082,  4083,  4088,  4091,
    4115,  4214,  4232,  4231,  4310,  4306,  4383,  4384,  4389,  4391,
    4396,  4419,  4430,  4434,  4456,  4457,  4461,  4465,  4478,  4484,
    4490,  4499,  4512,  4538,  4544,  4545,  4551,  4552,  4557,  4563,
    4576,  4578,  4580,  4586,  4588,  4590,  4592,  4594,  4596,  4598,
    4600,  4602,  4604,  4606,  4608,  4613,  4627,  4644,  4645,  4647,
    4652,  4658,  4667,  4673,  4682,  4690,  4718,  4726,  4728,  4737,
    4742,  4748,  4757,  4765,  4767,  4769,  4771,  4773,  4775,  4777,
    4779,  4781,  4783,  4785,  4787,  4789,  4794,  4814,  4838,  4842,
    4850,  4851,  4852,  4853,  4854,  4855,  4856,  4857,  4858,  4859,
    4860,  4861,  4862,  4867,  4866,  4877,  4877,  4942,  4941,  4998,
    4998,  5020,  5077,  5124,  5148,  5147,  5172,  5194,  5196,  5197,
    5201,  5219,  5240,  5248,  5286,  5240,  5314,  5316,  5317,  5321,
    5322,  5327,  5337,  5326,  5389,  5388,  5402,  5403,  5407,  5408,
    5413,  5421,  5412,  5471,  5479,  5470,  5525,  5538,  5543,  5542,
    5580,  5581,  5586,  5585,  5619,  5619,  5638,  5637,  5685,  5700,
    5708,  5699,  5766,  5774,  5763,  5816,  5818,  5823,  5825,  5827,
    5842,  5843,  5850,  5851,  5858,  5859,  5863,  5869,  5878,  5879,
    5880,  5881,  5882,  5883,  5884,  5885,  5886,  5887,  5888,  5892,
    5893,  5897,  5903,  5912,  5913,  5914,  5915,  5916,  5917,  5918,
    5922,  5923,  5927,  5933,  5942,  5946,  5947,  5951,  5957,  5966,
    5967,  5968,  5969,  5970,  5971,  5972,  5976,  5977,  5981,  5987,
    5996,  5997,  5998,  6002,  6006,  6007,  6011,  6015,  6022,  6029,
    6033,  6040,  6047,  6054,  6061,  6068,  6075,  6082,  6089,  6093,
    6100,  6107,  6114,  6115,  6190,  6196,  6200,  6205,  6210,  6216,
    6224,  6234,  6235,  6249,  6257,  6261,  6265,  6269,  6273,  6277,
    6284,  6285,  6290,  6291,  6309,  6310,  6322,  6323,  6328,  6337,
    6338,  6343,  6349,  6359,  6360,  6372,  6373,  6377,  6383,  6392,
    6401,  6404,  6409,  6417,  6418,  6422,  6426,  6433,  6440,  6450,
    6449,  6467,  6473,  6482,  6483,  6488,  6489,  6493,  6499,  6508,
    6515,  6516,  6520,  6526,  6535,  6537,  6539,  6541,  6543,  6545,
    6547,  6549,  6558,  6559,  6563,  6564,  6585,  6586,  6590,  6591,
    6595,  6600,  6605,  6620,  6621,  6625,  6631,  6640,  6646,  6654,
    6656,  6660,  6664,  6668,  6672,  6676,  6680,  6693,  6697,  6701,
    6705,  6709,  6713,  6717,  6721,  6725,  6743,  6747,  6751,  6755,
    6759,  6763,  6767,  6771,  6775,  6779,  6783,  6787,  6791,  6795,
    6799,  6803,  6817,  6821,  6825,  6829,  6836,  6850,  6854,  6858,
    6862,  6866,  6867,  6868,  6869,  6870,  6871,  6875,  6876,  6877,
    6881,  6882,  6883,  6884,  6888,  6894,  6903,  6904,  6908,  6915,
    6916,  6924,  6930,  6936,  6941,  6951,  6959,  6967,  6971,  6972,
    6976,  6977,  6981,  6982,  6986,  6990,  6994,  7015,  7017,  7021,
    7022,  7023,  7027,  7031,  7035,  7039,  7043,  7047,  7051,  7055,
    7060,  7065,  7074,  7083,  7087,  7091,  7096,  7105,  7109,  7132,
    7136,  7140,  7144,  7148,  7152,  7156,  7157,  7161,  7165,  7169,
    7174,  7179,  7184,  7189,  7194,  7198,  7202,  7207,  7211,  7218,
    7220,  7222,  7224,  7226,  7228,  7230,  7232,  7237,  7238,  7242,
    7243,  7247,  7248,  7249,  7250,  7251,  7255,  7256,  7257,  7258,
    7259,  7263,  7268,  7272,  7274,  7278,  7279,  7280,  7281,  7286,
    7290,  7299,  7303,  7308,  7312,  7321,  7322,  7326,  7327,  7328,
    7336,  7337,  7341,  7345,  7349,  7350,  7351,  7360,  7361,  7362,
    7363,  7366,  7367,  7372,  7376,  7380,  7381,  7385,  7404,  7423,
    7427,  7431,  7435,  7439,  7443,  7447,  7451,  7455,  7459,  7463,
    7467,  7471,  7475,  7479,  7483,  7492,  7497,  7510,  7514,  7518,
    7525,  7526,  7527,  7531,  7532,  7533,  7537,  7543,  7547,  7551,
    7552,  7556,  7565,  7569,  7570,  7574,  7583,  7587,  7588,  7592,
    7598,  7602,  7603,  7607,  7608,  7613,  7617,  7622,  7630,  7639,
    7646,  7657,  7661,  7666,  7671,  7676,  7683,  7689,  7700,  7701,
    7709,  7708,  7720,  7722,  7726,  7741,  7742,  7746,  7753,  7763,
    7764,  7765,  7766,  7771,  7775,  7780,  7785,  7791,  7800,  7801,
    7802,  7803,  7804,  7808,  7809,  7813,  7814,  7818,  7819,  7823,
    7824,  7825,  7829,  7830,  7834,  7835,  7839,  7845,  7854,  7855,
    7869,  7870,  7874,  7880,  7889,  7893,  7894,  7898,  7904,  7913,
    7914,  7919,  7920,  7924,  7928,  7932,  7956,  7957,  7958,  7962,
    7963,  7967,  7968,  7972,  7973,  7977,  7978,  7979,  7983,  7989,
    7999,  8005,  8020,  8026,  8036,  8037,  8046,  8047,  8051,  8057,
    8069,  8079,  8093,  8092,  8113,  8112,  8134,  8133,  8155,  8154,
    8173,  8167,  8190,  8189,  8225,  8247,  8266,  8286,  8294,  8316,
    8340,  8351,  8354,  8366,  8378,  8383,  8395,  8407,  8418,  8425,
    8433,  8434,  8438,  8448,  8458,  8463,  8470,  8479,  8480,  8484,
    8485,  8489,  8495,  8501,  8509,  8524,  8532,  8540,  8547,  8554,
    8561,  8568,  8574,  8580,  8586,  8598,  8610,  8619,  8620,  8624,
    8625,  8629,  8635,  8641,  8647,  8656,  8669,  8670,  8671,  8672,
    8676,  8677,  8689,  8690,  8694,  8695,  8699,  8700,  8715,  8720,
    8728,  8732,  8740,  8744,  8749,  8750,  8759,  8763,  8774,  8778,
    8782,  8786,  8790,  8795,  8800,  8805,  8810,  8817,  8821,  8825,
    8829,  8834,  8839,  8844,  8849,  8853,  8860,  8861,  8865,  8869,
    8876,  8877,  8885,  8892,  8897,  8901,  8906,  8917,  8918,  8926,
    8930,  8934,  8938,  8942,  8946,  8951,  8955,  8959,  8963,  8967,
    8971,  8975,  8979,  8983,  8987,  8992,  8996,  9000,  9004,  9008,
    9012,  9016,  9020,  9024,  9030,  9034,  9041,  9046,  9051,  9059,
    9060,  9065,  9070,  9076,  9085,  9089,  9093,  9110,  9114,  9118,
    9134,  9136,  9140,  9141,  9145,  9146,  9147,  9151,  9152,  9153,
    9157,  9158,  9159,  9160,  9164,  9165,  9173,  9181,  9183,  9187,
    9188,  9192,  9193,  9194,  9198,  9210,  9223,  9230,  9231,  9235,
    9250,  9265,  9249,  9289,  9306,  9309,  9316,  9320,  9327,  9331,
    9335,  9342,  9345,  9352,  9355,  9362,  9365,  9372,  9375,  9383,
    9386,  9393,  9397,  9404,  9408,  9416,  9420,  9445,  9446,  9447,
    9452,  9457,  9464,  9478,  9479,  9480,  9484,  9493,  9494,  9498,
    9499,  9507,  9508,  9509,  9513,  9523,  9524,  9543,  9548,  9555,
    9565,  9573,  9581,  9582,  9586,  9587,  9595,  9597,  9599,  9601,
    9603,  9605,  9610,  9617,  9618,  9619,  9624,  9623,  9629,  9636,
    9641,  9649,  9650,  9654,  9667,  9671,  9680,  9686,  9695,  9702,
    9703,  9707,  9712,  9719,  9725,  9734,  9741,  9748,  9749,  9759,
    9760,  9764,  9768,  9773,  9777,  9813,  9817,  9821,  9825,  9829,
    9868,  9874,  9881,  9887,  9894,  9899,  9905,  9913,  9917,  9921,
    9925,  9929,  9937,  9938,  9939,  9946,  9951,  9955,  9967,  9989,
   10013, 10014, 10018, 10022, 10023, 10027, 10033, 10042, 10049, 10061,
   10064, 10068, 10073, 10077, 10081, 10090, 10096, 10105, 10109, 10113,
   10120, 10121, 10125, 10129, 10130, 10134, 10135, 10139, 10145, 10151,
   10161, 10162, 10170, 10171, 10172, 10173, 10174, 10178, 10179, 10184,
   10190, 10195, 10201, 10205, 10209, 10213, 10217, 10221, 10225, 10229,
   10233, 10237, 10241, 10245, 10258, 10262, 10266, 10271, 10275, 10282,
   10286, 10295, 10299, 10303, 10307, 10315, 10319, 10323, 10328, 10333,
   10341, 10349, 10353, 10354, 10358, 10362, 10366, 10370, 10374, 10378,
   10382, 10386, 10390, 10394, 10398, 10402, 10406, 10410, 10414, 10418,
   10419, 10423, 10424, 10431, 10432, 10436, 10437, 10441, 10442, 10443,
   10444, 10445, 10446, 10447, 10451, 10452, 10456, 10457, 10458, 10459,
   10460, 10461, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10475,
   10479, 10483, 10487, 10491, 10495, 10496, 10500, 10504, 10508, 10512,
   10516, 10521, 10525, 10529, 10537, 10541, 10545, 10549, 10553, 10557,
   10562, 10569, 10580, 10581, 10591, 10595, 10599, 10603, 10607, 10611,
   10615, 10619, 10623, 10627, 10634, 10638, 10642, 10646, 10650, 10654,
   10658, 10662, 10666, 10671, 10676, 10681, 10685, 10689, 10693, 10697,
   10702, 10706, 10725, 10729, 10733, 10737, 10741, 10746, 10751, 10755,
   10759, 10764, 10768, 10772, 10776, 10780, 10784, 10788, 10792, 10797,
   10801, 10805, 10809, 10813, 10824, 10827, 10838, 10842, 10846, 10850,
   10854, 10858, 10862, 10866, 10870, 10874, 10878, 10882, 10886, 10890,
   10894, 10898, 10902, 10906, 10910, 10914, 10918, 10922, 10926, 10930,
   10936, 10942, 10948, 10954, 10960, 10964, 10982, 10986, 10993, 10995,
   11008, 11009, 11013, 11014, 11018, 11019, 11023, 11029, 11038, 11045,
   11046, 11050, 11054, 11058, 11062, 11066, 11076, 11086, 11090, 11094,
   11098, 11102, 11106, 11110, 11119, 11123, 11127, 11131, 11135, 11139,
   11143, 11147, 11151, 11155, 11165, 11169, 11173, 11177, 11181, 11185,
   11189, 11200, 11211, 11215, 11219, 11232, 11236, 11248, 11249, 11253,
   11254, 11255, 11260, 11263, 11271, 11274, 11278, 11287, 11290, 11294,
   11302, 11305, 11312, 11319, 11323, 11330, 11337, 11344, 11365, 11368,
   11376, 11379, 11387, 11390, 11398, 11401, 11410, 11415, 11422, 11426,
   11430, 11434, 11438, 11445, 11452, 11456, 11460, 11464, 11468, 11476,
   11479, 11483, 11487, 11491, 11497, 11498, 11499, 11503, 11510, 11520,
   11524, 11532, 11533, 11538, 11543, 11547, 11548, 11552, 11557, 11567,
   11574, 11581, 11600, 11608, 11615, 11622, 11629, 11636, 11643, 11650,
   11657, 11664, 11671, 11678, 11686, 11693, 11700, 11707, 11714, 11721,
   11728, 11735, 11745, 11746, 11750, 11756, 11765, 11766, 11770, 11776,
   11785, 11786, 11790, 11791, 11795, 11803, 11812, 11813, 11814, 11827,
   11828, 11909, 11913, 11918, 11922, 11926, 11936, 11943, 11944, 11945,
   11949, 11950, 11951, 11952, 11955, 11956, 11959, 11961, 11964, 11966,
   11974, 11975, 11979, 12008, 12009, 12010, 12011, 12013, 12015, 12019,
   12020, 12029, 12030, 12034, 12041, 12042, 12046, 12059, 12070, 12086,
   12093, 12099, 12108, 12112, 12122, 12129, 12132, 12143, 12147, 12152,
   12157, 12166, 12167, 12178, 12181, 12184, 12188, 12192, 12200, 12203,
   12204, 12205, 12209, 12210, 12214, 12220, 12229, 12230, 12238, 12239,
   12243, 12248, 12254, 12258, 12264, 12273, 12279, 12287, 12291, 12300,
   12312, 12313, 12314, 12315, 12316, 12317, 12318, 12319, 12320, 12321,
   12322, 12323, 12327, 12328, 12329, 12330, 12331, 12332, 12333, 12334,
   12335, 12339, 12340, 12341, 12342, 12345, 12347, 12351, 12352, 12355,
   12357, 12361, 12362, 12366, 12370, 12371, 12378, 12382, 12389, 12394,
   12403, 12420, 12428, 12435, 12441, 12451, 12454, 12461, 12467, 12476,
   12490, 12491, 12498, 12503, 12514, 12515, 12530, 12535, 12545, 12552,
   12553, 12557, 12564, 12569, 12579, 12580, 12584, 12585, 12589, 12590,
   12594, 12601, 12607, 12613, 12622, 12626, 12630, 12634, 12638, 12645,
   12646, 12650, 12651, 12652, 12653, 12654, 12655, 12659, 12660, 12661,
   12662, 12663, 12667, 12668, 12669, 12670, 12671, 12675, 12676, 12677,
   12678, 12679, 12683, 12688, 12689, 12693, 12699, 12708, 12712, 12719,
   12726, 12732, 12736, 12744, 12757, 12773, 12782, 12792, 12815, 12850,
   12857, 12872, 12882, 12897, 12906, 12917, 12937, 12959, 12982, 12990,
   12997, 13004, 13010, 13019, 13025, 13034, 13035, 13039, 13040, 13044,
   13045, 13049, 13055, 13064, 13065, 13072, 13092, 13112, 13130, 13143,
   13160, 13176, 13177, 13178, 13187, 13191, 13192, 13203, 13205, 13209,
   13214, 13219, 13227, 13232, 13237, 13245, 13251, 13260, 13267, 13268,
   13272, 13276, 13277, 13281, 13286, 13296, 13301, 13310, 13311, 13314,
   13316, 13320, 13324, 13329, 13334, 13338, 13344, 13353, 13354, 13362,
   13366, 13380, 13384, 13393, 13410, 13411, 13415, 13422, 13434, 13442,
   13443, 13449, 13462, 13472, 13485, 13487, 13491, 13492, 13496, 13497,
   13498, 13502, 13508, 13510, 13514, 13515, 13519, 13520, 13524, 13525,
   13526, 13527, 13528, 13529, 13530, 13531, 13532, 13536, 13537, 13549,
   13555, 13562, 13569, 13576, 13583, 13590, 13597, 13604, 13611, 13618,
   13635, 13642, 13649, 13656, 13663, 13671, 13688, 13695, 13702, 13709,
   13716, 13723, 13734, 13741, 13748, 13755, 13762, 13769, 13776, 13783,
   13787, 13791, 13798, 13805, 13812, 13819, 13826, 13835, 13842, 13849,
   13856, 13863, 13870, 13877, 13884, 13891, 13898, 13899, 13903, 13904,
   13907, 13909, 13913, 13914, 13918, 13919, 13923, 13924, 13928, 13929,
   13930, 13931, 13935, 13936, 13940, 13941, 13945, 13946, 13950, 13951,
   13952, 13957, 13964, 13971, 13972, 13973, 13974, 13975, 13976, 13983,
   13984, 13989, 13992, 14008, 14026, 14036, 14037, 14042, 14050, 14049,
   14062, 14061, 14075, 14079, 14080, 14093, 14092, 14115, 14116, 14121,
   14123, 14125, 14127, 14129, 14131, 14137, 14139, 14141, 14143, 14145,
   14147, 14152, 14153, 14158, 14157, 14164, 14174, 14175, 14180, 14185,
   14195, 14194, 14206, 14205, 14213, 14212, 14232, 14233, 14237, 14238,
   14253, 14252, 14263, 14267, 14271, 14285, 14297, 14298, 14299, 14305,
   14316, 14355, 14356, 14360, 14361, 14365, 14366, 14367, 14371, 14372,
   14376, 14377, 14381, 14382, 14386, 14391, 14395, 14400, 14406, 14411,
   14419, 14420, 14424, 14429, 14433, 14438, 14446, 14447, 14451, 14452,
   14456, 14457, 14461, 14462, 14463, 14467, 14473, 14482, 14483, 14490,
   14491, 14495, 14503, 14523, 14544, 14549, 14555, 14560, 14568, 14575,
   14582, 14592, 14611, 14612, 14613, 14623, 14624, 14628, 14643, 14644,
   14645, 14646, 14650, 14654, 14658, 14662, 14666, 14673, 14674, 14678,
   14679, 14683, 14694, 14695, 14696, 14701, 14705, 14709, 14716, 14717,
   14726, 14727, 14731, 14735, 14745, 14752, 14759, 14763, 14767, 14771,
   14775, 14779, 14788, 14794, 14805, 14811, 14822, 14823, 14853, 14866,
   14879, 14895, 14911, 14928, 14932, 14933, 14940, 14956, 14957, 14968,
   14969, 14979, 14980, 14991, 14992, 15002, 15003, 15004, 15008, 15009,
   15010, 15014, 15019, 15027, 15031, 15044, 15049, 15057, 15081, 15082,
   15083, 15084, 15085, 15092, 15093, 15094, 15101, 15102, 15103, 15104,
   15105, 15106, 15107, 15108, 15109, 15110, 15111, 15112, 15113, 15114,
   15115, 15116, 15117, 15118, 15119, 15120, 15121, 15122, 15123, 15124,
   15125, 15126, 15127, 15128, 15129, 15130, 15131, 15132, 15133, 15134,
   15135, 15150, 15151, 15152, 15159, 15160, 15161, 15162, 15163, 15164,
   15165, 15166, 15167, 15175, 15176, 15177, 15178, 15179, 15180, 15181,
   15182, 15183, 15184, 15185, 15186, 15187, 15188, 15189, 15190, 15191,
   15192, 15193, 15194, 15195, 15196, 15197, 15198, 15199, 15200, 15201,
   15202, 15203, 15204, 15205, 15206, 15207, 15208, 15209, 15210, 15211,
   15212, 15213, 15214, 15215, 15216, 15217, 15218, 15219, 15220, 15221,
   15222, 15223, 15224, 15225, 15226, 15227, 15228, 15229, 15230, 15231,
   15232, 15233, 15234, 15235, 15236, 15237, 15238, 15239, 15240, 15241,
   15242, 15243, 15244, 15245, 15246, 15247, 15248, 15249, 15250, 15251,
   15252, 15253, 15254, 15255, 15256, 15257, 15258, 15259, 15260, 15261,
   15262, 15263, 15264, 15265, 15266, 15267, 15268, 15269, 15270, 15271,
   15272, 15273, 15274, 15275, 15276, 15277, 15278, 15279, 15280, 15281,
   15282, 15283, 15284, 15285, 15286, 15287, 15288, 15289, 15290, 15291,
   15292, 15293, 15294, 15295, 15296, 15297, 15298, 15299, 15300, 15301,
   15302, 15303, 15304, 15305, 15306, 15307, 15308, 15309, 15310, 15311,
   15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321,
   15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331,
   15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340, 15341,
   15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351,
   15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360, 15361,
   15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371,
   15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379, 15380, 15381,
   15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389, 15390, 15391,
   15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15400, 15401,
   15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410, 15411,
   15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419, 15420, 15421,
   15422, 15423, 15424, 15425, 15426, 15427, 15428, 15429, 15430, 15431,
   15432, 15433, 15434, 15435, 15436, 15437, 15438, 15439, 15440, 15441,
   15442, 15443, 15444, 15445, 15446, 15447, 15448, 15449, 15450, 15451,
   15452, 15453, 15454, 15455, 15456, 15457, 15458, 15459, 15460, 15461,
   15462, 15463, 15464, 15465, 15466, 15467, 15468, 15469, 15470, 15471,
   15472, 15473, 15474, 15475, 15476, 15477, 15478, 15479, 15480, 15481,
   15482, 15483, 15484, 15485, 15486, 15487, 15488, 15489, 15490, 15491,
   15492, 15493, 15494, 15495, 15496, 15497, 15498, 15499, 15500, 15501,
   15502, 15503, 15504, 15505, 15506, 15507, 15508, 15509, 15510, 15511,
   15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519, 15520, 15521,
   15522, 15523, 15524, 15525, 15526, 15527, 15528, 15529, 15530, 15531,
   15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539, 15540, 15541,
   15542, 15543, 15544, 15545, 15546, 15547, 15548, 15549, 15550, 15551,
   15552, 15553, 15554, 15555, 15556, 15557, 15558, 15559, 15560, 15561,
   15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569, 15570, 15571,
   15572, 15573, 15574, 15575, 15576, 15577, 15578, 15579, 15580, 15581,
   15582, 15583, 15584, 15585, 15586, 15587, 15588, 15589, 15590, 15591,
   15592, 15593, 15594, 15595, 15596, 15597, 15598, 15610, 15611, 15612,
   15624, 15625, 15626, 15627, 15636, 15637, 15638, 15639, 15640, 15651,
   15660, 15664, 15668, 15672, 15679, 15687, 15695, 15707, 15711, 15716,
   15721, 15726, 15731, 15736, 15744, 15745, 15749, 15753, 15760, 15766,
   15775, 15780, 15787, 15797, 15798, 15803, 15807, 15815, 15819, 15823,
   15824, 15825, 15826, 15827, 15831, 15832, 15833, 15834, 15838, 15839,
   15840, 15841, 15845, 15846, 15847, 15848, 15849, 15850, 15855, 15864,
   15868, 15872, 15878, 15882, 15889, 15893, 15900, 15904, 15917, 15924,
   15928, 15940, 15944, 15951, 15958, 15959, 15963, 15970, 15971, 15975,
   15976, 15980, 15981, 15982, 15983, 15987, 15988, 15989, 15993, 15997,
   16001, 16005, 16015, 16014, 16027, 16037, 16038, 16042, 16043, 16047,
   16075, 16076, 16077, 16082, 16087, 16086, 16099, 16110, 16118, 16125,
   16132, 16148, 16152, 16156, 16159, 16162, 16177, 16192, 16202, 16206,
   16210, 16219, 16230, 16246, 16247, 16251, 16252, 16253, 16254, 16258,
   16259, 16260, 16261, 16262, 16268, 16273, 16289, 16288, 16307, 16312,
   16323, 16328, 16345, 16344, 16361, 16374, 16375, 16376, 16377, 16380,
   16382, 16386, 16392, 16401, 16408, 16410, 16412, 16414, 16416, 16418,
   16420, 16422, 16424, 16426, 16428, 16430, 16432, 16434, 16436, 16438,
   16440, 16445, 16447, 16461, 16463, 16465, 16467, 16469, 16471, 16473,
   16475, 16477, 16479, 16481, 16483, 16485, 16487, 16492, 16493, 16496,
   16498, 16502, 16503, 16507, 16517, 16527, 16540, 16554, 16566, 16578,
   16590, 16607, 16613, 16622, 16628, 16637, 16638, 16642, 16643, 16647,
   16657, 16666, 16680, 16687, 16701, 16710, 16711, 16716, 16725, 16726,
   16727, 16728, 16729, 16730, 16734, 16747, 16761, 16775, 16789, 16804,
   16819, 16825, 16831, 16840, 16851, 16862, 16869, 16876, 16887, 16894,
   16901, 16908, 16916, 16922, 16930, 16947, 16955, 16969, 16980, 17003,
   17017, 17022, 17030, 17035, 17043, 17044, 17048, 17054, 17062, 17064,
   17068, 17072, 17076, 17083, 17084, 17089, 17090, 17094, 17095, 17099,
   17104, 17106, 17111, 17112, 17120, 17119, 17129, 17130, 17135, 17136,
   17137, 17142, 17143, 17144, 17148, 17149, 17153, 17165, 17174, 17184,
   17193, 17207, 17208, 17209, 17213, 17217, 17221, 17228, 17229, 17230,
   17231, 17232, 17233, 17234, 17240, 17251, 17260, 17262, 17264, 17269,
   17270, 17271, 17272, 17273, 17277, 17278, 17279, 17280, 17281, 17282,
   17292, 17293, 17298, 17311, 17324, 17326, 17328, 17333, 17338, 17340,
   17342, 17348, 17349, 17351, 17357, 17356, 17396, 17447, 17448, 17449,
   17450, 17460, 17462, 17468, 17473, 17492, 17481, 17560, 17594, 17634,
   17660, 17666, 17707, 17630, 17775, 17796, 17801, 17809, 17772, 17830,
   17835, 17840, 17845, 17850, 17855, 17863, 17864, 17867, 17876, 17886,
   17904, 17905, 17909, 17910, 17911, 17915, 17916, 17921, 17922, 17924,
   17929, 17935, 17944, 17950, 17959, 17965, 17974, 17991, 18000, 18022,
   18026, 18034, 18037, 18041, 18048, 18049, 18054, 18060, 18064, 18071,
   18081, 18088, 18101, 18102, 18106, 18107, 18115, 18116, 18121, 18129,
   18130, 18135
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_source", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@55",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@56", "grant",
  "$@57", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@58", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@59", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1200,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1201,  1202,  1203,   124,    38,    45,
      43,    42,    47,    37,    94,   126,  1204,    40,    41,  1205,
      59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4687

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4687)))

#define YYTABLE_NINF -3000

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6364,  3012,  1448, -4687,   -17,   392, 72184,   215,  2221,  2221,
     -18,  4109, -4687, -4687, -4687, 12624,  4406, -4687, 72184,  1448,
     615, 48514, 72184, -4687,   677,  2300,   926,  1192,   341,   208,
    1448, 72184, -4687,   796,    38,  1448,  1853,   620, 64294, 49303,
     -18, 72184,  3030, 30342,  9331, -4687, 64294,   842,   454, 72184,
     834,  1098,  1257, 72184,  1315, 65083,  1850, 22368,  2485,  1384,
    1020,   328, -4687, 16684,  2926,  1868, -4687,  1812, -4687, -4687,
    1503, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, 56404, -4687,   355,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687,  2156,  1340,  1570, -4687, -4687, -4687,
   -4687,  1848, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687,   235, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, 65872, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  1861,
   72184,  1924, 72184,  1214,  1944, 72184, 62716, 72184, 72184,  1630,
    2011,  2039,  2179, -4687, -4687,  2262, -4687, -4687,  2221,   -18,
   -4687, -4687, 72184, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  1617, -4687,  1681, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,   257,  1941, -4687, -4687, 72184, 72184, -4687,  2453,  2340,
    2293,  2377,  2153, 62716,   184, 72184, -4687,  2050, -4687,  2340,
    2340,  2408,  2395,  2075, -4687, -4687, -4687,  2262,  2646, -4687,
    1839,  1875,  1895, 22368, -4687,  1900,  1926,  1932, 16684,  1938,
    1957,  1962,  2007,  2014,  2033,  2042,  2066,  2066,  2074,  2108,
    2113,  2135,   955,  2150, -4687,  2161,  1020,  2186, -4687, -4687,
    2213,  2222,  2224,  2232, -4687,  2243,  2261,  2267, 17496,  2276,
    2279, -4687, 41388,  2288,  2309,  2312,  2326,  2328,  2339,  2358,
    2360,  2367, -4687, -4687, 16684,  2074, -4687, -4687, -4687,  2387,
    2388,  2389,  2404,  2407,  2410,  2415,  2416,  2421,  2427,  2438,
    2446,  2450,  2451,  2452,  2458,  2074, -4687,  1128,  2459,  2477,
    1163,  2486, -4687,  2501, -4687,   409,  2503,  2066,  2074,  2074,
    2504,  2522,  2529,  2530,  2531,  2542,  2550,  2551,  2556,  2562,
    2565,  2572,  2577,  2580,  2582,  2585,  2587,  2588,  2595,  2603,
    2617,  2619, 22368, 22368, -4687, 22368, 10188, 31131, -4687, 72184,
   -4687, -4687,  1939, -4687, 51670,  2798, -4687,  3239, 22368,  1286,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  2149, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
     999, -4687,  2628,  1966, -4687, -4687,  2011,  2011,  2011, 72184,
    2583,  2011,  2011,  2141, 72184,  2011,  2413,  2011,  2011,  2011,
    2888,  2221, -4687, -4687, -4687, -4687,  2976,  2695,  2642,  2670,
   -4687,  2607, -4687, -4687, -4687,  2884, -4687,  2629, -4687,  2713,
   -4687,  2973,  2629, -4687,   564,  2629,   229, -4687, -4687, -4687,
    2629, -4687, -4687, -4687, -4687,  1689, -4687, -4687, -4687, -4687,
     824, -4687,  3031,   145, 62716,  3216, -4687, -4687, -4687,  3211,
   72184,   -17, -4687, -4687, 16684, -4687,  3199, -4687,   424,  3252,
   -4687,  2221,  3261,   432, 72184, 57193, -4687,  2221, -4687, -4687,
    3217, -4687,   123,   188,  2852, -4687, -4687,  2978, -4687,  2695,
    3103,    85,   310, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, 12624,  3030, -4687, -4687,    98,  2983,  1411,
   -4687, -4687, 52459,  1066, -4687,   261, -4687, 76129, -4687,  3277,
   31920, 54037, -4687,  2688, -4687, -4687, -4687, -4687, -4687, -4687,
   74551,  2691,   274, -4687,  3338, -4687,   939,  2711,  2943,   939,
   57982,  3254,  1679,   482,   382,   256, -4687,  3334, -4687,  2991,
    2972, -4687, -4687,   287,  2784, -4687,  3381, -4687,  3329, -4687,
    3022,  3254, -4687, -4687,   939,  3024,  3280,  3411,  1592,  2304,
     486,     2,  2978, -4687, -4687,    59,   124, -4687,   124, -4687,
    2756, -4687, 72184, 72184,   -17, -4687,  2221, -4687,  2764,  2761,
   -4687, 72184,  2762, -4687,  2769, -4687,   465,   465,   465,  3483,
     465, -4687,   465,  3258,  2772,  2775,  3538,  3431,  2993,  3432,
   -4687,  3393,  3482,  2087,  2793,   356,   159,  1848, -4687, -4687,
    2797, 72184,  2066, -4687,  2801,  1659, -4687, -4687,  2810, -4687,
    2826, -4687,   789,  3449,  3464,  3466, -4687,  2820, -4687, -4687,
   -4687, -4687,    29, 29553,  3386,  2156, -4687,  2037,  3591,   530,
    3254, -4687, 54826,   530,  3254, -4687, -4687,  1340,   997,  1755,
    3344,  3445,  3487, -4687,  2211, 58771,  1380, -4687, -4687, 57193,
   -4687, 72184, 72184,  1580, 62716, -4687, 72184, -4687,  3260,   364,
    8883, 72184,  3479, -4687, 72184, 72184,  3119, -4687, 72184, -4687,
      41, -4687,  1913, 16684, -4687, 72184, -4687, -4687, -4687,   185,
   -4687,   170,   404,   197,  2311, 72184, 72184, 72184,  3135,  3467,
   72184,  2956,  3659, 72184, 57193, 79285, 72184, 72184,  2340,  1312,
    1622, -4687, -4687, 16684, 16684,  2073,  3598,  3658,  3658,  3658,
    2660,  3039, 16684, 16684, 16684, 16684, 16684, 16684,  2287,  2871,
   -4687, -4687,   268, -4687,  2874, 16684, 16684, -4687, 16684, 16684,
   72184, -4687,  4571, 16684, 16684,  1182,  3545, 16684, 16684, 16684,
   10188,  6333, 16684, 16684, 72184,  3677,  2876, -4687,  2877,  2297,
   16684, 16684,  2315, 16684, 16684, 16684, 16684, 16684, -4687, -4687,
   16684, 16684, 22368, 16684, 16684, 16684, 16684, 16684, 16684,  2883,
   16684,  3658,  3658, 16684, 16684,  2325, -4687, -4687, 16684,  2681,
    2681, -4687, 16684, 11000, 16684, -4687, -4687, -4687,  2889, -4687,
   -4687, -4687, 72184,  3658,  3658, 16684, 16684, 16684,  3658,  3658,
   16684,  2890,  2894, 16684, 16684, 16684, 16684, 16684, 28764,  2895,
    2897,  2898, 22368,  2359,  3598,  3598,  3598,   857,   279,   161,
     199,  1606,  3195, 16684, 16684, -4687, -4687, 66661, -4687, -4687,
   -4687, 16684, -4687, 16684, 16684, -4687, -4687, -4687, -4687, -4687,
   -4687,  1661, -4687, -4687, -4687, 18308, 22368, 22368,  2904, 22368,
   22368, -4687, -4687, 22368, 22368, 22368,  3437,  3047, 22368, 22368,
   23180, 23992, 22368, 22368, 22368, 22368,  1213,  3598, 62716, 22368,
   -4687, -4687,  2149,  2149, 16684, 44544, 72184, 72184, 72184,  3339,
   72184, 72184, 62716,  3007,  1277, 72184, 72184, 57193, 72184, 79285,
   72184,  2011,  3106,  4586, 34287, -4687, -4687, -4687, -4687, -4687,
    3159, -4687, -4687, -4687, -4687, -4687, 72184, -4687, -4687, 57193,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, 62716, -4687,   266,
   57193, 50092,   203, -4687, 72973, 72184, -4687,   -17, -4687,  3217,
    3207, -4687,  2911,  2660,  3676, -4687, -4687,  3446,  3704, 72184,
   72184,   -67, -4687,  3450, -4687, -4687,  2924,  3164, 72184, 72184,
   -4687, 72184, 72184, -4687, -4687, -4687, -4687,  2929, -4687, -4687,
    2149,  4687, -4687,  2938, 57193, 57193,   266,  3267,   197,   190,
   -4687, -4687, 77707, 72184, -4687, -4687, -4687, -4687,  3683, 16684,
   -4687, 57193,  3025,  3185,  3485,    78, -4687,  2948,  2951, -4687,
    3110, -4687, -4687,  2957, -4687,  2961, 72184,  2294,   274, -4687,
   -4687, -4687, -4687, -4687, 72184,  2962,   261, -4687,  2691,   274,
   32709, -4687, 11812,  3525,  2149, 16684, -4687, -4687,  2975,  2340,
   72184, 72184, 72184, 72184, 72184, 57193, 72184, -4687, -4687,  1352,
   -4687, -4687, -4687, -4687, -4687,   939, 72184, -4687, 72184,   939,
   57193, -4687,  1679, 72184,   939, -4687,  3527,  3220, -4687, -4687,
   -4687,  3602, -4687, -4687,  3594,  2977, -4687,  3525, -4687,  1679,
   -4687, -4687,  3596, -4687, -4687, -4687,  1679, -4687, -4687, -4687,
    1679,  1679,  1679,   939,   939, -4687,    80,  3697, -4687,  2986,
   -4687, -4687, -4687, -4687,  2990, -4687,  3596, -4687, -4687,  2911,
   -4687, 19120,  1315,  2762, 72184, 72184,  3778, -4687, -4687,  2996,
   -4687,  3425,  3247, -4687,  3165, -4687, -4687,   230, -4687, 72184,
   16684,  1978, -4687,   161, -4687, 57193,  3675, -4687, -4687, -4687,
     429, -4687,  3657, -4687, -4687,  3013,  3089,  3774,  3042, -4687,
    3376,  3376,  1984, 62716,  3461,  3181,  3107,  3461,   271,  3461,
   -4687, -4687,   786,   806, -4687,  3111,   821,  3111,   784, 57193,
    3201,   -17,   -17,   -17,   355, -4687, -4687,  2283,  3268,  3268,
   62716,  3028, -4687, -4687, -4687,  3350, -4687, -4687,  2037, 16684,
   -4687, -4687,  1848, -4687, -4687, -4687, -4687, -4687,   360, -4687,
   -4687,  1848, -4687,  3254,  3254, -4687, -4687, -4687, -4687, 67450,
    1755,  3211,  3487, -4687, 62716,  3754, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,   345, -4687,
   -4687, 72184, 72184,   320, -4687,  3540,  3846, -4687,  3049,  3747,
     274,   274,  3747,   274,   274, -4687,  3279, -4687,   274,   110,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  3701,
    3588,   274,  1761,  3462,   274,   274,  3789,   274,  3469,  3470,
     274,   274,   274,   274,  3282,  3737, -4687,   274,  3613,   869,
    4022,  3614,   274,  3480, -4687,  1674,  3745,   274,   274,   274,
     274,   274,  3789,  3484,  3837,   274,   274,  3489,  2576,  3490,
    3492,   274,  3317,   274,   274,   274,  1612,   274,   274,  3509,
     274,  3287,  3292,   274, -4687, -4687,   274,   274, -4687,  6244,
   -4687, -4687, -4687,  2555, -4687, -4687,   900, -4687, -4687,  3116,
    3117, -4687, -4687, -4687, -4687,  3419, -4687,  3221, -4687,  3442,
    3304, -4687,  3119,   143, 68239, 72184, -4687, -4687,  3127,  3132,
    2004, -4687,  2660,  3138,  3136, -4687,  3589, 88878, -4687, -4687,
   72184, -4687, -4687, -4687, -4687,  3340, -4687, -4687, -4687, -4687,
    1874, -4687,  3893,  3507, -4687, -4687,  3781, -4687,  3576,  3948,
    3240,  3852,  3580,  2340,  3747,  3351,  3958,   471, -4687,   125,
    2961,  3375,    15, 72184,  3767,  2340,  2340,  2340,  2340, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687,  2340, -4687, -4687, -4687,
   -4687, -4687, -4687,  3119,   288,   398, -4687,  3658,  3160, 16684,
    3170,  3171,  3177, 16684,   447,  1746,   466,  1718,  1774,   597,
     244, 16684,  3183, 13436, -4687,  3184, -4687, -4687,   324,   363,
    1292,  1335,  3186, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,  3784, -4687,   380,  3192, -4687, -4687, -4687,
   -4687,  3189, -4687, 16684,  1513,   411,   420,   249,  3193,   422,
    1857,  1909,  3182, 72184, 72184,  3658,  3194,  1533,  1575,  3658,
    3196,   475,  1613,  1920,  1936,  1945,   504,  1953,  3266,  1651,
     516,   523,  1690,   571,   586, -4687,  1696,  3198,  3202,   636,
     259,  3658,  3205,   276,  3197,  3206,  1751, 14248, 15060, 15872,
     330,   713, -4687,  3213, -4687,  2877,  3214,  3218,   316,   207,
    1763,  3212,  3222,  2005,  3319,  3319,  1772,  1014,  1782,  1014,
    1089, 62716,  3226, -4687, -4687, -4687, -4687,  3319,  3319,  3319,
     164,  3658,  3227,   323, -4687, 16684,  3215,  3231,  3241, 62716,
   16684,   192, -4687, -4687, -4687,  2539,   383, -4687, -4687, -4687,
   -4687, -4687,   224, -4687,  3246, -4687,  1020,  2696,  3225, 10188,
   -4687,  1330,  3225,  3364,  2136,  2136, 22368, -4687,  3264,  3172,
    3113, 17496,   901, 17496,   901,  3225,  3225,  3225, -4687, 22368,
    3265, 22368, 22368, -4687,  3598, -4687, -4687, 51670,  3271,  3262,
   -4687, -4687,  1385, -4687, -4687,  3269, 72184,  1277, -4687, -4687,
    2011, -4687, -4687, -4687,   117, -4687, -4687,   286, -4687,  3263,
     191,  2961,  3827, 72184,  3273, -4687,  3738,  3786,  3798,  3802,
   -4687, -4687, -4687, -4687,  3803, -4687,  3805, -4687, -4687,  3285,
   -4687, 72184, 27975, 62716, -4687,  3288, -4687,  3942, -4687,  3726,
   -4687, -4687,  2052,  3523, -4687, -4687, -4687, -4687, 45338,  -129,
   -4687, -4687, 72184, -4687,   269,   308,  4600,  3474, -4687,  2911,
   72184,   -17,   -17, 72184, -4687,  3874, -4687,   358,  3301, -4687,
    3302, 62716, -4687, -4687,   366, 57193, 57193,  3303, -4687,  3535,
     250,  3719, -4687,  3542,  4107,  4107,   188, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
    3314,  3968,  3919,  3757,  3934,  3263, 45338, -4687, 72184, -4687,
   25598,  3474, -4687,  3938,  3554,  3555,  -100, -4687, 59560, -4687,
    2660,   667,  3376, -4687,  3376,  1963, -4687, -4687,  3883, -4687,
    3707, -4687, 79285, -4687, 62716, 79285,  3947,  3336,  3337,  3341,
    3342,  3343, 75340, 16684, -4687, -4687, -4687, 11812,  3330, -4687,
   75340, -4687, -4687, 22368,  2161, -4687,  2421, -4687,  2660, -4687,
     -17,  3950, -4687,  2660,  3345, 72184, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
    3537,   939, -4687, -4687, -4687, -4687, -4687,  3730,  3254,  2784,
    3950,   939,  4114, -4687,   939, 72184, 72184,   939, -4687, -4687,
   -4687, -4687,  3662,    59,  3571,   124, -4687,  2161,  2660,  3372,
    3369, -4687, -4687, -4687,  2078, -4687,  1020,   465,  3783, -4687,
    3988, -4687, -4687, -4687, -4687, -4687,  1577,  1792, -4687,   166,
     178,  3787,  1132,  3371,   274, -4687, -4687, -4687, -4687,  3790,
     -53, -4687,  3185,  3111,  3111,  3400,  3401, -4687, -4687,  3964,
   78496,  3791,  4051, 62716,  3964,  3185,  4094, -4687,  3185, -4687,
   -4687,  3185, -4687, -4687,  3627,  3628, -4687, -4687,  3629, -4687,
   -4687,  1221,  2661, -4687,  2546,   438, -4687, -4687, -4687, -4687,
   -4687, 72184,  3533, -4687,  2361, -4687, -4687, -4687, -4687,  2835,
   -4687, 33498,  3861,  2020,  3391, -4687, -4687, -4687, 54826, 54826,
   -4687, -4687, -4687, -4687, 72184,    63, -4687,  3392, -4687, 26392,
   -4687,  2844,  3825,   333, -4687, -4687, -4687, -4687, -4687,  2540,
    3300, -4687, -4687,  4146,  3732,  3944,  3615,  3300,  3404,   -17,
    1666, -4687,  2913,   -17,  1666,  2913,  2913, 72184,   -17, -4687,
    2622,   274, -4687, 72184,  2004,  1448,  2004, -4687,   340, 72184,
   42177, 69028, 72184, 72184, 72184, 72184,  1448,  1633,  1633, 72184,
    3002, 69817,  1448,   -17,   -17,   -17,   -17,  2835,   274,  3002,
   -4687, 69817, -4687, 72184, 72184,  3951, 72184,  3955, 72184, 72184,
   -4687, 62716, 72184, 69817, -4687,   274,  1619,  1633, 70606,  1633,
    1633, 72184,  1448, 72184,  2096,   -17,  1448, -4687, 72184, -4687,
   -4687, 72184, 72184,  1448,  1448,  2754, -4687,  2096,  2096,  2634,
   -4687, -4687, 72184,  3002, 69817,  3403, -4687, -4687, 60349,   -17,
     -17, -4687,   274,   274,  3811, -4687, -4687,  4655,  9273,  2187,
     274,  3514,  3844,   386, 72184, -4687,  3550,  3551, -4687, -4687,
   -4687, -4687, -4687,  2004, 69817, 71395,  3975, -4687, 16684,  4065,
    4066,  4068,  4070,  4071,  4072,  4074,    58, -4687,  4075, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  4088,  4089, -4687, -4687,  4090, -4687, -4687,  4091, -4687,
    4092,  4095,  4096,  4099, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  4100,    87,  4101,  4102,  4103,  4104,  4105,  4108,  4110,
    4111,  4112,  4116,  4117,  4119,  4120,  4121,  4123,  4124,  4126,
    4127,  4128,  4129,  4130,  4132,  4134,  4135,  4136, -4687,  4137,
    4138, -4687, -4687, -4687, -4687, -4687, -4687, -4687,   180, 72184,
    3615,  3546,  3626, 72184,  3506, -4687,  3983,  2850,  3747,  3964,
   -4687,  4280, -4687, -4687,  3510, -4687, -4687, -4687,  3647, 57193,
    3839,   274,  1106,  1106,  3929, -4687,  6775,  2340, 72184, 72184,
   72184, 72184, 72184, -4687, 19932, -4687,  3499,  3319,  2660,  3319,
    3319,  3319,   876, 16684, 16684,  4155,  6952,   146, -4687, 61138,
   -4687, -4687, -4687, 61138,  6952,  2086,  3319,  3503, -4687,  4069,
    4073, -4687, -4687, -4687, 16684, 16684, -4687, 16684,   265, -4687,
   16684, 16684, 16684, 16684, 16684, -4687, -4687, 22368, -4687,  3500,
    3511,  3319, -4687, -4687,  3512,  3319, 16684, -4687, -4687, -4687,
   -4687, 16684, -4687, 16684, -4687, 16684, 16684, -4687, 16684, 16684,
   -4687,  3319,  3319, 20744, 16684, 16684,  3518,  3319, -4687, 16684,
   16684, 16684, -4687, 16684,  1965, 16684,  2417, 16684,  2483, 16684,
   -4687, 16684, -4687,  3319,  3319, -4687, 16684,   559, -4687,  3002,
   -4687,  3658,  3319, -4687, 42966, -4687, -4687,   137, 28764,  3526,
     137,  3529, 22368, -4687,  3319, -4687, -4687, -4687,  1474,  3530,
    3319,  2102, -4687, -4687, -4687,  3504, -4687,  2660, -4687, -4687,
   -4687, -4687, -4687, -4687, 22368,   337, 22368,  3364, 22368,  6333,
    6333,  2722, 10188, -4687,  1673,  3364, -4687, -4687, 16684, 16684,
   46132, 72184,  1395, -4687,  3506,  1372, -4687,   107, -4687, -4687,
   57193, -4687, -4687, -4687, -4687, -4687,   191, 62716,  3519, -4687,
   -4687, -4687, -4687, -4687,  3596, -4687,  4721,  3302, -4687,  3753,
    3764,  3768, 31131, -4687, 35865, -4687, -4687, -4687, -4687, 35865,
    1752,   266, -4687, 72184, 57193,  3528,  3532,  3541,  3760,  3689,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  3474,  3539,  3254, -4687,  3719, -4687, -4687,  3543, -4687,
    1913,  3268,   961, 72184, -4687, 16684,   -17, -4687,  3771, -4687,
   72184, 72184, -4687, -4687, -4687, -4687,  1099, -4687,  3549,  3173,
   -4687,  3506, -4687, -4687,  3596,  3596, -4687,  4687, 27975,  3976,
     266, 57193,  4162, -4687, -4687,  3556,  1020, 24804,  3631, -4687,
    3553,  2549, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
    3719,  3115,  4150,  3474, 79285, 79285, 79285, -4687, -4687, -4687,
    3632,  3185,  3111,  3111,   291,  3936, -4687, -4687, -4687, -4687,
    2961, -4687, -4687,  2844, -4687, -4687, -4687, -4687, -4687,   274,
    2660, -4687, 32709, -4687, -4687,  1633,  3254,   393, -4687, 57193,
   -4687,  3999, -4687, -4687,  3254, -4687,   -17, -4687,  1679,  1679,
   -4687, -4687, -4687,  4047,  3770, -4687, -4687, 19120, -4687, 72184,
   -4687,  3572, -4687,  4048, 72184,  4229,  3579, 22368,  3586, 22368,
    2844,  3833,  3592,  4386,  3002,  3268, -4687,  4001, -4687, -4687,
   -4687, -4687,  3907, -4687,  4401, -4687, -4687, -4687,  2961, -4687,
    3461,  2185,  4067,  3111,  4006,  3111,  3111, -4687, -4687, -4687,
   -4687,   772,  3002,  3002,  3002,  3002,  2546, -4687,  1101,  1029,
    1664,  2844,   168,   438, -4687,  3599, -4687, -4687, 61138,  4342,
   -4687, -4687, -4687, -4687, -4687, -4687, 16684, -4687, -4687,   643,
     304,  1068, 26392, 72184, 46926, -4687,  1001, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687,   274, -4687,   274,   -17,
    3889,  3900,  3902,  3903,  3906,  3953, -4687, -4687, 72184,  4076,
   -4687,   -17,  1271,   -17,   -17,   -17,   -17,  3002,   -17,   -17,
    2104, -4687, -4687, -4687,   206, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, 62716, -4687, -4687, -4687, 72184,   387, 72184,  3642,  4187,
    4188,  2004,     6, 72184,  3649,  3840,  3866, 53248, 88738, -4687,
   -4687, -4687,  4098,  4098,  2324,   303, 69817, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, 72184, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,  1874,  3650, -4687,  2844, -4687, -4687, -4687,
   -4687, 55615,   -17, -4687,  3898, -4687, -4687, 72184,  3650, -4687,
   -4687,   690, -4687,  3829,  3909,   -17, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, 88738, 69817,  3661, -4687,
     536, -4687, -4687, -4687, -4687, 69817,  3892,  3894, -4687, 72184,
   69817, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, 72184, -4687, -4687, -4687, -4687,
   59560, 61138, -4687,  3727,  3923,  6244, -4687, -4687, -4687,  3116,
   -4687, -4687, -4687,   286,  4106,   274,  1144,   718, -4687,  4027,
   -4687, -4687,  2769,  4113,  4118,  3671, -4687,  3672, -4687,  3669,
   -4687, 68239,  2660,  3678,  3678,  3682,  3682,  3686,  3686,  3692,
    3589, -4687,  3693,   -17,  3002,   -17, 61927,  3002,  1012,  2844,
    1045,  2844, 88878, -4687,  3002,   -17,   -17,   -17,   -17,  3002,
    3002,  3002,  3002,  3002,   -17,   -17,   -17,   -17,   -17,   -17,
    3002,   -17,   126,   -17,   -17,  3002,  2192,   -17,  3002,   -17,
    1633, -4687,   198, -4687,  3694,  2768,  3506, 62716,  3696, -4687,
    4270,   274,   274,   274,   274, -4687,   315, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,   286,
    4464, -4687,  3720, -4687, 79285, -4687,  3201,   -72, -4687, -4687,
   -4687, -4687, -4687, 72184,  2993, -4687, 72184, -4687, 39810, -4687,
   -4687, -4687, -4687,  2354,   309, -4687,  2037,   997, -4687,  1077,
   72184, -4687,  3699,   907, -4687,  2461, 17496,  1801,  3319, -4687,
   -4687, -4687, -4687, -4687, 16684,  2660,  2655, -4687,  3700,  3700,
    3708, -4687,  3712,  4122,  3700, -4687, -4687, -4687, -4687, -4687,
   -4687,  4442, -4687, -4687, -4687, -4687,  4287,  3708,  4291, -4687,
    3700, -4687,  3809,  4518,  3793,  3733,  3739,  3740,  3319, -4687,
    3319, 16684, 16684,  1813,   357,  1877,  4497,  4052,  1232,  1301,
     359, -4687,  1886,  3440,  3319, -4687,  3319, -4687,  1890,  1896,
    1902,  1908,  1311,  1922,  2159, -4687, -4687, 17496,  1934,   373,
     405,  3319, -4687,  1947,  1399,  1420,  1958, 16684,  1972, 16684,
    1976, 16684,  1988,  1990, -4687, -4687,  1992,  3742,  3742,  3746,
    3743, -4687, 72184, -4687, -4687, -4687, -4687,  3867,  3873,  3319,
    3750,   137,  3319,   137,   144, -4687,  3992,   -42,  3319, -4687,
   -4687, 72184, -4687, -4687, 16684,  1286,   173, -4687, -4687, 22368,
     435, 22368, -4687,  3756, -4687, -4687, -4687, -4687,  4290,  4564,
   -4687, -4687,  4031, -4687, -4687, -4687,  3273, -4687, -4687,   423,
   -4687,  4418,  3769, -4687, -4687, -4687, -4687, -4687, 45338, -4687,
     568,  3782, 47720, 57193,  4195,  3254, 19120, -4687,  3200, 72184,
    2004,  4351,  1568,  3943,  4306, -4687, -4687, -4687,  2660, -4687,
   57193, -4687, -4687, -4687, 72184, 72184,  1315, -4687, 37443, -4687,
   -4687, -4687, -4687,  3785, -4687, -4687, -4687,  4429, -4687,  4393,
   45338,  3263, 57193, 16684,  3115,  3779,  3788,  3792,  3794,  3795,
    3800, 26392, 26392,  4335,  4336, -4687,  4207,  1590,  4207, -4687,
   40599, 26392, 26392,  2731,  2769,  4550,  4382,  4150,  2961,  2961,
    2961,  3376,  3376, -4687, -4687, -4687, -4687, -4687, -4687,   327,
   -4687, 11812, -4687, -4687, -4687, -4687, -4687,  3263, -4687,  3596,
   -4687,  3474,   939,  4450, -4687,  4453, -4687,  3804,  4454,  4214,
   -4687, -4687,  3002, -4687, -4687, 72184,  2518, 72184,  2651, -4687,
    4572,  3812, 22368,  4462,  3816,  4398, -4687, -4687,  3841,  3461,
   -4687,  1120,   644,  3461, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687,  1785,  4529,  2959,  4389,
   -4687, -4687, -4687,  2149,  2149, -4687, -4687, -4687,  1389,  4360,
   -4687, 26392,  3719, 46926,   658, -4687, -4687,  3831, 72184,  2096,
     -17, -4687, -4687, -4687,  4535, -4687,  4536,   394,  4272,  4486,
   -4687, -4687,   368, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687,  3404, -4687,  3842,  2844,  4253,
    3847, 16684, 72184, -4687, -4687, -4687,  3926, -4687, -4687,  3849,
   43755,  1106,  1106,  2170, -4687, -4687, -4687, 88738, -4687,  3700,
    3700,  3700, -4687, -4687,  2028,  3708, -4687, -4687,  3850, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687,  1911,  2168, -4687,
   -4687,  1911, -4687, -4687, -4687,   262,  2204, -4687, -4687, -4687,
   -4687, -4687,  3851, -4687,  3700,  3708,  3708, -4687, -4687,  1911,
    3700, -4687,  3700,  4220,  3956, -4687,   172,  3700,  3700,  3700,
    3856,  3712, -4687, -4687, -4687, -4687, -4687,  4540,   499, -4687,
   88738, -4687, 72184, -4687,  3683,  3683, -4687, -4687, -4687, -4687,
    4115, -4687, -4687,  1770, -4687, 72184, -4687, -4687, 72184, 72184,
      45,  1099,  3860, -4687, -4687, -4687,  3865,    35, -4687,    14,
   -4687, -4687,  3827,   935,  1723,  4097,  2534, -4687, 72184, 72184,
   -4687, -4687, 71395, -4687, 38232, -4687, -4687, 39021, -4687, -4687,
     -93, -4687, -4687,  2180, -4687, -4687,  3002, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, 43755,   274,   274, -4687,   372,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  4288,
   43755,   938, 72184,   -17,  2913,  2913,  2844,  1885, -4687,  3964,
    4456,  2961,   438, -4687, -4687,  3221,  3879, -4687, -4687, 72184,
    2189, -4687, -4687,  4541,  2037, -4687,  4221,  4317, -4687,  1511,
    3888, -4687, -4687,   526,  6333, -4687, -4687,  2660, 16684,  1370,
   -4687, -4687,  1911,  4324, -4687,  1829, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  3895,
    6952,  4452, -4687, -4687, -4687, -4687, -4687,  6333,  6333, -4687,
   -4687, 16684, -4687, 16684,   465,  3899, 16684, 16684, -4687, 16684,
   -4687,  1476,  3901,  4064, -4687, -4687, -4687, -4687, -4687, -4687,
   16684, -4687, -4687,  6333, -4687, 16684, -4687, -4687, 16684, -4687,
   -4687, 16684, 16684, -4687,  1996, -4687,  2010, -4687,  2015, -4687,
   -4687, -4687,  2844,  3908,  3911,  3002,  3319, -4687,  3913,  4301,
   -4687, -4687, -4687, 16684, -4687,  3319, -4687,  3319,  4505,  6952,
    1641, -4687, -4687,  2201, -4687, -4687, -4687, 16684,  1286, -4687,
   -4687, -4687, -4687, -4687, -4687,  4274, -4687,  4539, 35865,  4133,
    4500, -4687, -4687, -4687, -4687,  1296, -4687, -4687,  2247, 72184,
    4690,  4337, -4687,  2004,  4351,  4448, -4687,  4476, -4687, -4687,
   -4687, -4687,  3915,  3650,  3912, -4687,   274,  2854,  2268, -4687,
   -4687, -4687,  3914, 19120,  3916, -4687, 27975, 57193,  4528,  3263,
    1462,  2769, 26392, -4687, -4687, -4687, -4687, -4687,  2549,  3918,
    3928,  3932,  2549, -4687, -4687, -4687,  4468, -4687,  4207,  4207,
    4471,  4472, -4687,  3995,  4282,   549, -4687, 16684, 16684,  4034,
    4382,  3111,  3111,  2844, -4687, -4687, -4687, -4687,   -17,   -17,
    2399,   -17,  4573,  4614, -4687,  2290, -4687, -4687,  2313, -4687,
    4469,  4253, -4687,  3046,  2844, 72184,  4702,  4731,  3964, -4687,
   -4687, -4687,  4354, -4687,  3964, -4687,  2844, -4687,   150, -4687,
   -4687,  3166, -4687, -4687,  4711,  4713,  4611,  4717,  1389, -4687,
    1600, -4687,   658,  3474,  1259, -4687,  3966, -4687,  1159, -4687,
   -4687, -4687, -4687, -4687, -4687,  4293, -4687,  1846, -4687, 43755,
   -4687, 72184,  2333, -4687, 43755,  2034,  3961, -4687, 43755, 16684,
   -4687,  2376, -4687,   187, -4687, -4687, -4687, 53248,  4220, -4687,
   -4687, -4687,  4736,   449, -4687,  4737, -4687,  1911, 61138, -4687,
   -4687, -4687, -4687,   465, -4687,  1375, -4687,  1911, -4687, -4687,
    4149, -4687, -4687, -4687,   465,  1911, -4687, -4687, -4687, -4687,
    1753, 72184,  1770, -4687, -4687, 59560,  2292,   -17,  3505,  4046,
   -4687,  4173, -4687,  4657,   376,  4522,  3506,   274,   274,  4723,
   -4687, -4687,  5307, -4687,  4587,  4526, -4687,   972, -4687,  4756,
   -4687,  1911,  4756,  1753,  4426, -4687,  1753,  1753, -4687,  3516,
   -4687,  1770, -4687, -4687, -4687, 72184, 72184, -4687, -4687, -4687,
   -4687, -4687,  3993, -4687, -4687,  4430,  4106, -4687,  4433, -4687,
   -4687,  4391, -4687, 16684, 16684,  4427, 72184,  4440, -4687,  4732,
    4797,  3650,  1314, -4687, -4687,  2396, -4687, -4687, -4687,  2397,
   -4687, -4687,  4008, -4687,  2412, -4687, -4687, -4687, 72184, -4687,
    2432,  2434, -4687, -4687,  2435,  2913,  2913,  2965,   938,  4012,
    2444,   -17,   -17,   -17,   -17, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687,   385, -4687, -4687, -4687,   168,  3514, 43755,  4015,
    8533, -4687,  1511,  4339, 72184, -4687, -4687, -4687, -4687,  4309,
   -4687, -4687, -4687, -4687,  4451,  1654,  2660,  4019,  4021,  4023,
    4025, -4687,  4026,  2468, -4687,  3809, -4687,  2149,  4028,  4032,
    2080,  4030, -4687, -4687,  3319,  2120,  1471,  2470,  4494,  4578,
   -4687,  4417, -4687,  2155,  1834,  2177,  2209,  2252,  2274, -4687,
   -4687, -4687, -4687, -4687, -4687,  4033, -4687, -4687,  4798,  4461,
    2660, -4687, -4687,   400,   137, -4687,  3552, -4687, -4687,  4041,
    1641, -4687,  4473, -4687,  2475,  4676,  4567, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, 57193,  4470,  4643,  4834,  3474,   183, 72184,  4337,
    4710, -4687, -4687, -4687,  4294, -4687, 72184, 19120, -4687, -4687,
    2854, 72184, 44544,  4053,  3785, -4687,  3263, 57193,  1474, -4687,
     142, -4687, -4687,  4602,  4605, -4687, -4687, 16684,  4057, 16684,
    4058, -4687, -4687,  2004,  2004, -4687,   549, -4687, -4687,  2660,
    1166, -4687,  2660, 72184, -4687,  4034, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,   -17,  4708,  4466, -4687, 72184, -4687,  2043,
    2488, -4687, -4687,  4061,  4062,   -17,  1120, -4687, -4687, -4687,
    4755, -4687, -4687, -4687,  4757,   465,   465,  4828,   465, -4687,
    4830,  4833,  1600, -4687, -4687,  4495,  4495,  4508, -4687,  2491,
    4267, -4687,  4253,  2527, -4687, 72184,  2543,  2286,  1835, 43755,
    4515, -4687, -4687, -4687, -4687, -4687, -4687, 61138, -4687, -4687,
    4756,  2544, -4687, -4687, -4687,  2552, -4687, -4687, -4687, -4687,
   -4687,  1753, -4687,  4081, -4687,   484, -4687, -4687, -4687, -4687,
   -4687,  3753,  3764,  3768,  2192,  2192, 16684, -4687, -4687, -4687,
   -4687, -4687, -4687,  4524,  4273, -4687, -4687, -4687, -4687, -4687,
   -4687,   -17,   -17, -4687, 59560, -4687,  4877,  4874, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687,  4086, -4687, -4687, 16684, -4687,
   -4687,  2202, -4687,  4253, -4687, -4687, -4687, -4687,  2660,  6333,
    4818, -4687, -4687,  4392,   -17,  4758,  2993,  4531, -4687, -4687,
   72184, -4687, 72184, 72184, -4687,   -17,  4139, -4687,  4125, -4687,
    3002,  2212, -4687, -4687, -4687,  3404,  1663, -4687, -4687, -4687,
    4678, 62716, -4687,  1144,  2563, -4687, -4687,  4395,  1723,  4131,
    4140, -4687, 88738,   -17,   157, 72184, -4687, -4687, -4687, -4687,
   -4687, -4687,  4542,  4141,  4890, -4687, -4687, -4687, 16684, -4687,
   -4687, 16684, -4687, -4687,  4574,  4739, -4687, -4687, -4687, -4687,
   -4687, -4687,  4142,  3002, 16684,  4865,  1366, -4687, -4687,  3319,
   -4687, -4687, -4687,  4543,   165, -4687, -4687, -4687,  1296, -4687,
    4534, 57193, -4687,  3254,  4337,  2769, -4687,  4656, 72184, -4687,
   -4687, -4687, -4687, -4687,  4143, -4687, -4687,  3263,   312, -4687,
   -4687, -4687,  2660, 72184,  2660, 72184,  4727,  4727, -4687, -4687,
   16684, -4687,  4904,  4147, -4687, -4687, -4687,   -17,  4766, -4687,
   -4687,  4148,  4386, -4687, -4687,   321, -4687, -4687, -4687, -4687,
   -4687,   465, -4687,   465,   465, -4687,  4651,  4651,  4768,  2212,
    1644,  4011, -4687,  1663,  2570, -4687,  1835,   536,   -17,   274,
     274,   274, -4687,  1835, -4687, -4687, -4687, -4687, -4687,  4145,
   -4687, -4687,  1911,   465,  1911, -4687, 72184,  4613, -4687, -4687,
    2298, -4687, -4687, -4687, -4687, -4687, -4687,  4151,  2306, -4687,
   -4687,  2597, -4687, -4687, -4687, -4687, -4687,  4297, -4687,  4261,
   -4687, -4687, -4687, -4687, 72184, 72184, -4687,  4544,  1395,  2212,
   -4687, -4687,  2604,  1395,  1663, -4687, -4687,  4894,  4917, -4687,
    1835,   -17,  4427, -4687, 72184,  3683, -4687, -4687, -4687, -4687,
    4152,  4153, -4687, 72184,  4751,  4156, -4687,  4835, -4687,  2349,
   -4687, -4687, -4687,  4158,  4159, 16684, -4687, -4687, -4687, -4687,
     444, -4687,  4792, -4687, -4687,  4834, -4687,  4325, -4687, -4687,
   -4687,  4355,  3719,  4160,  4164,  4165,  4170,  1869,  4163,  4172,
   -4687,  4174, 72184, -4687,   -17,  3596, 22368,  4175,  4844,  1756,
   -4687, -4687, -4687, -4687, -4687, 54826, -4687, -4687, -4687, -4687,
    4176,  4411,   274,  4849,  4853,   274,   274,   274,   274,  4183,
    4011, -4687,  4837, -4687,  4220, 72184, -4687, -4687, -4687,  3002,
     -17,   -17, -4687,   536, -4687, -4687, -4687,  2613, -4687,   247,
    4616, -4687, 16684, -4687, -4687,  4463, -4687, 86386,  1825, -4687,
   -4687,  4191,  4179,  2485, -4687, -4687, -4687, -4687, -4687,  3506,
    1395, -4687,  2534, -4687,  4530, -4687, -4687, -4687,  2169, 88738,
    4852, -4687,  3708, -4687, -4687,  3391,  2987,  4520, 16684,  4315,
    4329, -4687, -4687,  4321,  4322, -4687,  4361, -4687, 72184,  2835,
   73762,  3130, -4687, -4687,  4967, -4687,  4970, 71395, 71395, -4687,
   -4687, -4687, -4687,  3096, 72184,   274,  4485, -4687, -4687,  4215,
   -4687, -4687,   -28,   -17,   274,   274,  3506,  3506,  2844, 72184,
    4467, -4687, -4687,   274, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, 72184, -4687, -4687, -4687,   445, -4687,  2351, 16684,  4869,
    4397, 72184,  1827, -4687, 87964, 87964, 72184, -4687, -4687, -4687,
   -4687,  7718, -4687, -4687,  1202, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687,  4993, -4687,  4212, -4687,
   -4687, -4687, -4687,  4968,  4647,  4971, -4687, 72184, -4687, -4687,
   -4687,  4732, 88738, -4687, -4687,  3683,  4551,  4228, 16684,  1849,
   -4687,  5019,  1919,  1927, -4687,  6333, -4687,   219, -4687, -4687,
   -4687, 76918,  3912,  4558,  4338,  2635, -4687, 88724, -4687, -4687,
   -4687,  4233,  2658,  4490,  2659,  3268, -4687, -4687,  2674, -4687,
   21556, -4687, -4687, -4687, -4687,   -17,   -17, -4687, -4687, -4687,
   -4687, 62716,  2701, -4687, 62716, -4687,  1339,  1339,  1531,  2660,
   16684, -4687, 16684,  4412, -4687, -4687,  4847, 72184, -4687, -4687,
   -4687, -4687, 16684, -4687, 86386, 86386, -4687, -4687, -4687, -4687,
    5016,  4666, -4687,  4668,  4246,  4912,  3683,  3593, -4687,   296,
   -4687,  6333, -4687,  2987, -4687, -4687,  4365,  4580, -4687,  4369,
   -4687,  3110, -4687, -4687,  2961,  4836,  4342,  1474, -4687, 73762,
    4364,  3683, -4687, -4687,  2844, -4687,  4490,  4603, -4687,  4215,
   -4687,  2719, -4687,  3364, -4687, -4687,  4011, -4687,  4467, -4687,
   -4687,  5062, -4687,  1300,  4692,  4694, -4687, -4687,  5307,  2660,
    2660, -4687,   513, -4687, -4687,  4826,  4919, 16684,  2660, 82441,
    4265, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, 87175, 16684, -4687,  1202,  4993, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687,  4943, 86386, -4687,
   -4687, 62716, -4687,  1956, -4687, -4687, -4687, -4687, -4687,  5030,
    4360,   312, -4687, -4687,  4913, -4687, -4687, -4687, -4687, -4687,
   21556, -4687, -4687, -4687, -4687, -4687,  4475,  4955, -4687,  4455,
   16684, 86386, -4687,  4932, -4687,  4860,  2660,  4799,  4283, -4687,
    4281,  2660,  4972, 87964, 87964, -4687, -4687, -4687, -4687, -4687,
   86386, -4687,   465,  4867, -4687, -4687,  4407, -4687,  1339,  1339,
   -4687,   514, -4687,  2660, 83230,  5045, 72184, -4687,  4537, -4687,
   -4687, 16684,  4957, 63505, 84019,  4300, -4687, -4687, -4687,  3593,
   -4687, -4687,  4740,  4307,  1474, -4687, -4687, 16684, -4687,  4961,
    4545, -4687,  4310, -4687, 86386,  2660, 86386, -4687, -4687,  4903,
    7717,  2445, -4687,  4311, -4687, 86386,   990, 35076,  4624,  1573,
    2660,  5071, 86386, 72184, 80074,  4973, 84808,  4935, 72184,  3683,
    4937,  4938, -4687, -4687, -4687, -4687, -4687, -4687, 62716,  2732,
   -4687, -4687, 72184, -4687, -4687, -4687,  1641,  4552, -4687, 80863,
   -4687,  2860,  4679,  4499, -4687, -4687,  5011,  3051, -4687, -4687,
   -4687, 36654,  4326, -4687,   274, -4687,  4763, 86386, 86386, -4687,
   -4687, -4687, -4687, 50881, 16684, -4687, -4687, -4687, -4687,  2926,
   -4687, 72184, 19120,  4443, 81652, 85597, -4687, -4687, -4687, 27185,
   -4687, -4687, -4687,  4946, -4687,  2660, -4687, -4687, -4687, 50881,
   -4687, -4687, -4687
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2024,  3132,  1313,  3084,     0,     0,     0,     0,     0,     0,
    3086,  3132,   152,  2139,  2140,     0,  1967,     8,     0,  1313,
     467,     0,     0,   164,     0,  1981,     0,  2196,     0,     0,
    1313,     0,  2190,     0,     0,  1313,  2029,  2173,   444,     0,
    3086,     0,  1379,     0,  2116,  2917,     0,     0,     0,     0,
    2042,     0,  2914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2918,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   141,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1237,
     144,   143,   142,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1344,  1341,  1889,  1343,  1357,  1365,  1366,
    1367,  2025,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   148,     0,    44,   145,   111,   136,   137,   117,   135,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   139,   116,   130,   129,   134,   128,
     138,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     106,   105,   108,   127,   119,   126,   118,   104,   109,    45,
      64,  2141,    65,    86,    81,    74,   149,    75,    93,    95,
      94,    76,   147,   140,    88,    19,    69,    89,    68,    15,
      36,    90,    91,    82,   150,    73,   146,    71,    35,     0,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1965,     0,  1070,  3130,  3131,  3132,  1315,  1314,     0,  3086,
    2300,  1300,     0,  2384,  2383,  2386,  2388,  2389,  2390,  2391,
    2392,  2393,  2336,  2395,  2398,  2399,  2400,  2401,  2402,  2337,
    2403,  2404,  2405,  2406,  2407,  2408,  2338,  2339,  2410,  2411,
    2412,  2414,  2415,  2340,  2341,  2416,  2417,  2418,  2419,  2420,
    2421,  2422,  2423,  2424,  2425,  2343,  2426,  2344,  2427,  2428,
    2430,  2431,  2461,  2432,  2433,  2434,  2435,  2436,  2437,  2345,
    2438,  2439,  2440,  2441,  2442,  2443,  2444,  2445,  2446,  2346,
    2447,  2448,  2450,  2452,  2453,  2454,  2455,  2456,  2347,  2457,
    2458,  2459,  2460,  2348,  2462,  2464,  2465,  2467,  2469,  2468,
    2470,  2471,  2374,  2472,  2473,  2333,  2475,  2476,  2477,  2478,
    2479,  2482,  2483,  2375,  2484,  2485,  2487,  2488,  2349,  2350,
    2490,  2491,  2492,  2493,  2500,  2494,  2495,  2496,  2814,  2499,
    2351,  2502,  2352,  2506,  2505,  2507,  2296,  2508,  2297,  2509,
    2353,  2511,  2512,  2515,  2516,  2354,  2518,  2519,  2520,  2521,
    2522,  2523,  2525,  2355,  2527,  2528,  2529,  2530,  2531,  2532,
    2815,  2534,  2535,  2536,  2537,  2539,  2540,  2542,  2544,  2545,
    2546,  2547,  2549,  2550,  2560,  2551,  2552,  2553,  2555,  2554,
    2556,  2557,  2558,  2561,  2541,  2563,  2564,  2565,  2566,  2567,
    2568,  2569,  2571,  2572,  2573,  2574,  2575,  2576,  2577,  2578,
    2579,  2580,  2581,  2582,  2583,  2584,  2585,  2586,  2587,  2588,
    2589,  2590,  2592,  2593,  2594,  2595,  2376,  2356,  2597,  2599,
    2600,  2602,  2605,  2606,  2607,  2609,  2613,  2614,  2615,  2616,
    2617,  2619,  2618,  2620,  2623,  2625,  2626,  2624,  2627,  2628,
    2629,  2357,  2358,  2631,  2632,  2633,  2377,  2635,  2637,  2636,
    2378,  2638,  2639,  2640,  2642,  2643,  2644,  2645,  2646,  2649,
    2650,  2651,  2652,  2653,  2379,  2654,  2656,  2359,  2657,  2380,
    2659,  2661,  2660,  2662,  2664,  2665,  2663,  2360,  2669,  2671,
    2672,  2674,  2676,  2678,  2361,  2680,  2681,  2682,  2684,  2683,
    2685,  2362,  2686,  2687,  2693,  2694,  2695,  2696,  2818,  2697,
    2698,  2335,  2363,  2699,  2364,  2701,  2702,  2703,  2704,  2705,
    2729,  2734,  2735,  2736,  2737,  2738,  2739,  2741,  2742,  2365,
    2743,  2744,  2745,  2746,  2366,  2747,  2749,  2751,  2752,  2753,
    2754,  2755,  2382,  2756,  2757,  2758,  2759,  2760,  2761,  2762,
    2763,  2764,  2765,  2766,  2771,  2769,  2770,  2772,  2774,  2775,
    2367,  2776,  2777,  2779,  2780,  2781,  2782,  2368,  2369,  2783,
    2785,  2786,  2787,  2788,  2789,  2790,  2791,  2793,  2795,  2796,
    2797,  2798,  2799,  2800,  2801,  2802,  2370,  2803,  2804,  2805,
    2816,  2679,  2387,  2517,  2794,  2429,  2700,  2533,  2596,  2817,
    2503,  2409,  2342,  2474,  2489,  2598,  2612,  2630,  2670,  2768,
    2778,  2591,  2610,  2622,  2504,  2677,  2740,  2767,  2381,  2792,
    2548,  2497,  2334,  2449,  2451,  2611,  2647,  2385,  2510,  2394,
    2570,  2608,  2691,  2688,  2690,  2692,  2673,  2604,  2463,  2603,
    2543,  2641,  2538,  2562,  2634,  2559,  2667,  2621,  2481,  2668,
    2748,  2601,  2675,  2524,  2773,  2396,  2466,  2689,  2709,  2806,
    2666,  2658,  2655,  2498,  2706,  2707,  2708,  2710,  2711,  2712,
    2713,  2714,  2715,  2716,  2717,  2718,  2719,  2727,  2721,  2720,
    2722,  2723,  2725,  2724,  2726,  2728,  2730,  2731,  2732,  2733,
    2750,  2526,  2397,  2480,  2486,  2514,  2648,  2784,  2513,  2413,
    2501,   398,  2307,   380,  2308,  2329,  2330,  2331,  2328,  2332,
     166,     0,     0,  2906,  2905,     0,     0,  3087,  3088,   733,
       0,     0,     0,     0,     0,     0,  1968,     0,  1013,   733,
     733,     0,     0,     0,   318,  3115,  3115,  3132,  3134,  3136,
    2386,  2336,  2401,     0,  2264,     0,     0,     0,  1740,     0,
    2340,     0,  2420,  2422,     0,     0,  1407,  1407,   897,     0,
       0,     0,  2445,  2446,  2270,     0,     0,     0,  2261,  2271,
    2490,  2494,  2496,     0,  2263,  2507,     0,     0,     0,     0,
    2531,  2273,     0,     0,  2574,  2576,     0,     0,  2580,  2581,
    2582,  2583,  2245,  1466,     0,   897,  2257,  2272,  2251,  2627,
    2628,     0,  2638,     0,     0,  2678,     0,     0,  2683,  2693,
       0,     0,  2752,     0,     0,   897,  2244,  2771,  2769,  2770,
    2772,     0,  2262,  2367,  2274,     0,  2787,  1407,   897,   897,
       0,     0,     0,  2797,  2798,  2805,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2524,  2750,     0,     0,  1399,     0,     0,     0,  1465,     0,
    1550,  3106,  1943,  1398,  1402,  1419,  1424,  1441,     0,  1458,
    1477,  1478,  1480,  1588,  1479,  1486,  1609,  1487,  1610,  1485,
    1484,  2258,  1483,  2268,  2267,  1482,  2259,  2269,  2260,  1400,
    1476,  2287,  2307,  2286,  1493,  3104,  1965,  1965,  1965,     0,
       0,  1965,  1965,     0,     0,  1965,     0,  1965,  1965,  1965,
       0,     0,   157,  2148,   468,   469,     0,  2959,  2972,  2973,
    2969,  2974,  2992,  2975,  2979,     0,  2971,  3064,  2320,     0,
    2978,     0,  3064,  2976,     0,  3064,     0,  2977,  2982,  2993,
    3064,  2970,  2309,  2319,  2318,  3064,  2808,  2807,  2310,  2809,
       0,  2961,     0,  2292,     0,     0,  1983,  1984,  1982,  1222,
       0,     0,  2197,  2198,     0,  2201,     0,  2202,  2205,     0,
    2902,     0,     0,     0,     0,     0,  1316,     0,  1986,  2030,
    1987,  1985,  1965,     0,   434,   443,   445,   446,   442,  2959,
       0,     0,  3088,  3099,  3114,  3109,  3108,  3111,  3112,  3113,
    1384,  3110,  3107,     0,  1380,  1382,  1383,   950,     0,     0,
    2849,  2852,  2586,  2620,  2853,  2774,  2850,  2679,  2851,  2381,
       0,     0,  2313,  2876,  2811,  2812,  2813,  2810,  2314,  2819,
       0,  2843,     0,  2109,     0,   950,  2128,     0,     0,  2128,
       0,  1898,  2112,  2117,  2115,     0,  2855,  2089,  2856,  2108,
       0,  2065,  2088,     0,  2044,  2081,     0,  2857,  1247,  2111,
       0,  1898,  1248,  2072,  2128,     0,     0,     0,     0,     0,
       0,     0,   446,  1236,  1247,  1254,  1269,  1235,  1269,  1378,
    2292,  2043,     0,     0,     0,  2916,     0,  2199,     0,  1377,
    2006,     0,  1866,  1869,  1871,  3180,     0,     0,     0,  3175,
       0,  3181,     0,     0,  2286,     0,     0,     0,     0,     0,
    3105,     0,     0,     0,     0,     0,     0,     0,     1,    11,
       0,     0,  1407,  2317,  2787,     0,  2316,  2315,  2321,  2323,
    3017,  3062,  3068,     0,     0,     0,  1234,  1238,  1239,  1241,
    1242,  1243,     0,     0,     0,  1342,  1386,  1346,     0,  3101,
    1898,  1890,     0,  3101,  1898,  1354,  1349,  1889,  1356,  2036,
    2029,  2141,  2490,  2144,  2024,  2145,     0,  1062,  1135,     0,
    1066,     0,     0,     0,     0,  2919,     0,  1064,     0,  2110,
    1142,     0,     0,  1093,     0,     0,  3141,  1068,     0,  3085,
       0,  1326,  1337,  1732,   397,     0,   170,   167,   168,  1283,
    1961,  1302,     0,  3091,     0,     0,     0,     0,  3137,     0,
       0,     0,   580,     0,     0,     0,     0,     0,   733,  3141,
    3141,  3115,  3135,     0,     0,  1859,  1500,  1859,  1859,  1859,
    1741,     0,     0,     0,     0,     0,     0,     0,  1859,     0,
    1544,  1516,     0,  1545,     0,     0,     0,  2275,     0,     0,
       0,  1497,     0,     0,  1732,     0,  1701,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1736,  1738,  2286,  1859,
       0,     0,  1859,     0,     0,     0,     0,     0,  1412,   946,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1859,  1859,     0,     0,  1859,  1558,  2277,     0,     0,
       0,  2276,     0,     0,     0,  2266,  2265,  2246,     0,  1561,
    1563,  1562,     0,  1859,  1859,     0,     0,     0,  1859,  1859,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1859,  1490,  1489,  1491,     0,     0,  3106,
       0,  2858,  1699,     0,     0,  1462,  1461,     0,  1460,  1459,
    2306,     0,  1401,     0,     0,  1406,  1405,  1467,  1468,  1469,
    1470,     0,  1471,  1472,  1473,     0,     0,     0,     0,     0,
       0,  1464,  1463,     0,     0,     0,     0,  1443,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1492,     0,     0,
    2301,  2247,     0,     0,  1604,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1969,     0,     0,     0,     0,     0,
       0,  1965,   159,     0,     0,  2960,  2952,  2990,  2989,  2994,
       0,  2991,  2987,  2995,  2996,  2980,     0,  2966,  2984,     0,
    2968,  2986,  2985,  2965,  2981,  2988,  2967,     0,  2963,  2955,
       0,     0,  1855,  2929,     0,     0,   165,     0,  1223,  1987,
       0,  3194,  3191,  2195,     0,  2206,  2207,  2203,     0,     0,
       0,     0,  2108,     0,  2191,  3100,  1318,     0,     0,     0,
    1988,     0,     0,  2175,  2184,  2180,  2182,  2174,  2177,   435,
       0,     0,   465,  2946,     0,     0,  2955,  3094,  3091,  1370,
    1381,   949,     0,     0,   952,  2875,  2007,  2008,   961,     0,
     951,     0,     0,     0,     0,     0,  2821,  2887,  2884,  2883,
    2834,  2829,  2828,  2325,  3013,  2827,     0,  2862,     0,   956,
     958,   957,  2872,   955,     0,     0,  2774,  2822,  2843,     0,
       0,  2820,     0,  2124,     0,     0,  2130,  2087,     0,   733,
       0,     0,     0,     0,     0,     0,     0,  2059,  2107,     0,
    2106,  2080,  1899,  2122,  2123,  2128,     0,  2121,     0,  2128,
       0,  2095,  2112,     0,  2128,  2056,     0,     0,  2048,  2053,
    2049,     0,  2055,  2054,  2057,  2045,  2046,  2124,  2071,  2112,
    2079,  2086,   308,  2070,  2076,  2084,  2112,  1011,  1010,  1009,
       0,     0,  2112,  2128,  2128,   441,     0,     0,  1253,  1255,
    1256,  1274,  1273,  1250,  1270,  1271,   308,  2041,  3192,  3193,
    2915,  2013,     0,  1867,     0,     0,     0,  2250,  2249,  3177,
    2248,  3185,  3187,  3171,     0,  3174,  3173,  3182,     3,     0,
       0,   670,     4,     0,     6,     0,     0,     7,  1345,  1363,
       0,  1362,    12,   151,  2324,     0,     0,     0,     0,  1089,
    1090,  1090,     0,     0,     0,     0,     0,     0,     0,     0,
    3052,  1088,  3015,  3015,  3048,  3015,  3015,  3015,     0,     0,
    1117,     0,     0,     0,     0,  1391,  1390,  1393,  2457,     0,
       0,  1942,  1936,  1939,  1938,     0,  1385,  1348,  1347,     0,
    3103,  3102,     0,  1350,  1907,  1908,  1906,  1900,  1901,  1905,
    1904,     0,  1352,  1898,  1898,  1355,  2040,  2039,  2038,     0,
    2036,  1222,     0,  2143,     0,     0,  2133,  2134,  2135,  2136,
    2137,  2132,  2131,  2146,  2147,  3139,  3140,  3138,   963,  3133,
     381,     0,     0,  2921,  2927,     0,     0,   381,     0,     0,
    2009,  2009,     0,  2009,  2009,   649,     0,   648,  2009,   739,
     601,   603,   604,   638,   605,   606,   607,   608,   609,     0,
    1220,  2009,  1220,     0,  2009,  2009,  1220,  2009,     0,     0,
    2009,  2009,  2009,  2009,     0,     0,   964,  2009,     0,     0,
    1220,     0,  2009,     0,  1204,     0,     0,  2009,  2009,  2009,
    2009,  2009,  1220,     0,     0,  2009,  2009,     0,  1230,     0,
       0,  2009,     0,  2009,  2009,  2009,     0,  2009,  2009,     0,
    2009,     0,     0,  2009,  1164,  1165,  2009,  2009,   775,  1175,
     735,   762,   763,     0,  1060,  1061,  1136,  1138,  1208,  1144,
    1143,  1172,  1177,  1206,  1207,     0,  1966,  3206,  1072,     0,
       0,  1071,  3141,  1297,     0,     0,  1006,  1005,     0,     0,
    1337,  1328,  1734,     0,  1733,   379,     0,     0,  1285,  1284,
       0,  1282,  1310,  1309,  1307,     0,  1308,  1306,  1301,  1303,
    1304,  3090,     0,     0,  3092,  3096,     0,   316,     0,     0,
       0,     0,     0,   733,     0,   582,     0,  3025,  3060,   331,
     314,     0,  1039,     0,     0,   733,   733,   733,   733,  3129,
    3117,  3124,  3125,  3128,  3127,  3126,   733,  3123,  3116,  3119,
    3120,  3122,  3121,  3141,     0,     0,  1860,  1859,     0,     0,
       0,     0,     0,     0,  1742,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1408,     0,   898,  1570,     0,     0,
       0,     0,     0,  1831,  1832,  1833,  1834,  1842,  1835,  1836,
    1837,  1844,  1849,  1838,  1839,  1845,  1846,  1847,  1840,  1848,
    1843,  1841,  1850,     0,  1830,     0,     0,  1854,  1851,  1853,
    1852,     0,  1702,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1859,     0,     0,     0,  1859,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1580,     0,     0,     0,     0,
       0,  1859,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1540,     0,  2289,  2288,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1645,     0,  1645,
       0,     0,     0,  1648,  1649,  1647,  1650,     0,     0,     0,
       0,  1859,     0,     0,  1494,     0,     0,     0,     0,     0,
       0,     0,  1397,  1404,  1403,  1410,  1409,  1411,  1415,  1420,
    1413,  1417,     0,  1474,  2393,  1422,     0,     0,  1455,     0,
    1425,  1435,  1456,  1439,  1446,  1447,     0,  1442,     0,  1444,
    1445,     0,  1449,     0,  1448,  1452,  1453,  1454,  1457,     0,
       0,     0,     0,  1481,  1488,  1510,  1511,  1402,     0,  1605,
    1606,  2282,  2290,  1946,  1953,  1948,     0,  1969,  1950,  1958,
    1965,  1973,  1974,  1955,   739,  1971,  1954,   610,  3011,  1951,
    1224,  1960,  3219,     0,     0,   158,     0,     0,     0,     0,
    2165,  2167,  2170,  2166,     0,  2169,     0,  2168,  2149,  2152,
    2158,  2171,     0,     0,   466,   470,   472,     0,   475,     0,
    2983,  3066,     0,     0,  2964,  2957,  2958,  2956,     0,  2997,
    2962,  1856,     0,  2928,  2487,  2594,     0,  1861,  2293,  3196,
       0,     0,     0,     0,  2204,     0,  2904,  1855,  2903,  2907,
    1312,     0,   154,   155,     0,     0,     0,  1317,  1321,     0,
    1287,  1770,  2179,  2188,  2186,  2186,     0,   433,   458,   453,
     461,   455,   457,   456,   462,   463,   464,   459,   454,   460,
     447,     0,     0,     0,     0,  2944,     0,  3095,     0,  3097,
       0,  1861,  1371,  1370,     0,     0,     0,  2878,     0,  2874,
    2873,     0,  1090,  2303,  1090,     0,  2889,  2890,     0,  2881,
       0,  2882,     0,  2833,     0,     0,  2836,     0,     0,     0,
       0,     0,     0,     0,  2877,  2842,  2841,     0,  2844,  2845,
       0,  2848,  2898,  2899,  2896,  2897,  2900,  2901,  2895,  2869,
       0,  2126,  2129,  1863,     0,     0,  2104,  2098,  2097,  2093,
    2099,  2105,  2094,  2066,  2067,  2068,  2062,  2113,  2103,  2101,
    2090,  2128,  2102,  2100,  2050,  2051,  2052,     0,  1898,     0,
    2126,  2128,     0,  2096,  2128,     0,     0,  2128,  2083,  2085,
    1259,  1260,     0,     0,  1275,     0,  1249,  2018,  2017,     0,
    2014,  2016,  2005,  1868,     0,  1873,     0,     0,     0,  3172,
    3188,  3170,  3176,  3183,  3184,  3169,  2290,     0,   671,     0,
       0,   674,     0,     0,  2009,  1364,    13,    10,  1125,     0,
       0,  3059,     0,  3015,  3015,     0,     0,  3020,  2322,     0,
       0,     0,  3057,     0,     0,     0,     0,  3045,     0,  3046,
    3049,     0,  3050,  3051,     0,     0,  3072,  3070,     0,  3071,
    3069,  3002,  3017,  3063,     0,  1097,  1246,  2298,  1245,  1244,
    1240,     0,     0,  1396,  1393,  1387,  1394,  2302,  1941,   953,
    1937,     0,     0,  1894,  1891,  1893,  1360,  1358,     0,     0,
    1361,  1359,  1351,  1353,     0,     0,  1963,  2034,  2037,     0,
    2142,     0,     0,   963,   722,   724,   731,   730,   732,     0,
    1067,  2926,  2925,     0,     0,     0,     0,  1065,     0,     0,
     599,  2010,     0,     0,   599,     0,     0,     0,     0,   740,
    2110,  2009,  1221,  1056,  1007,  1313,  1007,  1181,     0,  1056,
       0,     0,     0,     0,     0,     0,  1313,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,     0,  2009,     0,
    1190,     0,  1146,     0,     0,     0,     0,     0,     0,     0,
    1191,     0,     0,     0,  1147,  2009,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,  1313,  1233,     0,  1232,
    1231,     0,     0,  1313,  1313,     0,   772,     0,     0,     0,
     768,   769,     0,     0,     0,     0,  1168,  1169,     0,     0,
       0,   736,  2009,  2009,     0,  1140,  1137,   963,   963,     0,
    2009,  3214,  1126,     0,     0,  1069,     0,     0,  1294,  1330,
    1324,  1329,  1327,  1337,     0,  1821,     0,   399,     0,     0,
       0,     0,     0,     0,     0,     0,   308,   172,     0,   202,
     206,   214,   218,   204,   300,   302,   210,   212,   216,   224,
     236,   222,   240,   226,   228,   230,   232,   220,   234,   208,
     246,     0,     0,   242,   244,     0,   248,   250,     0,   238,
       0,     0,     0,     0,   245,   203,   207,   249,   215,   219,
     247,   205,   301,   303,   211,   213,   243,   217,   221,   223,
     225,   241,   227,   229,   231,   233,   235,   239,   237,   209,
     251,     0,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   200,     0,
       0,   285,  1962,  1311,  1305,  3089,  3093,   734,   963,     0,
       0,     0,     0,     0,     0,   581,     0,   584,     0,     0,
    3024,  3025,  3028,  3029,  3030,  3031,  3032,  3033,     0,     0,
    3068,  2009,     0,     0,     0,  1040,   963,   733,     0,     0,
       0,     0,     0,  3118,     0,  1566,     0,  1660,  1709,  1660,
    1660,  1660,     0,     0,     0,     0,     0,     0,  1567,     0,
    1514,  1568,  1569,     0,     0,     0,  1660,     0,   899,     0,
       0,  1517,  1518,  1507,     0,     0,  1589,     0,  1705,  1519,
       0,     0,     0,     0,     0,  1590,  1737,     0,  1739,  2290,
       0,  1660,  1574,  1525,     0,  1660,     0,  1526,  1591,  1592,
    1593,     0,  1595,     0,  1576,     0,     0,  1579,     0,     0,
    1528,  1660,  1660,     0,     0,     0,     0,  1660,  1530,     0,
       0,     0,  1529,     0,     0,     0,     0,     0,     0,     0,
    1532,     0,  1508,  1660,  1660,  1582,     0,     0,  1584,     0,
    1541,  1859,  1660,  1697,     0,  1637,  1636,  1654,     0,     0,
    1654,     0,     0,  1651,     0,  1638,  1635,  1634,     0,     0,
    1660,     0,  2859,  2860,  2861,  2879,  1700,  1698,  1498,  1416,
    1421,  1414,  1418,  1423,     0,     0,     0,  1434,     0,     0,
       0,     0,     0,  1426,  1437,  1440,  1608,  1596,     0,  1732,
       0,     0,  1209,  1957,     0,  2110,  1956,   611,   612,   614,
       0,  1226,  1225,  1952,  3220,  1949,  1224,     0,   160,   162,
    2163,  2160,  2159,  2161,   308,  2162,     0,  2172,  2150,  2445,
    2771,  2772,     0,   479,     0,   451,   450,   452,   476,     0,
       0,  2955,  3065,     0,     0,  3006,  3009,     0,     0,     0,
    2950,  1858,  2939,  2935,  2940,  2942,  2938,  2941,  2943,  2936,
    2937,  1861,     0,  1898,  1862,  1770,  3190,  3195,  1332,  1333,
    1337,     0,     0,     0,   156,     0,     0,  2192,     0,  1319,
       0,     0,  1292,  1291,  1293,  1286,  1288,  1289,     0,     0,
    1771,     0,  2185,  2187,   308,   308,  2176,     0,     0,     0,
    2955,     0,     0,  3098,  1373,     0,     0,     0,     0,  1372,
    1374,  1375,  1747,  1746,  1777,  1774,  1773,  1776,  1775,  1778,
    1770,  1855,  1880,  1861,     0,     0,     0,   960,   962,   959,
       0,     0,  3015,  3015,     0,     0,  2894,  2886,  2888,  2885,
    2835,  2326,  3014,     0,  2865,  2866,  2867,  2863,  2864,     0,
    2870,  2868,     0,  2847,  2125,     0,  1898,     0,  2092,     0,
    2064,     0,  2082,  2047,  1898,  2063,     0,  2061,  2112,  2112,
    2060,  1258,  1257,     0,  1261,  1272,  2012,     0,  1872,     0,
    1870,  3178,  3186,     0,     0,     0,     0,     0,     0,     0,
       0,   676,     0,   672,     0,     0,  1084,     0,  3034,  1091,
    1083,  1082,     0,  3019,  3053,  3030,  1085,  1086,  1087,  3018,
       0,  3036,  3055,  3015,     0,  3015,  3015,  3005,  3004,  3003,
    3000,     0,     0,     0,     0,     0,  1118,  1120,     0,     0,
       0,     0,  1094,  1098,  1099,  1392,  1395,  1388,     0,  2212,
    1935,  1389,  1896,  1897,  2284,  1895,     0,  1903,  1902,     0,
    1855,  2292,     0,     0,     0,  2294,     0,  1933,  1934,  1918,
    1919,  1917,  1920,  2138,  1921,  1932,  2009,   723,  2009,     0,
       0,     0,     0,     0,     0,     0,   382,   391,     0,     0,
    2920,     0,   626,     0,     0,     0,     0,     0,     0,     0,
       0,   336,   633,  1075,   739,  1928,  1930,  1927,  1929,   639,
     652,  1931,   653,   650,  1076,   637,   640,  1077,  3221,   651,
     602,     0,   809,  1057,  1008,  1056,  1148,  1056,     0,     0,
       0,  1007,   812,  1056,     0,  1036,  1057,   808,     0,  1215,
    1214,  1216,   810,   810,     0,     0,     0,  1925,  1926,  1924,
    1922,  1923,   751,   746,     0,  1915,  1916,  1912,  1913,  1911,
    1914,   757,  1170,  1302,  1171,  1828,     0,   748,   749,   750,
     770,     0,     0,   759,     0,  1188,  1189,     0,  1151,  1186,
    1187,  1224,   741,     0,     0,     0,   788,   789,   787,   764,
     771,  1218,  1217,  1219,   744,   745,     0,     0,  1205,  1887,
    1894,   777,   752,   776,   747,     0,     0,     0,  1199,  1159,
       0,   786,   784,   781,   783,   782,   785,   760,   753,   754,
     756,   755,   767,   758,  1158,  2171,   742,   743,   773,   774,
       0,     0,  1141,  1220,  1220,  1176,  1173,  1174,  1139,  1145,
    1178,   634,   635,   610,     0,  2009,  3216,     0,  1128,  1130,
    3142,  3143,  1871,     0,     0,     0,  1824,     0,  1825,  1822,
    1823,     0,  1735,     0,     0,     0,     0,     0,     0,     0,
       0,   171,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   169,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   317,   963,   728,     0,   615,     0,     0,     0,   326,
       0,  2009,  2009,  2009,  2009,   321,   739,   586,   588,   589,
     590,   591,   592,   595,   593,   596,   594,   597,   598,   610,
    3026,  3022,     0,  3023,     0,  3061,  1117,     0,  1045,  1047,
    1046,  1042,  1041,     0,     0,  2211,     0,  2210,   808,   311,
     655,   657,   660,   658,   739,   737,  1998,  2000,   662,     0,
       0,   345,     0,   380,  3164,     0,     0,     0,  1660,  1611,
    1661,  1613,  1614,  1619,     0,  1743,     0,  1504,   911,   911,
     895,  1717,   891,   883,   889,  1731,  1722,  1726,  1729,  1728,
    1730,     0,   867,  1725,  1727,   881,  1713,   895,  1715,  1718,
     911,  1723,  1512,     0,     0,     0,     0,     0,  1660,  1621,
    1660,     0,     0,     0,     0,     0,     0,  1703,     0,     0,
       0,  1509,     0,  1600,  1660,  1625,  1660,  1623,     0,     0,
       0,     0,     0,     0,     0,  1629,  1627,     0,     0,     0,
       0,  1660,  1631,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1628,  1630,     0,     0,     0,     0,
       0,  1615,  1668,  1662,  1663,  1664,  1665,     0,     0,     0,
    1652,  1654,     0,  1654,     0,  1639,     0,  1564,  1660,  1617,
    1495,     0,  1432,  1427,     0,  1436,     0,  1451,  1450,     0,
       0,     0,  1607,     0,  2283,  2291,  1947,  1945,  1211,  1210,
    1959,  1972,  2110,  3012,  1944,   163,     0,  2164,  2157,  2153,
    1699,     0,   471,   480,   473,   477,   478,   474,     0,  3067,
    3075,     0,     0,     0,     0,  1898,     0,  2930,     0,     0,
    1337,  1339,  2208,     0,  2910,  2911,  2909,  2908,  2194,  2193,
       0,  1322,  1323,  1290,     0,     0,  2002,  2001,     0,  1978,
    1980,  1989,  1992,     0,  2189,  2181,  2183,     0,   448,     0,
       0,  2949,     0,     0,  1855,     0,  1747,  1777,  1774,  1773,
    1776,     0,     0,     0,     0,  1760,  1768,  1766,  1768,  1763,
       0,     0,     0,  1855,  1871,     0,  1864,  1880,  2832,  2831,
    2830,  1090,  1090,  2824,  2823,  2892,  2891,  2893,  2838,   739,
    2837,     0,  2846,  2127,  2073,  2078,  2077,  2091,  2058,   308,
     309,  1861,  2128,     0,  1281,     0,  1277,  1276,     0,  1263,
    2015,  1874,     0,  3189,     5,     0,     0,     0,     0,   675,
       0,   685,     0,     0,     0,     0,  3197,  3035,     0,     0,
    3058,     0,     0,     0,  3043,  3016,  3047,  3044,  3001,  1123,
    1121,  1122,  1124,  1119,  1102,  1101,  1103,     0,     0,     0,
    1116,  1115,  1114,     0,     0,  1081,  1100,   954,     0,  2220,
    1892,     0,  1770,     0,  1861,  1964,  2035,  2034,     0,     0,
       0,   385,   388,   386,     0,   387,     0,     0,  2923,     0,
     636,  1074,   739,   628,   630,   631,   632,   340,   339,   341,
     342,   344,   343,   338,  1080,     0,   646,     0,     0,     0,
       0,     0,  1056,  1003,  1004,   811,     0,   806,   813,     0,
       0,     0,     0,     0,   794,   796,   797,     0,   880,   834,
     825,   911,   828,   827,   971,   895,   839,   886,     0,   888,
     885,   860,   859,   876,   858,   863,   847,   971,   971,   846,
     879,   971,   864,   862,   866,     0,   867,   887,   872,   861,
     865,   857,     0,   878,   911,   895,   895,   843,   877,   971,
       0,   870,   911,   799,   915,   845,   978,     0,     0,   911,
     913,   891,  1197,  1198,  1044,  1043,  1196,     0,     0,  1154,
       0,  1155,     0,  1157,   961,   961,   765,  1162,  1185,  1184,
       0,  1163,   766,  1227,  1153,     0,  1888,  1152,     0,     0,
       0,  1287,     0,   779,   778,  1079,  3210,  3207,  3208,     0,
    3218,  3217,  3219,     0,     0,     0,   350,  3144,     0,     0,
    1336,  1338,     0,  1325,     0,   174,   175,     0,   176,   177,
       0,   178,   179,     0,   180,   173,   286,   306,   307,   253,
     291,   279,   290,   280,   293,   292,   294,   281,   282,   296,
     297,   295,   283,   284,   201,   278,   252,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   267,   270,   271,
     268,   269,   264,   299,   265,   298,   266,   272,   273,   274,
     276,   277,   304,   305,   729,     0,  2009,  2009,   320,   739,
     617,   619,   620,   621,   622,   625,   623,   624,   326,     0,
       0,   325,     0,     0,     0,     0,     0,  2110,   322,     0,
       0,   332,  1097,  3204,  3205,  3206,     0,   661,   312,     0,
       0,   656,   654,   963,  1999,   659,     0,     0,  3159,     0,
       0,   576,   575,     0,     0,  1542,  1612,  1744,     0,     0,
     912,  1710,   971,     0,  1720,     0,  1721,   893,   892,   884,
     882,  1724,   890,   868,  1714,  1719,  1716,  1712,  1513,     0,
       0,  2278,  1515,  1506,  1505,  1622,  1620,     0,     0,  1548,
    1572,     0,  1549,     0,     0,     0,     0,     0,  1521,     0,
    1524,     0,     0,  1602,  1626,  1624,  1575,  1594,  1551,  1577,
       0,  1527,  1496,     0,  1552,     0,  1557,  1555,     0,  1632,
    1531,     0,     0,  1538,     0,  1536,     0,  1537,     0,  1539,
    1581,  1583,     0,     0,     0,     0,  1660,  1669,     0,  1670,
    1656,  1655,  1642,     0,  1646,     0,  1643,     0,  1657,     0,
    1797,  1618,  2880,     0,  1431,  1433,  1429,     0,  1438,  1597,
    1213,  1212,   613,   161,  2155,     0,  2151,     0,     0,     0,
       0,  2954,  3008,  3007,  3010,  3073,  2998,  2931,     0,     0,
    2019,  2021,  1334,  1337,  1339,     0,  1335,     0,  2209,  2912,
    2913,  1320,     0,  1827,  1979,  2027,     0,     0,     0,  1996,
    2281,  2280,  2288,  2013,  1997,  2004,     0,     0,     0,  2945,
       0,  1871,     0,  1785,  1779,  1781,  1782,  1784,     0,     0,
    1747,  1746,  1376,  1762,  1761,  1769,     0,  1767,  1768,  1768,
       0,     0,  1756,  1755,     0,  1818,  1786,     0,     0,  1875,
    1864,  3015,  3015,     0,  2871,  2074,  2075,  2069,     0,     0,
       0,     0,     0,  1265,  3179,     0,   681,   668,     0,   666,
     670,     0,   663,     0,     0,   679,     0,     0,     0,  2305,
    2304,  3037,     0,  3038,     0,  1106,     0,  1105,  1111,  1108,
    1107,     0,  1096,  1095,     0,     0,     0,     0,  2213,  2215,
       0,  1940,  1861,  1861,  2293,  2032,     0,  2295,  1861,   725,
     780,   390,   389,   395,   396,     0,  2922,  2110,   337,     0,
    1150,     0,     0,   687,     0,     0,     0,   814,     0,     0,
    1054,     0,  1053,  1894,  1037,  1038,  1180,   808,   799,   833,
     826,   844,   965,   976,   974,   968,   869,   971,     0,   972,
     973,   830,   842,     0,   853,     0,   848,   971,   856,   852,
     868,   871,   873,   875,     0,   971,   841,   840,   850,   837,
     900,     0,  1227,   800,   925,     0,     0,     0,     0,  1463,
     919,     0,   983,     0,     0,   928,     0,  2009,  2009,     0,
     936,   815,   916,   918,   817,     0,   939,     0,   979,   978,
     832,   971,   978,   900,     0,   914,   900,   900,  1194,     0,
    1195,  1227,  1829,  1203,  1202,     0,     0,  1229,  1183,  1886,
    1201,  1200,     0,  1156,   761,     0,     0,  3212,     0,  3215,
    1092,     0,   360,     0,     0,  1127,     0,   353,   351,   362,
       0,  1299,  1295,  1826,   181,     0,   183,   185,   190,     0,
     192,  2327,     0,   195,     0,   197,  2299,   199,     0,   186,
       0,     0,   287,   289,     0,     0,     0,  2110,   324,     0,
       0,     0,     0,     0,     0,   583,   645,   641,   647,   644,
     587,  3027,     0,  3042,  3040,  3041,  1094,  3214,     0,     0,
     963,   738,     0,     0,   400,   792,   793,   791,   790,     0,
    3165,   579,   577,   578,     0,     0,  1745,     0,     0,     0,
       0,  1711,     0,     0,  1501,  1512,  2279,     0,     0,     0,
       0,  1706,  1708,  1704,  1660,     0,     0,     0,     0,     0,
    1499,     0,  1598,     0,     0,     0,     0,     0,     0,  1535,
    1533,  1534,   980,  1586,  1585,     0,  1616,  1666,     0,  1672,
    1653,  1641,  1640,     0,  1654,  1565,     0,  1805,  1806,     0,
    1798,  1799,     0,  1428,     0,     0,     0,   488,   483,   491,
     485,   487,   486,   492,   493,   494,   495,   489,   484,   490,
     482,   481,     0,     0,     0,  3082,  1861,  2019,     0,  2021,
       0,  1977,  1331,  1340,     0,  1772,     0,     0,  1990,  1993,
       0,     0,     0,     0,     0,   449,  2948,     0,     0,  1787,
    1376,  1748,  1764,     0,     0,  1757,  1765,     0,     0,     0,
       0,  1812,  1813,     0,     0,  1816,  1819,  1820,  1783,  2285,
    1884,  1883,  1865,     0,  1369,  1875,  2826,  2825,  2839,  1280,
    1279,  1278,  1262,     0,     0,  1267,   669,     0,   667,     0,
       0,   665,   673,     0,   680,     0,     0,  3054,  3039,  3056,
       0,  1112,  1113,  1110,     0,     0,     0,     0,     0,  2214,
       0,     0,  2221,  2223,  2033,  1889,  1889,     0,   629,     0,
     690,  1149,     0,     0,   807,     0,     0,     0,  1025,     0,
       0,  1050,   795,   798,   967,   966,   970,     0,   969,   829,
     978,     0,  1058,   849,   874,     0,   851,   904,   905,   906,
     838,   901,   903,   985,  1179,   931,   940,   942,   941,   932,
     930,     0,     0,     0,     0,     0,     0,   947,   922,  2255,
     948,  2256,  2252,     0,     0,   943,   944,   945,   933,   929,
     934,     0,     0,   935,     0,   917,     0,     0,   927,   920,
     921,   831,   835,   836,   822,     0,   823,   824,     0,  1192,
    1182,  1166,  1228,     0,  3211,  3209,  3213,   361,   349,     0,
       0,  1129,  1131,     0,     0,  1132,     0,     0,  1298,   182,
       0,   191,     0,     0,   196,     0,     0,   187,     0,   275,
       0,  1014,   643,   642,   618,     0,  1020,   327,   328,   330,
       0,     0,   319,  3216,     0,   313,   310,     0,     0,     0,
     401,   403,     0,     0,   410,     0,  1543,   909,   907,   910,
     908,   896,     0,     0,     0,  1546,  1547,  1573,     0,  1633,
    1571,     0,  1522,  1599,     0,     0,  1578,  1553,  1556,  1554,
    1559,  1560,     0,     0,     0,     0,  1674,  1658,  1659,     0,
    1807,  1523,  1800,     0,     0,  1430,  2156,  2154,  3073,  3076,
       0,     0,  2951,  1898,  2021,  1871,  1975,     0,     0,  2026,
    2028,  1991,  1994,  1995,  2290,  2011,  2003,  2947,     0,  1780,
    1759,  1758,  1751,     0,  1753,     0,  1808,  1808,  1817,  1885,
       0,  1881,     0,  1876,  1877,  1368,  1264,     0,     0,  1251,
     682,     0,   672,   686,   664,  3201,  3021,  1104,  1109,  2218,
    2219,     0,  2216,     0,     0,  2222,  1909,  1909,     0,  1014,
       0,   710,   688,  1020,     0,  1049,  1025,  1894,     0,  2009,
    2009,  2009,   801,  1026,  1027,  1029,  1030,  1033,  1052,     0,
     977,   975,   971,     0,   971,   902,     0,   989,  2254,  2253,
       0,   924,   926,   937,   938,   931,   818,     0,     0,  1161,
    1167,     0,   347,   352,   363,   364,  1073,  3147,  3145,     0,
     184,   193,   194,   198,     0,     0,   288,     0,  1209,  1015,
    1016,  1018,     0,  1209,  1021,  1022,  1024,     0,     0,   315,
    1025,     0,   358,  3160,     0,   961,  3158,   413,   411,   412,
       0,   406,   408,     0,     0,     0,  1502,     0,  1707,     0,
    1601,  1603,   981,     0,  1671,     0,  1695,  1694,  1696,  1667,
       0,  1644,     0,  1804,  1803,  3082,  3074,  3077,  2932,  1976,
    2020,     0,  1770,     0,     0,     0,     0,     0,     0,     0,
    1882,     0,     0,  1266,     0,   308,     0,     0,     0,     0,
    3198,  3199,  2217,  2225,  2224,     0,  2031,  2023,  2924,   802,
       0,     0,  2009,     0,     0,  2009,  2009,  2009,  2009,   705,
     711,   713,     0,   803,     0,     0,   804,  1055,  1032,     0,
       0,     0,  1028,  1894,   854,  1059,   855,     0,   988,     0,
     993,   923,     0,  1193,  1160,   354,  1133,   515,     0,  3146,
    1296,     0,     0,     0,   334,  1017,   323,   335,  1023,     0,
    1209,  3157,   350,   359,     0,   402,   404,  3166,   410,     0,
       0,   894,   895,  1520,  1587,  1673,     0,     0,     0,     0,
    1689,  1676,  1677,     0,     0,  2953,     0,  3083,     0,   953,
       0,  1855,  1752,  1754,     0,  1809,     0,  1821,     0,  1879,
    1878,  1268,  1252,     0,     0,  2009,     0,  3202,  1910,   699,
     692,   695,     0,     0,  2009,  2009,     0,     0,     0,     0,
       0,   689,   712,  2009,   805,  1048,  1031,  1034,  1035,  1051,
     986,     0,   990,   991,   992,     0,   984,     0,     0,   356,
     541,  2419,   527,   513,     0,     0,  2607,   517,   365,   368,
     366,  2024,   367,   373,     0,   374,   375,   376,   377,   378,
     369,   539,   540,   372,   370,   371,     0,  2311,     0,  2312,
    2372,  2371,  2373,     0,     0,     0,   188,     0,  1019,   329,
     333,   362,     0,   383,   407,   961,     0,     0,     0,     0,
    1684,     0,     0,     0,  1682,     0,  1678,     0,  1675,  1680,
    1679,     0,  2022,  2226,  2591,     0,  1790,     0,  1788,  1811,
    1810,     0,     0,   683,     0,     0,  3203,   699,     0,   697,
       0,   693,   691,   694,   721,     0,     0,   717,   718,   716,
     714,     0,     0,   707,     0,   987,     0,     0,   819,   355,
       0,   348,     0,     0,   526,   529,     0,     0,   532,   522,
     521,   523,     0,   516,   515,   515,   569,   520,   566,   565,
     558,     0,  3148,     0,     0,     0,   961,  3167,   409,  3153,
    1503,     0,  1685,     0,  1687,  1686,     0,     0,  1691,     0,
    1692,  2834,  3081,  3080,  3078,     0,  2212,     0,  1789,     0,
       0,   961,  1815,  1814,     0,   677,   683,  3201,   696,     0,
     703,     0,   701,   704,   719,   720,   710,   706,     0,   715,
     999,     0,   998,     0,   995,   994,   821,   820,   915,   357,
     542,   553,   556,   548,   528,     0,     0,     0,   518,   515,
       0,   502,   500,   501,   507,   508,   509,   510,   511,   512,
     503,   506,   504,   505,   515,     0,   418,     0,     0,  3149,
    3150,   189,   364,  3161,   393,   392,   384,     0,   515,  3151,
    3152,     0,  3155,     0,  1683,  1681,  1690,  1693,  3079,     0,
    2220,     0,  1791,  1792,  1795,   684,   678,  3200,   698,   700,
       0,   709,   708,  1001,  1002,  1000,     0,     0,   816,     0,
       0,   515,   549,     0,   524,     0,   533,     0,     0,   416,
     572,   570,   414,   560,   560,   346,   383,   394,  3168,  3154,
     515,  1688,     0,  2228,  1794,  1796,     0,   702,     0,     0,
     550,   556,   546,   554,   515,     0,     0,   514,     0,   568,
     417,     0,     0,     0,   515,     0,   559,   561,   563,  3162,
    3156,  2227,     0,  2232,     0,   997,   996,     0,   547,     0,
       0,   545,   525,   530,   515,   573,   515,   427,   426,     0,
       0,   496,   567,     0,   419,   515,     0,     0,  2239,  1797,
     551,     0,   515,     0,   515,     0,   515,     0,     0,   961,
       0,     0,   415,  3163,  2230,  2231,  2229,  2234,     0,     0,
    2236,  2237,     0,  2200,  1801,  1793,  1799,     0,   543,   515,
     531,   536,     0,     0,   422,   497,   498,     0,   424,  2238,
    2233,     0,  2240,  2242,     0,  1802,     0,   515,   515,   532,
     535,   574,   571,     0,     0,   420,   421,   432,   431,     0,
    2235,     0,     0,     0,   515,   515,   537,   440,   438,   515,
     428,   436,   430,     0,   437,   499,   425,  2241,  2243,     0,
     423,   439,   429
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4687, -4687, -4687, -4687, -4687, -4687,   -15, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687,  1558, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,  1807,  1815, -4687, -4058, -4687, -4687,  1816,
   -4687,   412,  1817, -4687,   408, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687,  1804, -4687,   407, -4687, -4687, -4687, -4687, -4687, -4687,
   -2874, -1597, -4687, -4687, -4687, -4687, -4687, -4687,  1170, -4687,
   -4687,   410,  1374,  3927, -4687,   401, -4687,    99, -4687, -4687,
   -4687, -4087,   -23,  -192, -4687, -4687,    47,  3415,  -243, -3518,
   -4687, -4687, -4687, -4687, -4687, -4687,   222, -4687, -4687,   100,
   -4687, -4687, -1450, -4687, -4687, -4687, -4687, -4687, -4687,  -382,
    -338,  2606, -4687, -4687, -4687,  5134, -4687,  4093, -4687, -2786,
    2205, -4687, -4687, -4687, -4687, -4687,  2264, -2741, -4687, -4687,
   -4687,  1046, -4687, -4687, -4687,  -498,   130, -4687,   132, -4687,
     133, -4687,   134, -4687,   135,   140,   147,   148, -4687,   149,
   -4687, -4687,  -343, -4687, -4687, -4687, -4687,   151, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687,  -231, -4687, -4687,  -125, -4687,
   -4687,  -222,   153, -4687,  -203,   155, -4687,   156, -4687,  -144,
   -4687,  -142, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687,  1219,  2749,  4040,  2744, -2762, -4687,  1643, -4687,
   -4687,   799, -4687, -4687,   953, -1588, -4687,  2533, -2593, -2541,
   -1136, -2540, -4687, -4687, -4687, -3192, -3191, -1366, -4687, -1382,
   -2536, -2531, -2368,   781,  1806,  1808,  1809,    44, -4687,  1013,
     384, -4687, -4687, -4687, -3567,   -57, -4687, -3903,   608, -4687,
   -4687, -4687, -4687, -3063, -4687, -4687,  -138, -4687, -4687,   -65,
     -61, -4687,   226, -4687,  2805, -4687, -4687, -2457,  -612,  2692,
   -4687, -2000, -1794, -2367, -1643, -1635, -4687, -4687, -4687,   808,
    1833,   965, -4687,   966, -1665,   917, -3732, -4687, -4687,  -625,
   -2921, -4687, -4687, -4511, -4687, -2601,  1439, -4687, -4687, -2590,
   -4687, -4687, -4687,  1407,  1409, -3366,  1914, -1658, -4687,   600,
     -32,  -384, -4687,   -56, -4687,   922, -4687, -4687, -3911, -4687,
     -29, -2632,   176, -4687, -4687, -3161, -3726, -1630, -4687, -4687,
   -3557, -2640,  1738, -4687, -4687,   243, -4687, -4687, -4687, -4687,
   -3334, -4687, -1691, -2240, -4687, -4687,   402, -4687,   343,   396,
   -4687,   336, -4307, -4687,   390, -2129,  2082, -4687,  3374, -3114,
   -2546, -4687, -4233, -1737,   638, -2329,   964, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -1570, -4687, -4687,   846,  1293, -4687,
    2183,  1881, -4687,  2193, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,  2730, -4687,   579, -1473,  2733, -4687,  2735,
     480, -2718, -1126, -4687, -1122, -4687, -1657,  3573, -1629, -3721,
   -4687, -4687, -4687, -4687, -4687,  3609, -4687, -4687, -4687,  3009,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687,  2963, -4687, -4687,
   -4687, -4687,  4209, -4687,  2960, -4687, -4687, -4687, -4687, -4687,
    1417, -4687,  2343, -4687, -4687, -4687, -4687, -4687,  2077,  3421,
   -4687, -4687,    60, -4687, -4687, -4687, -4687,  2352, -4687, -4687,
    3448,  1985, -4687, -4687,  1708,  2368, -1818,  1165, -1182,  5256,
      13,    75,     5,   121, -4687,  3068, -4687, -4687, -2284, -4687,
   -4687, -4687, -4687,  4298, -1070, -1134, -4687, -4687,  2899, -4687,
    4302,  3960,  3203,   419,  4795, -4687, -1319, -4687,   -31, -4687,
   -4687,  -883, -4687, -4687, -4687,  -713,   852, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  2454, -4687,
   -4687, -4687,  3270,  2490, -4687, -4687, -2736, -4687, -2492, -1984,
   -4687, -2596,   332, -4687, -4687, -4687, -4687, -4687, -4687,   351,
   -4687,    52, -4687, -4687, -4687, -4687, -2111, -4687, -4687, -4687,
   -4687,  -945, -2597, -1154, -1113, -4687,  4055, -4687, -4687, -4687,
   -3079, -4687, -2750, -4687, -4687, -4687, -4687, -3373, -2864, -4687,
   -1364,  2353,  2355,  2356,  2357, -4687, -4687,   -45, -4687,    42,
   -4687,  -134, -4687,  -160, -4321, -4315,   500, -4687,   762, -4687,
   -4687, -4687,   242,  1438,   245, -1991, -2472, -1264,  1784, -4687,
   -4687, -2179,  4144, -2152, -2099,  1141,     3,  4241,  3721, -3190,
   -4687,   759, -4687,   354,  1691,   556, -4687, -4687,  1477, -1159,
    -105,   388, -3198, -4687, -1051,   -89, -4687, -2383,   487, -2269,
   -2737, -2297, -2608, -2408, -4687, -4687,  2930,     8, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687,  -549,  -143,  -507,  5350,
    3230, -4687,  2484,  4184,  4186, -4687, -4687,  3904,  1764,  1767,
   -4687, -3784, -2887, -4687, -4687, -4687, -1013,  4432,   812,  3748,
    1204,  1775, -3021,   836, -4099,  4201, -4687, -3611,   830,  4208,
    4203, -3405,  3660, -4687, -4687, -4687, -4687, -4687,  3060, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687,  4399,   -43, -1404, -4687, -4687,
   -4687,  1572,  3797,  3061, -1022, -4687, -4687, -4687, -4687,  4216,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,  2493,
    2105, -4687, -4687, -4687, -4687,  3175, -4687, -4687, -4687,  3190,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687,  1795,   112, -4687,  1151,    31, -4687,   782,
   -4687, -4687, -4687, -4687, -4687,  -104, -4687, -4687,  -123, -2800,
   -1164, -1150,   903,  1051, -2181, -2402, -2096, -3303, -1214, -4687,
   -4687,   860, -3431, -3039,   572,  -778, -1325, -1294,   109,  2295,
    3123, -1502, -4687,  4289,  -893, -1688, -2081,   807,  4059,    -6,
   -4687, -4686, -4687,  -124,   129,  2083,   -74,  3156, -3711, -4687,
      -9,    67, -4687,   160,    73, -4687, -4687,   300, -4687, -4687,
   -4687,   152, -4687, -4687, -4687, -4687,  3885, -4687,  2402,  5392,
   -4687, -4687, -4687,  3146,  5395,  -838, -4687,  3896,  3169, -4687,
    3176, -4687, -4687, -4687, -2141, -4687, -4687,   225, -4687,  2487,
   -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687, -4687,
   -4687, -4687, -4687, -4687, -4687, -1343,  4436,  5407,  3986, -4687,
   -4687,  2347, -4687, -2074, -1419, -1229, -1430, -4687,  4299,  2734,
    2739, -2314, -1099, -1091,  -981, -1117,  -999,  -989, -4687,  3762,
   -1544, -4687, -4687,  1736, -4687,  2736,   634, -4687, -4687,   473,
   -4687, -4687,   472,  4445,  3952, -4687, -4687, -4687, -4687, -4687,
    4286, -4687,     0,    -3, -4687,  -372, -4687, -4687, -4687,    62,
    5450,  5451, -4687, -4687,   212, -4687,  -928, -4687, -4687, -4687,
   -4687, -4687,  4223, -4687, -4687,  4224, -4687, -4687, -4687, -4687,
    4225, -4687, -4687, -4687, -4687, -4687, -4687,  1971, -4687, -4687,
   -4687, -4687, -4687, -4687,    96, -4687, -4687, -4687,   162, -4687,
    1461, -4687,  1081, -4687,  1021,   707,  1571, -2467
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1140,  2377,    67,    68,    69,    70,    71,
    2212,    72,  1432,  2155,  2898,  2899,    73,   974,   732,    74,
    1877,  1876,  2596,  2597,  3915,  4405,  4406,  3924,  4420,  3918,
    4409,  4410,  3921,  4414,  4415,  2662,  2663,  2664,  2665,  2666,
    2667,  2668,  2669,  2670,  2671,  2672,  2673,  2674,  2675,  2676,
    2677,  2678,  2679,  2680,  2681,  2682,  2683,  2684,  2685,  2686,
    2687,  2688,  4421,  4422,  3931,  3937,  3942,  3964,  2689,  2690,
    2691,  2333,    75,    76,    77,    78,  2698,    79,  3991,  2720,
      80,  3170,  3171,  1919,  4017,  4395,  5055,  4399,  5149,  5251,
    5072,  3318,  4735,  5056,  5057,  5158,  3442,  2460,  5277,  3156,
    5366,  3157,    81,  1214,  4769,  4770,  4771,  4960,  4961,  4962,
    4963,  5444,  5339,  5412,  5445,  5533,  5539,  5469,  5549,  5550,
    5551,  5537,  1500,  5552,    82,  1006,  1007,  1502,  2240,  2913,
    2241,    83,    84,   936,  2174,  2175,  2176,  2177,  3597,  2914,
    3592,  3593,  4540,  5470,  5535,  5340,  5341,  5258,  5342,  5161,
    5343,  5262,  5344,  5164,  5345,  5346,  5347,  5348,  5436,  5349,
    5257,  5462,  5336,  5337,  5438,  5511,  5530,  5350,  5171,  5252,
    5399,  5172,  5253,  5431,  5332,  5432,  5457,  5507,  5333,  5400,
    5460,  5403,  5351,  5357,  5446,  5352,  5358,  5353,  5176,  5269,
    5356,  5267,  5355,  5442,  5441,  5485,  4023,  4464,  1905,  2707,
    3395,  3396,  3397,  3173,  3174,  1770,  2886,  2887,  2888,  3978,
    3979,  3980,  3771,  3772,  3773,  2470,  3313,  3162,  1771,  1772,
    1838,  1774,  3401,  3982,  3983,  3402,  3403,  1775,  3405,  1776,
    1777,  1778,  3179,  3429,  3430,  3431,  3432,  3433,  2371,  2372,
    3714,  3071,  3711,  4613,  4225,  5305,  4232,  4282,  4283,  4881,
    5232,  5120,  5228,  5121,  5230,  5311,  5312,  5131,  5242,  5243,
    5029,  5030,  5031,  2453,  2454,  3381,  3382,  2455,  1225,  1839,
    3434,  2480,  1840,  3272,  1841,  1842,  2458,  3287,  3259,  4459,
    3803,  3804,  3805,  4332,  3806,  3202,  2488,  3796,  3797,  4350,
    3853,  4707,  5328,  3854,  3855,  3856,  3857,  3858,  3859,  3860,
    4040,  3861,  4041,  4036,  4037,  4034,  1263,  4670,  4671,  4672,
    4030,  4031,  4366,  4351,  4352,  4353,  4679,  4698,   880,  4688,
    4308,  1518,  3119,  1541,  1542,  3008,  2259,  1843,  4309,  4310,
    4311,  4360,  4103,  4802,  4355,  4333,  4907,  5047,  5050,  5146,
    5324,  3203,  1869,  3195,  1610,   752,  4938,  4939,  4940,  4943,
    4944,  4945,  4892,  4893,  4894,  4895,  3204,  2724,  4896,  4897,
    3421,  4884,  4290,  4291,  4292,  3205,  4661,    85,    86,  1748,
      87,  1757,    88,  1750,    89,  1862,  1206,    90,  2572,    91,
      92,    93,    94,    95,  2383,    96,    97,  3745,  3112,  3113,
    3114,  2415,  3106,  3107,  1145,  3319,  3906,  4926,  1187,  1844,
    1845,  2566,  1846,  1847,  4919,  1848,  3233,  1849,  1850,  1851,
    1852,  3577,  3578,  3210,  3579,  3262,  2490,  1469,  2893,  4378,
    2542,    98,    99,  1156,  1157,  1158,  1159,  1160,  1161,  1085,
     100,   101,  2344,  5005,   102,  1618,  1619,  1620,  3699,  4223,
    4605,  4859,  1623,  1624,  1625,  3054,  3697,   103,  1881,   104,
    2965,  2966,  2967,   105,  4738,  2578,   106,   107,  1888,  1889,
    1890,   108,   238,   109,  1488,  1486,  2217,  2218,   110,  1210,
    1211,  2580,   111,  2948,  2949,  1870,  1871,  4156,   112,   113,
    3436,   115,   881,   117,   118,  2251,  2252,  2989,  2990,   119,
     120,  1023,  1024,  1025,  1165,  1166,  1697,  2424,  2425,  2426,
     882,   883,  1372,  1260,  1872,   885,   886,  2108,   887,  1373,
    1374,  4357,   888,  1385,  2096,   889,  4049,   890,   891,  4120,
     892,   893,   894,  4072,  4073,  4492,  2128,  2129,  2130,   895,
     896,   897,  2839,  2062,  2063,  4114,  3549,  4514,  3449,  3450,
    3543,  4852,  3545,  4108,  4109,  4509,  4806,  4979,  5090,  5200,
    5092,  5201,  5208,  4980,   898,   899,   900,  1993,  4065,  3497,
    4481,  1938,  3482,  1873,  1874,  1285,  1286,  1251,  2745,  1944,
    2991,  4189,  2992,  3660,  3661,  3662,  4200,  4196,  2969,  2970,
    2993,  2994,  2995,  2996,  2997,  2998,  2999,  4994,  5215,  5216,
    5426,  4519,  5505,  4520,  4521,  4522,  4998,  4584,  4585,  4586,
    4587,  4588,  3327,  3328,  3329,  4162,  3234,  1983,  1984,  1991,
    2192,  2193,  1939,  2943,  1556,  4209,  1137,  1112,  1113,  1636,
    2354,  4594,  4853,  4854,  3666,  4590,  4851,  3268,  3269,  1170,
    1174,  2434,  3124,  3125,  1571,  1572,  1717,  1718,  5016,  3273,
    3143,  3222,  3180,  3144,  3145,  1701,  1702,  1167,  1703,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,  2907,  2445,  1203,   753,
    2143,  2144,  2145,   139,   140,   979,  1000,  1491,  3629,  3630,
    4168,  3631,  3438,  3633,  4174,  1109,  2471,  2472,  4175,  1110,
    2349,  2350,  2351,  4549,  4551,   141,   142,  4164,  4165,  1001,
     143,  3135,  1729,  1730,   144,  1102,  1594,  1595,  1596,  2328,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,  1569,  1086,  1779,  1575,  1088,  1089,
    1090,  1576,  2301,  3036,  1557,   189,   190,  1741,   191,  1183,
    1184,  1742,   192,  1433,  2168,  3589,  4136,  4525,  2169,  2170,
    2908,   193,  1003,  1497,  1493,  1498,  2224,  2225,  2223,  2974,
    2972,   194,   993,  1484,  2957,   195,   984,   196,   197,   988,
    2205,  1477,  4157,  3439,  3749,  4258,  4259,  4261,  4632,  4633,
    5296,  5453,  5496,  5478,  5499,  5500,  5503,  5522,  5523,   901,
    1639,   902,  4689,  4690,   903,   904,   905,   906,   907,   908,
    4477,  4169,   909,  2435,  4591,   910,  4166,   911,  3000,  2446,
     722,  4416,  4417,  1146,  1640,  2428,  2264,  4241,  1375,  1124,
     964,  5178,  1043,  1148,  1533,  1149,  2148,  1534,  2927,   724,
     725,   726,  5179,   727,   728,   968,  1048,   729,   198,  1049,
     199,  2273,   200,  3679,  3680,  1547,  1551,  2288,  2289,  2290,
    1091,  2079,  2282,  1548,  2291,  1052,  2856,  1526,  1527,  2271,
    1528,  2269,  1529,  3017,  2299,   201,  1479,   735,  2208,  2209,
    3616,   202,  1106,   203,   204,   205,  1195,   206,  2197,  2941,
    2942,   207,  2243,   208,  2179,  2188,  1436,   970,   971,  2930,
    3101,  2410,  2411,  2928,  2149,  1535,  2397,  1680,  1669,  1908,
    2710,  2711,  2712,  2713,  3085,  2715,  2716,  2717,  3413,  1151,
    1672,  1909,  1152,  1447,  2182,  1690,  4545,  4141,  5097,  4822,
     209,   239,   738,  1223,  1895,  2248,   210,   211,   212,   213,
    1712,   914,  3001,   915,  1026,  1239,   754,  1928,  1920,   232,
     233,   234,   757,   758,   235,  1860,  1861,  4400,  4928,  5059,
    5371,  5372,  1922,  5420,  1923,  1924,  4454,  5074,  5416,  5475,
    1925,  4020,  4774,  5193,  5368,   214,  1645,  1641,  1122,  2365,
    2359,  2361,   215,   216,  1472,   217,   218,  5010,  5011,  4005,
    2571,  3897,  3898,  4389,  3316,  3902,  2895,  3189
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     723,  1087,  1736,   121,  1406,   116,  1910,  2043,  1411,   913,
    1171,  2429,   932,   114,  1041,  1084,   973,  1998,  1723,  1519,
    1523,  1743,  1719,  1150,  1287,   992,  1123,  1175,  2952,  2346,
    1600,  1706,  1008,  1685,  1044,  1013,  3700,  1567,  2044,  1552,
    1008,  2189,  2142,  1100,  3248,  2561,  1670,  1107,  3557,  1114,
    1246,  1682,  2586,   721,  1671,  3127,  3128,  1130,  2141,  1683,
    1129,  2915,  1601,  1773,  3181,  1660,  2095,  3181,  3181,  1136,
    2835,  2836,  3886,  3969,  1853,  3084,  2916,  1135,  1854,   933,
    3092,  3608,  3632,  2845,  2846,  2847,  2245,  3750,   966,  2489,
     991,  1147,  3298,  3299,   967,   997,  3389,  1708,  2944,  3002,
    3866,  2384,  1198,  1127,  3552,  2456,   966,  3185,  3186,  2518,
    1045,  4045,   967,  2457,  3398,  2487,  1047,  3485,  2459,  1713,
    1986,  3486,  4349,  1722,  1176,  2495,  1178,  2541,  4354,  2499,
    2389,   972,  3907,  2392,  2065,  2394,  3663,  1234,  1235,  3893,
    4228,  1947,  1948,  2519,  2885,  3480,  3031,  4268,  4373,  4374,
     965,  1686,  2944,  3480,  3192,  2531,  3481,  3487,  1099,  1354,
    1355,  1687,  1356,  2246,  3481,  3136,  3399,  3400,   965,  1684,
    2000,  3407,  2982,  3591,  2474,  1407,  3408,  3422,  2321,  3696,
    3288,  3289,  2013,  2014,  2015,  1100,  1219,  1221,  2017,  2416,
    2418,  2419,  3638,  3984,  3985,  2331,  1177,  4170,  2064,  4812,
    2151,  3223,  2334,  1046,  4548,  4813,  4412,  4358,  2337,  3122,
    1365,  1366,  1549,  1463,  1188,  1408,   723,  1365,  1366,   723,
    1147,  1199,  1100,   759,  2191,  1365,  1366,  2053,  2827,  1882,
    3260,  3231,  3264,  3265,   736,  1408,  1100,  3646,  3544,  3066,
    3243,  3383,  3653,  2891,  1408,  3743,  3197,  3451,  3452,  3453,
    2718,  3068,  2332,  2399,   990,  2400,  2402,  2403, -2340,   996,
    3132,  4955,  1365,  1366,  3489,  -739, -1078,  1365,  1366,  1190,
    4314,  4318,  1197, -1970,  4319,  4621,  3580,  1365,  1366, -2178,
    3291,  2332,  1505,  2256,  3293,  4201,  3678,  2576,  2073,  3505,
    1864,  4382,  4328,  3507,  1365,  1366,  3181,  1207,  5231,  3078,
    1185,  3079,  1940,  1941,  1942,  1796,  1365,  1366,  4731,  3515,
    3516,  1921,  1929,  1952,  3093,  3522,  2705,  3095,  3123,  2380,
    3096,   969,  5287,  1796,  4320,  2191,  1578,  4983,  4610,  1222,
    3424,  3534,  3535,  3709,  1365,  1366,  -726,  1200,  1454,   969,
    3541,  1896,  1365,  1366,  2006,  3883,  1883,  2010,  1365,  1366,
    1884,  1212,  4267,  1202,  -727,  1365,  1366,  1583,  3559, -1857,
    4746,  1878,  -600,  3634,  1885,  1179,  2027,  2028,  3547,  3675,
    2032,  1759,  3795,  3741,  3742,  1365,  1366,  1365,  1366,  2191,
    3654,  1365,  1366,  4558,  1240,  4993,  4387,  2250,  2046,  2047,
    1760,  1365,  1366,  2051,  2052,  3410,  4957,  2955,  1365,  1366,
    3655,  1365,  1366,  2859,  3198,  1163,  4958,  -739,  2072,  1416,
    1417,  1418,  4885,  3656,  1421,  1422,  1365,  1366,  1425,  1230,
    1427,  1428,  1429,  1365,  1366, -2933,  2962,  4687,  3483,  1365,
    1366,  5288,  5008,  2380,  1516,  1172,  1163,  1172,  1365,  1366,
    1365,  1366,  1216,  3108, -2110,  5142,  1325,  3867,  1761,  4312,
    4826,   989,   985,  1365,  1366, -2119,  2804,  2266,  1796,  2340,
   -1857,  1891,  1506,  1208, -2934,  -658,  2185,  1053,  5259,  5260,
    1796,  -585,  4655,  1162,  4206,  4471,  3181,  5086,   240,  4326,
    4327,  1153,  3006, -2840,  1365,  1366,  3747,  5369,  2363, -1063,
    2709,  1616,  1962,  1365,  1366,  1492,  3657,  3963,  2092,  3873,
    1886,  4695,  1637,  1494,   240,  -962,  1287,  2929,  1762,  1475,
    1055,  1028,  1012,  3320,  2463,  4696,  1524,  1162,  2263,  2125,
    2126,  4273,  1365,  1366,  -627,  2283,  1706,  2819,  -616,  1410,
     730,  1695,  1409,  3199,  1365,  1366,  2287,  4007,  4547,  4003,
    3425,  1365,  1366,  1710,  1613, -2933,  1168,  5087,  1168,  4959,
    1162,  3895,  1409,  2316,   240, -2120,  3685,  2319,  3122,  1611,
    3539,  1409,  2323,  3181,  1164,  1893,   784,  4085,  5195,  3774,
    1621,  1131,  4188,  4192,  1706,  5246,   986,  1464,  1368,  5036,
   -1857,  1369,  4203,  4204, -2934,  1368,  4807,  5289,  1369,  1365,
    1366,  2338,  2339,  1368,  3537,  2860,  1369,  2743,  1887, -2340,
     733,  1763,  1163,   734,  1365,  1366,  2722,  2227,  1164,  3875,
    1132,  4674,  3938,  1879,  3943,  1365,  1366,  4134,  3658,  1229,
    4349,  3538,   737,  1162,  4369,  1614,  1913,   242,  1326,  2723,
    1368,  1451,   789,  1369,  3321,  1368,  4004,  1696,  1369,  2070,
    1955,  1164,  4274,  5070,  1894,  1368,  5143,  3998,  1369,   995,
    4720, -1857,  3496,  -739,  1365,  1366,  4461,  1622,  1097,  1863,
    2892,  2302,  1368,  5401,  5401,  1369,  4808,  3123,  4614,  3894,
    1711,   731,  2442,  2443,  1368,  1163,  2101,  1369,  2963,  3077,
    1577,  5276,  4930,  2890,  1638,  2186,  1764,  -962,  2464,  5088,
    3659, -1857,  3012,  1525,  3013,  1617,  2124,   240,  1495,  1678,
    2364,  4119,  1368,  3645, -1857,  1369,  5301,  4697,  5370,  1126,
    1368,  1209,  2275,  1369,  1164,  4413,  1368,  1476,   934,  1369,
    2267,  3632,  2341,  1368,  3484,  4989,  1369,  5447,  5447,  1100,
    1100,  1365,  1366,  1765,   801,  -810,  2438,  1147,  3683,  1232,
    4356,  4581,  2891,  1368,  2211,  1368,  1369,  1482,  1369,  1368,
    4659,  2577,  1369,  1362,  4370,  2142,  5144,  3200,  1154,  1368,
    4663,  1173,  1369,  1173,  3427,  2452,  1368,  4462,  4666,  1369,
     733,  2141,  1892,   734,  1217,  1517,  4831,  2452,  3988,  5227,
    4582,  2889,  4911,  1130,  1368,  5009,  1271,  1369,  3788,  3605,
   -1857,  1368,  3981,  3194,  1369,  3194,  1288,  1368,  1579,  3903,
    1369,    42,  5135,  3868,  4712,  3715,  1368,  3890,  1368,  1369,
    2456,  1369,  2861,  4388,  1766,  4115,   817,  4117,  2457,  1241,
    4921,  1368,  3664,  2459,  1369,  4573,  4574,  1516,  2862,  1584,
    3548,  2187,  1079,  3729,  3730,  3731,  3732,  2404,  2755,  1371,
     818,  3109,  2944,  1180,  1220,  1220,  1371,  2479,  3754,  2404,
    1466,  3667,  1368,  1865,  1371,  1369,  1455,  3872,  2753,  4267,
    3555,  1368,  2964,  4984,  1369,  5073,  3787,  2915,  3790,  1933,
    3340,  1147,  4622,  1363,    49,  3133,  5061,  5062,  1376,  2150,
    2768,  1359,  2916,  1410,  4321,  3676,  4298,  3582,  4263,  1358,
    1368,  1371,  1507,  1369,  1365,  1366,  1371,  1461,  3781,  3352,
    1231,  4190,  1368, -2933,  2944,  1369,  1371,  2393,  1520,  1368,
    1079, -2340,  1369,  1419,  5290,  3744,  1538,  1543,  1424,  2479,
   -1078,  1487,  2479,  1371,  2153,  3974,  2714, -1970,    54,  2479,
    3672,  2210,  3435, -2178,  2575,  1371,  1570,  2719, -1857,  1706,
    2220,  1496, -2934,  3201, -2119,    55,  4107,  2305,  2956,  4371,
    4839,  3752,  4118,  3080,  3081,  1880,  4026,  1368,  1465,  5489,
    1369,  3794,  2851,  1371,  1094,  -405,  1155,  1661,  1147,  1661,
    1242,  1371,  1368,  3067,  1470,  1369,  2848,  1371,  3181,  4029,
    1327,  4124,  1880,  1368,  1371,  3069,  1369,   987,  1485,  1147,
    -726,  4569,  2736,  1767,  4650,  4556,  4055,  1880,  4056,  3341,
   -1857,  4250,  1364,  1880,  1371,  2733,  1371,  2074,  -727,  2858,
    1371,  2075,  4074, -1857,  4075,  2828,  -600,   913,  2479,  2829,
    1371,  4761,  1368,  3686,  4482,  1369,  1147,  1371,  2405,  4089,
    1371,  4412,  1365,  1366,  1147,  1147,  1410,   844,  3244,  1704,
    2405,  1044,  1387,  3020, -2120,  1371,  1093,  1175,  1612,  4656,
    3254,  4280,  1371,  5247,  1147,  2456,  2754,  2074,  1371,  4135,
    2780,  2772,  1880,  2457,  2784,  3353,  4121,  1371,  2459,  1371,
    1755,  2805,  1171,  1724,  1452,  3928,  1956,  2588,  3933, -2933,
    2744,  3294,  1371,  3973,  2808,  3945,  2806,  1659,  2809,  1725,
    3950,  3951,  3952,  3953,  3954,  4651,  1100,  1628,  3424,  1368,
    2734,  3961,  1369,  4570,   966,  1114,  3968,  1365,  1366,  3971,
     967,  3325,  1768,  1371, -1857,  1749,  1128,  1045, -2934,  -658,
    3409,  2479,  1371,  1047,  2825,  -585,  2849,  2479,  2826,  5274,
    4170,  2375,  3611,  1653,  4463,  1663,  2759, -2840,  2820,  2479,
    5089,  1358,  1178, -1063,  1176,  3563,  5331,  5430,  2406,  3564,
     935,  1371,  4163,  3418,  3864,  3865,  1431,  1147,  5506,  2892,
    1907,  3088,  4583,  1371,  1659,  4060,  1720,  4068,  1517,  4061,
    1371,  4069,  2439,  1707,  4675,  2760,  3110,  3111,  -627,  1744,
    2479,  4086,  -616,  1147,  2479,  1751,  1752,   121,  1147,   116,
    1756,  5526,  2765,  3061,  3789,  1855,  1261,   114,  1857,   723,
    1629,  1459,  1100,  3736,  4140,  3904,  2735,  1082,  3270,  1875,
    1046,  1627,  1177,  4087,  1554,  2263,  1480,  4088,  1371,  1897,
    1898,  1899,  1489,  2770,  1902,  2778,  1516,  1906,  1147,  5076,
    1911,  1912,  2771,  1371,  2774,  3984,  3985,  2375,  4356,  2044,
    3100,  2395,   975,  4126,  1371,  1390,  2119,  4127,  3011,  3010,
    1365,  1366,  1858,  1688,  3613,  4294,  4295,  3751,  1412,  4439,
    1521,  2398,  1368,  3612,  1288,  1369,  1329,  3584,  5494,  2511,
    1175,  2018,  1002,  1172,  2748,  2962,  2401,  3042,  1288,   982,
    4559,  3900,   994,  1371,  2123,  1359, -2999,  2786,  1719,  1719,
    4431,  2704,  1555,  1358,  1987,  1685,  3901,  1988,  2139,  3040,
    1126,  4391,   966,  2728,  2729,  2730,  2731,  3587,   967,  3045,
    1365,  1366,  3047,  1682,  2732,  3050,  2791,  1220,  2407,  1365,
    1366,  1683,  3419,  1914,  2408,  3406,  2045,  3939,  2795,  1365,
    1366,  1630,   980,  2184,  1773,  2796,  2408,   969,  1773,  4239,
    1108,  3404,  2066,  4709,  1773,  5044,  4601,  5046,  3072,  2564,
    4392,  1191,  1094,  1365,  1366,  2097,  2098,  1408,   913,  2102,
    1371,  2084,  2103,  2104,  2105,  4502,  1192,  2109,  2110,  2112,
    2114,  2115,  2116,  2117,  2118,  2183,  4242,  3635,  3636,  4019,
    2890,  4908,  4909,  2798,  1168,  1130,  3734,  3716,  2100,  3934,
    4565,  5320,  4269,  3614,  2917,  3073,  3997,  3591,  2799,  1101,
    1368,  1408,  1147,  1369,  3398,  2752,  1460,  1781,  2874,  2132,
    2133,   723,  2135,  1686,  2137,   723,  1147,  1365,  1366,   723,
    2147,  1147,  1100,  1687,  2152,  5394,  1095,  2409,  2178, -2110,
    2244,  1684,  2512,  4224,  4013, -2110,  4401,  4402,  1365,  1366,
    2181,  1853,  1853,  1147,  3029,  1854,  1854,  2261,  2803,  3480,
    3454,  1147,  1549,  4475,  1147,  3133,  3399,  3400,  2196,  2198,
    3481,  3407,  2120,  4286,  2134,  4181,  3408,  4262,  2138,  5278,
    3652,  5495,  2146,  1100,  1100,  1368,  4598, -2999,  1369,  1915,
    1365,  1366,  1100,  1100,  4205,  1100,  2222,  5212,  2121,  1365,
    1366,  2311,  4467,  3737,  5264,  2866,   966,  4612,  1147,  1147,
    1105,  3758,   967,  2142,  1103,  3600,  2320,  2257,  1763,  4620,
    3194,  2561,  1916,  2396,  4624,  1147,  2489,  2253,  3480,  2141,
    4488,  1041,  4515,  1371,  4139,  2821,  1267,  2963,   966,  3481,
    2276,  1365,  1366,  2396,   967,   969,  4830,  1220,  2284,  4216,
    4214,  1044,  4254,  4915,  3690,  3562,  3720,  5224,  2396,  2388,
    5363,  1365,  1366,  4255,   723,   723,   723,  1100,   723,  1147,
    1100,  1664,  3641,  2199,  1175,  4112,  4178,  1517,  4116,    42,
    2317,  1773,   723,  1555,  1147,  5384,  2430,   723,  3598,   966,
    1246,  2373,  3673,  3674,   981,   967,  3181,  3181,  2207,  1220,
     965,  3420,  2944,  1365,  1366,  1082,  4349,  2219,  1220,  1173,
    2221,  1689,  4265,  3615,  2896,  3567,  3568,  2306,  2307,  2308,
    2450,  2310,  2489,  2518,  4506,  2412,  3940,  1045,  1368,   983,
    3687,  1369,  3879,  1047,  2065,  2318,  4437,  4438,  1114,  2355,
    2322,  1365,  1366,  2884,  4455,  4990,  1461,  3640,  2487,  2313,
    1765,  4243,    49,  2366,  3691,  3692,  1765,  2519,  1522,  1147,
    1413,  4432,  4433,  4434,  2122,  2944,  5265,  4423,  2171,  2851,
    4468,  1371,  1193,  3724,  1332,  3726,  3727,  1147,  1707,  1365,
    1366,  5395,  2309,  4832,  1409,  2312,  4660,  5094,  1368,  4213,
    1809,  1369, -2034,  1147,  3774,  4441,  3514,  1368,  2064,  5037,
    1369,   240,  1760,  1194,  1147,  4710,    54,  1368,  4516,  1317,
    1369,  2314,  1402,  1403,  1404,  1405,  3735,  5321,  1365,  1366,
    1046,  2964,  1745,    55,  1365,  1366,  5197,  2436,  1409,  4711,
    1215,  1368,  4713,  2447,  1369,  3573,  2440,  1168,  1147,   969,
     236,  1917,  3738,  3739,  1321,  4517,  1371,  2489,  4700,  2456,
    4888,  1765,  4469,  3869,  1408,  2461,  2462,  2457,  4393,  4968,
    1761,  2550,  2459,  3935,  3936,  3217,  1104,  1989,  4456,  5365,
    1990,   969,  1268,  5516,  1365,  1366,  4516,  2746,  4838,  1365,
    1366,  2747,  4277, -2999,  4256,  3668,  3669,  3670,  4809,  4376,
    3776,  1365,  1366,  5203,  1126,  1368,  3137,  3941,  1369,  1915,
    1365,  1366,  4154,  1555,  3884,  4976,  3775,  1666,  1108,  3425,
    1365,  1366,  3887,  4517,  4849,  3256,  1368,  3891,  5322,  1369,
    1365,  1366,   969,  3652,  2563,  2076,  1163,  1079,   237,  1365,
    1366,  3218,  1926,  1079, -2110,  2492,  2838,  1128,  4197,   812,
    4489,  1365,  1366,  2437,  3981,  2482,  4505,  5266,  3571,  5323,
    2088,  3927,  2441,  3929,  1859,  5139,  1172,  4977,  1368,  4927,
    2493,  1369,  3138,  3946,  3947,  3948,  3949,  1368,  2581,  1100,
    1369,  4198,  3955,  3956,  3957,  3958,  3959,  3960,  1138,  3962,
    3965,  3966,  3967, -2034,  1100,  1511,  1573,  3972,  5183,  1371,
   -2034,  3753,  1115,  3139,  1128,  3257,  3540,  1667,  2077,  5184,
    2565,  4394,  3607,  5020,  2315,  1365,  1366,  4386,  1918,  1368,
    1767,  2842,  1369,  1763,  1365,  1366,  1767,  1100,  1365,  1366,
    4245,  1760,  4888,  5325,  1365,  1366,  5021,  1141,  1079,  1368,
    1365,  1366,  1369,  3219,  4617,  4889,  1365,  1366,  1574,  1116,
    4619,  5365,  4544,  1882,  4302,  1318,  4692,  2843,  3181,  1371,
    1365,  1366,  1169,  2551,  4518,  4457,  4303,  2889,  1371,  1746,
    4737,  4467,  1365,  1366,  3140,  2855,  4377,  1168,  1371,  4257,
    4304,  1368,  3391,  4470,  1369,  1365,  1366,  4692,  1139,  1761,
    1322,  4556,  1055,  1028,  2583,  1747,  1365,  1366,  4850,  4427,
    5203,   998,  1371,  1365,  1366,  3684,  1726,  3258,  1764,  2692,
    1365,  1366,  4789,  3689,  1365,  1366,  2494,  1288,  2779,  1368,
    4306,  1767,  1369,  3987,  1117,  3220,  1365,  1366,  1365,  1366,
    1365,  1366,  4518,  1605,  1365,  1366,  3681,  3181,  3181,  3986,
    4901,  1186,  2726,  3427,  5255,  4900,  1391,  1392,  1365,  1366,
    4246,  1668,  2089,  1365,  1366,  1765,  3141,  1368,  1365,  1366,
    1369,  1917,  3122,  2889,  4066,   836,  1371,  4978,  1727,  2918,
    1883,  4302,  1365,  1366,  1884,  1147,  5229,  4752,  4753,  5233,
    4458,  1409,  3392,  4303,  1512,  2915,  4199,  1371,  1885,  3393,
    3556, -2034,  4266,  1147,  2523,  2867,  1368,  4304,  5326,  1369,
    2916,  5104,  1368,  1763,  1189,  1369,  1936,  2954,  2871,  1055,
    1028,  2875,  4215,  1130,  5455,  5456,  2863,  4889,  1365,  1366,
    2761,  4211,  4212,  2078,  1359,  1365,  1366,  5185,  2890,  1371,
    4634,  4635,  1358,  4067,  4692,  3440,  4636,  1130,  1371,  4468,
    2873,  1376,  1763,  4080,  5116,  3595,  3872,  5105,  5099,  3554,
    1100,  4511,  1368,  4512,  3009,  1369,  4630,  1368,  1365,  1366,
    1369,  2958,  2959,  2762,  1410,  4247,   999,  1100,  1866,  1368,
    3021,  3123,  1369,  3565,  1859,  3566,  1196,  4691,  1368,  5327,
    1371,  1369,  3527,  2944,  2944,  1100,  1288,  1147,  1368,  2944,
    4631,  1369,  1173,  1365,  1366,  4238,  1867,  1606,  1368,  4244,
    1371,  1369,  2926,  1728,  4145,  4001,  2931,  1368,  4691,  5256,
    1369,  4302,  2879,  1201,  1100,  1365,  1366,  1100,  2880,  1368,
    2917,  4473,  1369,  4303,  1886,  1147,  3721,  1764,  1918,  1147,
    1147,  4091,  1079,  1937,  4356,  1765,  2889,  4304,  3225,  4451,
    5064,  3271,  1371,  4179,  1513,  5067,  3221,  1365,  1366,  1055,
    4315,  1162,  4092,  3722,  4913,  4914,  3596,  2524,  4424,  1866,
    2926,  1202,  2983,  1657,  1100,  2882,  5388,  1130,  3394,  2090,
    4125,  1204,  1147,  4430,  1765,  2368,  5106,  3142,  2369,  4861,
    1371,  4667,  1220,  1368,  1118,  2091,  1369,  1867,  1147,  3091,
    1365,  1366,  1368,  1044,  4568,  1369,  1368,  1387,  3115,  1369,
    1220,  1044,  1368,  4791,  3226,  1369,  1119,  4191,  1368,  4888,
    5117,  1369,  1365,  1366,  1368,  1767,  4202,  1369,  1371,  3038,
    1936,  3129,  1887,  4171,  1365,  1366,  4862,  1704,  1368,  2945,
    1936,  1369,  2950,  1868,   784,  3227,  1365,  1366,  3864,  3865,
    1368,  2769,  1164,  1369,  1365,  1366,  1753,  1120,  1936,  1100,
    1100,  2044,  2749,  1368,  2044,  3611,  1369,  1371,  1936,   966,
      42,  2782,   966,  1371,  1368,   967,  1205,  1369,   967,  1045,
    1162,  1368,  5190,  1130,  1369,  1047,  3060,  1045,  1368,  4668,
    3740,  1369,  1368,  1047,  1754,  1369,  4014,  1365,  1366,  1365,
    1366,  4163,  1936,  4163,  1368,  3424,  1368,  1369,  1368,  1369,
     789,  1369,  1368,  2783,  2879,  1369,  3228,  1147,  1121,   221,
    3064,  5239,  1079,  1371,  4823,  3014,  1368,  3252,  1371,  1369,
    3118,  1368,  1163,  4669,  1369,  1735,  1368,  2370,  4957,  1369,
    1371,  4890,  4891,    49,  1768,  2447,  3015,  4676,  4958,  1371,
    1368,  2787,  4470,  1369,  1213,  1147,  2722,  1951,   976,  1371,
    2563,  1079,  1720,  1720,  3297,  1365,  1366,  2005,  3131,  1371,
    4677,  1164,  1046,  1100,  3048,  3049,  1130,  2944,  1371,  2723,
    1046,  4123,    25,  4131,  2773,  2009,  4130,   966,  3016,  2794,
    1371,  5189,  4776,   967,  2044,  2031,  1368,    54,  3229,  1369,
    4021,  3187,  1222,  1368,  4889,  1767,  1369,  3193,  3241,  4678,
    1390,  4423,   801,  3206,  3208,  3211,  3212,  3213,  3214,  3215,
    3864,  3865,  4022,  3224,  1215,  3235,  1446,  5381,  2797,  2071,
    1457,  1365,  1366,  2277,  2800,  3235,  1368,  3245,  3246,  1369,
    3235,  4305,  3250,  3251,  1767,  1147,  3253,  3235,  5237,  5238,
     977,  5558,  3263,  1218,  1371,  3266,  2750,  2045,  1226,  5282,
    2588,  5490,  3276,  1371,  4973,  3277,  1100,  1371,  1607,  1608,
    5206,  1368,  4639,  1371,  1369,  3196,  3292,  4643,  3235,  1371,
    5491,  4646,  1147,  3130,  4147,  1371,  3216,  1365,  1366,  2812,
    3270,  4959,  3236,  1368,   817,  1609,  1369,  5385,  1100,  1371,
    1224,  2830,   969,  5137,  5138,   969,  2278,  3798,  3235,  3330,
    2837,  1371,  2751,  4890,  4891,  3425,  2588,  3862,  3863,  1227,
    2840,  2044,  3267,   978,  1371,  1368,  3275,  2537,  1369,  5284,
    3065,  1055,  1028,  3279,  3280,  1371,  2489,  5285,  1228,  4025,
    5209,  2562,  1371,  1233,  3529,  3406,  1055,  1028,  5210,  1371,
    1236,  4059,  4941,  1371,  3148,  1520,  2562,  4946,  4305,  1520,
    1237,  3404,  5118,  1768,  2773,  1371,  5421,  1371,  1368,  1371,
    1238,  1369,  4797,  1371,  1005,  1907,  1243,  5375,  1760,  3653,
    2538,  3278,  1005,  4306,  5479,  1128,  3435,  1371,   219,  1387,
    1368,  3181,  1371,  1369,  1411,  2775,    36,  1371,  1674,  2588,
    4217,  4397,  1368,  1365,  1366,  1369,  1391,  1392,  1365,  1366,
    3531,  1371,  1244,  3322,  1368,  4062,  4398,  1369,  1450,  3230,
     969,  1453,  1368,  1100,  4070,  1369,  1456,  1100,  4076,  2604,
    2605,  1458,  1245,    42,  4077,  4714,  1761,  1247,  4716,  4717,
    4078,  4764,   366,  1147,   368,  2864,  4079,  2776,  3181,  3181,
    1410,  2003,   723,  3443,   723,   723,   723,  1371,  2788,  1299,
    4081,  3437,  2588,  1248,  1371,  1368,  2539,  1368,  1369,  1249,
    1369,  3569,  4084,  1147,  2789,  1252,  3503,  1147,  2588,  1316,
    4941,  1364,  2191,  2790,  4946,  4090,  3225,  2588,  4566,  3290,
    4465,  2792,  1330,  1331,  1253,  2588,  4093,  1371,  4305,  1254,
    5136,  2385,  2386,  3585,  2387,  3441,    49,  3444,  3445,  1415,
    4095,  4596,  4597,   733,  4097,   844,   734,  3654,  3590,  4316,
    3851,  2279,  1387,  4478,  4479,  1420,  4099,  1585,  4100,  1676,
    4101,  1967,  1371,  1368,  4499,  1677,  1369,  3655,  3384,  3427,
    4941,  1866,  3388,  2833,  1255,  4946,  3583,  2588,  4500,  4494,
    3656,  1256,  3226,  4501,  1371,  4981,  4322,  1586,  3546,  4323,
      54, -1857,  2066,  1674,  3281,  4029,  3282,  1387,  1831,  1867,
    1257,  1832,  4644,  2621,  2622,  3391,    42,    55,  4937,  1258,
    4252,  4253,  4995,  3227,  4996,  2044,  1371,  1423,  4128,  1763,
    2922,  1773,  1390,  1387,  2923,  3102,  3103,  3864,  3865,  1368,
    3104,  3105,  1369,  1259,  3575,  3576,  1760,  1359,  1587,  3283,
    1706,  1262,  1588,  4445,  1147,  1358,  3058, -1857,  4787,  1678,
    3059,  1147,  4846,  4847,  3488,  3776,  1055,  1028,  2588,  1371,
    4483,  4443,  3284,  3657,  3311,  3312,  1147,  1971,  2178,  4444,
    3560,  3775,  3784,  2178,  2588,  1264,  3785,  3599,  1147,    49,
    1265,  1371,  5218, -1857,  3228, -1857, -2110,  3391,  4790,  4757,
    4758,  4759,  4760,  1371,  1761,  1400,  1401,  1402,  1403,  1404,
    1405,  3285,  1266, -1857,  1764,  1371,  2280,  1100, -1857,  2421,
    2422,  1675,  2423,  1371,  1100,  1100,  4487,  1269,  1377,  1378,
    4890,  4891, -1857,  4796,  1676,  2281,  3137,  4082,  1270, -1857,
    1677,  2588,  1288,    54,  3437,  1147,  1426, -1857,  4296,  3864,
    3865,  1100,  4297,  1130,  1130,  4798,  3644,  4418,  4419, -1857,
      55,  1765,  1359,  1272,  1520,  1390,  1371,  4450,  1371,  1379,
    1358,  4297, -1857,  1041,  1679,  1763,  3229, -1857, -2110,  4523,
    5528,  5529,  1380,  2588,  4524,  1972, -1857,  4799,    64,  1975,
    1273,  1394,  1395,  1044,   219,  3658,  1976,  3392,  2422,  1274,
    2423,  1275,  3138,  1147,  3393,  3137,  3706,  1589,  3708,  1276,
    1390,  1368,  3391,  1014,  1369,  3987,  1368,  3307,  3310,  1369,
    1277,  1559,  1381,  3701,  1678,  4546,  1096,  1098,  3575,  3057,
    4800,  3986,  2207,  3139,  1371,  1382,  1390,  3786,  1278,  2219,
    3622,   966,   966,   966,  1279,  4032,  4560,   967,   967,   967,
    4561,  3137,  4801,  1282,  4249, -1857,  1283,  1763,  1642,  1643,
    5087,  1646,  1383,  1647,  4887,  1289,  4047,  3659,  4606,  1045,
    1430,  3138,  4607,  2034,  2035,  1047,  5051,  1977, -1857,   784,
    1560,  1434,  1147,  1435,  5053,  1590,  1290,  1520, -1857,  1291,
     220,  4608,  1437,  4818,  3225,  4607,  1100,  2447,  3757,  1130,
    1371,  3394,  3175,  1292,  3140,  1293,  2191,  1765,   912,   221,
     366,  4641,   368,  1561,   962,  4642,  1294,  3138,  4837,  4662,
    1438,  2191,  3768,  4557,  1394,  1395,  1384,  5083,  2540,  5248,
    4662,  1128,   962,  2642,  2643,  1295,  1042,  1296,  1079,  1679,
    1015,  1979,  1764,  3225,  1297,   789,  3009,  1520,  3139,  1591,
     912,  1125,  2335,  2336,  4648,  1147,   912,  1387,  4649,  3193,
    3226,  3193,  1046,  3286,  1300,  1301,  1302,  3206,  1668,  1394,
    1395,  3807,  1763,  3176,  4739,  4741,  3976, -1857,  4740,  4742,
    3235,  1303,   222,  3394,  1304, -1857,  3141,  1305,  3870,  1765,
    4744,  3227,  1306,  1307,  4745,  1394,  1395,  3230,  1308,  4028,
   -1857, -1857,  5198,  1439,  1309,  1147,  4171,  1387,  1440,  3226,
    4747,  3878,  4749,  4751,  4748,  1310,  4750,  4649,  5538,  3140,
    1016,  1767,  4756,  1311,  1387,   223,  4649,  1312,  1313,  1314,
    1444,  3235,  2044,  3989,  5538,  1315,  1319,  2044,  1445,  3235,
    3227, -1857,  1386,  3235,  3235,  1448,  4779,   801,  4792, -1857,
    4782,  1441,  2588,  4815,  1320,  3177, -1857,  2588,  3137,  1100,
    5538,  4623,  3228,  1323,  1147,  1147,  4863,  1442,   224,  4879,
    4642,  1592,  1371,  4649,   969,   969,   969,  1371,  1324, -1857,
    1328,  1332,  1980,  1387,  1079,  1398,  1399,  1400,  1401,  1402,
    1403,  1404,  1405,  1443, -1857,  2581,  4227, -1857,  3394,  1333,
    1982,  3141, -1857, -1857,  1765,  4883,  1334,  1335,  1336,  4649,
    1147,  3228, -1857,  1593, -1857, -1857,    42, -1857,  1175,  1337,
    1449,  4886,  4902, -1857,  3138,  4649,  4903,  1338,  1339,   817,
    4904, -1857,  1562,  1340,  4903, -1857,  3977, -1857, -1857,  1341,
    1768,  4950,  1342, -1857,  3229,  4649, -1857,  3149,  5034,  1343,
    1387,  1147,  5035,   818,  1344,  3139, -1857,  1345, -1857,  1346,
    1390, -1857,  1347,  3150,  1348,  1349,  1079,  1767,  2917,  1387,
   -1857, -1857,  1350,  3976,  1220,  5054, -1857,  1387,  5112,  4642,
    1351,  1462,  5066,  1467,  1648, -1857,  3785,  1100,    42,    49,
    1100,  5140,  3807,  3229,  1352,  5141,  1353,  4301, -1857,  3437,
    4038,   225,  4042,  1653,  4016,  1414,  1446,  3142,  3437,  3437,
    1390,  1358,  1468,  5298,  3437,  1474,  1478,  5299,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1405,  3140,  1390,  1481,  4229,
    4325,  4869,  4870,  1490,  4872,  4922,  5303,  5306,  4330, -1857,
    3912,  4607,  1499,  3626,  3627,  4363,  4876,  4877,  1501,  1767,
    1504,   966,  5308,  1511, -1857,    42,  5309,   967,  1388,  1536,
      55,    49, -1857,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  1544, -1857,  1550,  1553,  1387,  3178, -1857,  1563,  5317,
     226,  1079,  3163,  5318,  1389,  2793,  1390, -1857,  1558,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  5389,  1580,  1564,
    1172,  5390,  4006,  1581,  1582,  4008,  3546,  5307,  3141, -1857,
    5520, -1857,   764, -1857,  5521,    54,  4161,  1597, -1857,  1394,
    1395,  1598,  3142,   764,  1565,  4122,  1017,  1018,    49,  1019,
    1020,  1021,    55,  3977,  1599,  3151,  1602,  1603,  1604,  1465,
    1566,  1631,  1004,  1632,  1634,   227,  1635,   228,  1022,  1644,
     844,  1387,  1650,  1390,  4784,  1649,  1651,  1652,  1654,   764,
    1655, -1857,  2926,  1656,  1767,  3230,  4144,  1147,  1768,  1394,
    1395,  1658,  1390,  1100,  1391,  1392, -1857,  1662,  1665,  1691,
    1390,   229,    54,  3437,  1147, -1857,  1394,  1395,  3235,  2045,
    4681,  1673,  4172,   230,  1692,  3164,  1693,   784,  3137,    55,
   -1857,  4681,  1694,  1653,  2926,  1705,  1147,   999,   784,  1709,
    1732,  1358,  3152,  1758,  3230,  1100,  1100,  1734,  1130,  1130,
    1856,  1859,  -808,  1900,  1100,  1100,  1100,  1130,  1130,  1130,
    1901,  1128,  2482, -1857,  1903,    42,  1904,  4681,  3153,  1408,
    3149,  1936,  1943,  3625,   784,  1394,  1395,  2483, -1857,  1954,
    1393,  4233,  1957,  5199,   788,  1992,  3150,  2002,  2003,  4071,
    2004,  2025,    42,   789,  3138,   788,  2080,  2042,  2054,  4226,
    4149,  4226,  2055,  2067,   789,  2068,  2069,  5012,  1390,  5013,
    5014,  2099,  2106,  2107,   969,  2140,  2136, -1857,  4153,   231,
    2154,  2180,  2201,  2202,   794,  3175,  2203,  5364,  2204, -1857,
    3154,   788, -1857,    64,  2206,   794,  2215,  2214,    49,  5045,
     789,  2226,  1394,  1395, -1857,  1100,  2216,  4264,  1130, -1857,
    2242, -1857,  2045,  2247,  2258,  1396,  2263,  2262,  2265,  3142,
    2268,  1394,  1395,  2270, -1857,    49, -1857,  2272,  2274,  1394,
    1395,   794,  4988,  2275,  2300,  1513,  2304,  4299,  4300,  2324,
    2325,  -808,  4307,  2326,  1390,  2342,  3193,  2484,  2327,  2329,
    2332,  -808,  3626,  3627,  4293,   801,  3176,  3165,  2343,  2356,
    1128,  2482,  2345,  2358,  2044,  2360,   801,  3166,  2357,    55,
    2362,  2374, -1857,  2376,  3167,  5354,  2483,  2379,  4329,  3626,
    3627,  2378,  2380,  1866,  4359,  4361,  4362, -1857,  2381,  4038,
    5093,  2382,  3155,  1668,  2390,  2391,    55,  2414,  2396,  2427,
    2431,  2451,   801,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  1867,  2432,  2466,  4611,  2465,  2468,  2469,  3151,  2481,
     812,  2477,  2496,  2482,  2507,  1719,  4372,  1394,  1395,  2501,
    2502,   812,   815,  2508,  2510,  2520,   816,   817,  3177,  2045,
    2522,  2525,  4380,  4381,  2532,  2533,   912,   816,   817,  2536,
    2543,   912,  2544,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  2546,  3235,  3235,  5223,  2556,  3330,   812,  4407,  2554,
    2557,  4411,  1400,  1401,  1402,  1403,  1404,  1405,  3168,  2569,
    -808,   912, -1857, -1857,   817, -1857,  2484, -1857,  2567,  2568,
    2570,  2574, -1857,  2573,  2584,  3152,  5202,   912, -1857,  2585,
   -1857,  5286, -1857,  1394,  1395,  1411,  2587, -1857,  2588,  2693,
    2695,  5434,  2697,  2699,  2696,  2700,  2701,  2703,  1391,  1392,
    1397,  3153,  1866,  2702,  2706,  2708,  2721,  2727,  2737,  4293,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  -961,  2739,  2740,
    3628,  2764,  5294,  4334,  4293,  2741,  4435,  2513,  2485,  2777,
    1867,  2756,  2758,  2773,  2763,   912,   912,  2482,   912,   912,
    2766,  2767,  2781,  1100,  2785,  -808,  2801,  3628,  2834,  2810,
    2802,   912,  2514,  2807,  5484,  3169,  5486,  5373,  2811,  2894,
    -808,  2822,  2823,  3154,  2831,  2900,  2824,  4335,  2852,  1405,
    2832,  4336,  5509,  4337,  2844,  2850,  1398,  1399,  1400,  1401,
    1402,  1403,  1404,  1405,  2853,  2483,  2589,  2590,  2591,  2592,
    2593,  2594,  2595, -1475,  2854,  1398,  1399,  1400,  1401,  1402,
    1403,  1404,  1405,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  2868,  2872,  2901,  2878,  2890,   836,  5544,  5545,  2877,
    4682,  4338,  2881,  4683,  2897,  2902,  2513,   836,  5022,  2903,
    2904,  4682,  2905,   842,  4683,  3653,  2482,  2906,   844,  3178,
    2919,   845,  2920,  2921,   842,  2924,  2486,   912,  1555,   844,
    2951,  2514,   845,  2953,  1880,  2960,  2515,  2961,  4449,  2968,
    2973,   219,  5023,   836,  2971,  3155,  2977,  4682,  2978,  2979,
    4683,  2981,  2178,  5202,  2980,  2250,  3004,  3005,  1524,  1525,
     842,  3023,  3032,  2045,  -808,   844,   912,  3035,   845,  3024,
    3025,  3039,  5501,  3037,  3026,  3027,  3028,  3041,  1866,  -961,
     962,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405, -2110,
    1288,  1147,  3437,  1042,  3046,  3051,  1100,  5524,  3053,  1130,
    3056,  3057,  3063,  2044,  1520,  3074,  1867,  3062,  3070,  3082,
    3083,  -808,  1678,  3076,  3089,  3090,  5501,  3094,  3097,  3098,
    3099,  3116,  3121,  3126,  3146,  3134,  3158,  3160,  2044,  3159,
    3295,  3009,  3161,  3302,  3247,  2515,  5524,   739,  3249,  -982,
    3315,  3317,  3323,  3324,  3331,  3333,  3334,  2044,  3335,  4226,
    3336,  3337,  3338,  3654,  3339,  3342,   221,  1398,  1399,  1400,
    1401,  1402,  1403,  1404,  1405,  2486,  5024,  2044,  3343,  3344,
    3345,  3346,  3347,  3655,  3386,  3348,  3349,  1866,  5451,  3350,
    3351,  3354,  3355,  3356,  3357,  3358,  3656,  3387,  3359,  3390,
    3360,  3361,  3362,  4293,  4657,  4640,  3363,  3364,  4293,  3365,
    3366,  3367,  4293,  3368,  3369,  1867,  3370,  3371,  3372,  3373,
    3374,  3807,  3375,   241,  3376,  3377,  3378,  3379,  3380,  2709,
    3414,  3412,  1147,  1688,  4684,  4685,  3423,  3448,   740,  3457,
     963,  3490,  4686,  3064,  3491,  4684,  4685,  3561,  3492,  3504,
    3506,  1391,  4339,  4718,  1267,  1100,  3521,  4340,   963,  1147,
    -808,  3586,  5025,  4341,  3551,  1317,   912,  3553,  3558,  1321,
    2517,  3601,  3603,  3604, -1012, -2327,  3606,  2604,  2605,  3657,
    5026,  4684,  4685,  3620,  3602,  3609,  3624,  5556,   962,  3642,
    3639,  3651,  3665,  3643,  3671,  3652,   912,   912,  3677,  1100,
    4722,  3688,  4577,  4342,  5027,   912,   912,   912,   912,   912,
     912,  3698,  3653,  3703,  3702,  3704,  3705,  3710,   912,   912,
     723,   912,   912,  3707,  5367,   741,   912,   912,  3713,  3712,
     912,   912,   912,   912,  3717,   912,   912,  3718,  3719,  3725,
    3723,  3133,  4407,   912,   912,  3748,   912,   912,   912,   912,
     912,  3762,  2516,   912,   912,   912,   912,   912,   912,   912,
     912,   912,  3763,   912,  3764,  3765,   912,   912,  3766,  2517,
    4673,   912,  4293,  4732,  3767,   912,   912,   912,  4772,  3791,
    3792,  3793,  4343,  3769,  3801,  3437,  3800,  3802,   912,   912,
     912,  3877,  3872,   912,  3795,  3880,   912,   912,   912,   912,
     912,  3658,  3881,  3885,  3888,   912,  3889,  3905,  3896,  3910,
    3911,  3912,  3992,  3999,  4721,  3914,   912,   912,  1411,  3917,
    3908,  2621,  2622,  3920,   912,  3909,   912,   912,   742,  3923,
    3926,  3975,  4344,  3990,  4043,  4000,  4018,  4029,   912,   912,
     912,  5542,   912,   912,   916,  4033,   912,   912,   912,  4035,
    3654,   912,   912,   912,   912,   912,   912,   912,   912,  4048,
    1171,  1171,   912,  1520,  4044,  4039,  1147,   912,  4046,  4050,
    3655,  4052,  4825,  3659,  4051,  4063,  4064,  4053,  4054,  4102,
    2045,  4106,   962,  3656,  4110,  4172,  4834,  1079,  4105,  4345,
    4111,  1147,  4113,  1327,  4129,  3437,  5367,  1760,  1784,  1785,
    3693,  3694,  3695,   917,  5028,  1809,  1781,  1079,  4137,  4146,
    3009,  4138,  4155,  4142,   962,  4159,  1411,  3546,  4160,  4176,
    4177,  4182,  4173,  4193,  4194,  4527,  4183,  4195,  4207,  4208,
    4184,  4860,  4185,  4186,  1787,  4528,   918,   743,  4187,  4578,
    4218,  3864,  3865,  4219,  4221,  4529,  4220,  4222,  1790,  4231,
    4230,  2156,  4234,  4235,  1791,  1792,  4236,   744,  1793,  4530,
    4531,  4532,  4248,  4237,  4251,   962,  3657,  4948,  4260,  4293,
    4275,   919,   912,  4293,  4266,  4533,  4271,  4272,  4276,  4279,
    5553,  1147,  1795,  4281,  4284,  4287,  4288,  4313,  4324,  4579,
    4331,  4346,  3303,  4364,  4385,  4368,  1796,  1781,  4384,  1782,
    1797,  4429,   745,  1042, -1967,   912,  5553,   746,   912,  4396,
    4375,  1760,  1784,  1785,  4442,  -810,  4448,  1963,  1964,  1965,
    1966,  1967,   920,  4452,  4453,  4460,  4472,  4476,  1147,  1802,
    4491,  4508,  4513,  4474,  4347,  4348,  4526,  4484,   747,  4490,
    4543,  4548,   748,  1786,  4550,  4542,  4503,  4553,  1787,  4504,
     749,  4507,  4554,  4555,  4556,  4567,  4572,  4562,  4564,  4575,
    4576,  4593,  1790,  4603,  4407,  4571,  4411,  4932,  1791,  1792,
    4604,  3437,  1793,  2228,  2157, -1750,  2368,  4987,  2158, -1749,
    4615,  1794,  4616,  2229,   912,  1147,  2156,  4618,  3658,  4625,
    2932,  4626,   750,  2230,  4627,  4628,  1795,  3756,  4645,  1100,
    4637,  4654,  4658,   912,  4664,  -811,  1806,  2231,  2232,  2233,
    1796,  4693,  4694,  1807,  1797,  4699,  2933,  3198,  2159,  4708,
    4706,  4358,  1798,  2234,  1968,  1969,  1970,  1971,  4715,  3304,
    4723,  2934,  4724,  1808,  4730,  4726,  4727,  1801,  2160,  4734,
     884,  2642,  2643,  1802,  2935,  1147,   751,  4733,  4736,  4755,
    -153,  4743,  1100,  4765,  4773,   921,  4768,  4777,  4775,  4778,
    3659,  4779,   912,  4780,  4781,  4793,  4785,  3235,  5032,  3235,
    4786,  5408,  4788,  4794,  4795,  4803,  4804,  1804,  4805,  4811,
    4814,  4816,  4817,  4820,  4819,  4821,  5408,  4827,  1133,  4828,
    4840,  4835,  1810,  4841,  4843,  4845,  2936,  2937,  4857,  4864,
    5418,  4858,  4534,  2161,  4607,  4867,  4871,  4868,  4873,  2157,
    1811,  4874,  1168,  2158,  4964,  4878,  4880,  4899,  4906,  4535,
    1806,   815,  4916,  4912,  2938,  4917,  4580,  1807,  4782,  3903,
    5048,  4925,  4923,  4929,   922,  1972,  4947,  1973,  1974,  1975,
    4951,  4967,  4971,  4975,  4965,  4970,  1976,  1808,  4986,  4991,
    4982,  4997,  5450,  2159,   923,  5001,  5004,  5015,  4407,  4407,
    5018,  5049,  4935,  5058,  5060,  1815,  5408,  4992,  3721,  4953,
    1809,  5063,  5069,  2160,  1816,  5080,  5473,  5082,  4772,  4966,
    4972,  4934,  4954,  5043,  4983,  5006,  2880,  5079,  5052,  5002,
    5077,  5096,  2939,  5098,  5081,  5078,  5084,  5100,  2162,   924,
    5107,  4850,  5101,  5102,   746,  5113,  1810,  5493,  5103,  5108,
    5115,  3542,  5114,  5119,  5122,  5124,  5408,  5032,  5408,  5125,
    5130,  5187,   925,  5145,  1811,  5133,  3546,  1977,  1812,  5186,
    5148,  5196,  5192,  5204,  2163,   926,  5206,  5207,  2161,  1720,
    4536,  5408,  5209,  5210,  5211,  5219,  2940,   927,  5220,  5226,
    2235,  5241,  5227,  1821,  5250,  5268,  5270,  4537,  2164,  4293,
    -544,  5272,  5271,   928,  5279,  5273,  5280,  2236,  5283,  5295,
    5297,  5302,  1814,  5304,  5334,  5331,  5408,  5408,  -562,  1815,
    5359,  5560,  5360,  2165,  5361,  5362,  5375,  5377,  1816,   929,
    1978,  1979,   912,  5376,  5379,  5383,   912,  5009,  5393,  5396,
    3118,  5397,  5404,  5405,   912,  5409,   912,  5417,  5422,  1822,
    1823,  1824,  1825,  5428,  5425,  5429,  5435,  1826,  5430,  4538,
    5437,  5439,  2045,  5440,  5217, -2785,  5443,  2166,  5452,  5461,
    5466,  3330,  3330,  2162,  1827,  1818,  4539,  1828,  4226,  5454,
    5474,  5464,  5476,   930,  5477,  5481,   912,  5316,  5487,  5482,
    5319,  5492,  5483,  5240,  5502,  5508,  5527,  5512,  2167,  5514,
    5181,  5517,  5518,  5531,  5532,  5245,  5534,  1821,  5541,  2163,
    5543,  4984,  5561,  1830,  4133,  5254,  5263,  3925,   733,  3916,
    5261,   734,  3919,  4933,  4931,  3922,  3944,  4936,  4428,  4278,
     912,   912,   912,  2164,   121,  4942,   116,  1927,  5275,  4952,
    5415,  5191,  2467,  5449,   114,  2237,  5075,  5562,  5194,  5536,
    1092,  4407,  3637,  3594,  4541,  1615,  5546,  5159,  2165,  5160,
    5162,  5163,  5165,  1822,  1823,  1824,  1825,  5166,   912,  5313,
    5458,  1826,  1980,   912,  5167,  5168,  5169,  5402,  5170,  5459,
    5173,  5448,  5174,  5175,  5414,  5413,  4440,  5180,  1827,  1981,
    1982,  1828,   912,  3184,  3190,  4132,  4754,  5181,  5181,   912,
    4638,  4766,  2166,  3385,   912,  1147,   912,  2238,  1147,  1769,
    4012,  4011,   912,  4609,   912,   912,  5007,  5419,  4015,  5386,
    4882,  5335,  5427,  5392,  2239,  5391,  5132,  1830,  3147,  3305,
    4767,  4010,  4652,  2167,  4653,  1833,  4703,  4317,  4367,  4365,
    1471,  4905,  5398,  5032,  4705,  5213,  4104,  5134,   966,  5033,
    5068,  5019,  5065,  5042,   967,  3799,  2725,  4898,  4665,  1836,
    1837,  1831,  4762,  5217,  1832,  4446,  3746,  4002,  3308,  3733,
    4920,  3309,  3306,  2420,  2449,  3055,  3052,  1626,  4383,  3623,
    3871,  2694,  3621,  2582,  5180,  5180,  3913,  4152,  3610,  4552,
    1134,  3003,  1510,  3117,  2082,  1509,   963,  4783,  3550,  2841,
    2876,  5091,  3572,  5109,  4334,  5374,  5424,  5181,  5181,  2001,
    3647,  5382,  3648,  3649,  3650,  5504,  5525,  4999,  4848,  5221,
    4403,  4595,  1633,  5222,  4855,  2353,  5110,  5182,  4210,  5313,
    4974,  3120,  4379,  5085,  5017,  1147,   931,  2883,  1737,  3581,
    1738,  -808,  4150,  2200,  5519,  4151,  4836,  4563,  4704,  1833,
    2352,  4148,  4336,  4824,  4337,  1739,  4829,  1740,  1731,  3043,
    2448,  3044,  1483,  1471,  2330,   962,  2483,  1733,   962,  3588,
    3892,  2976,  1953,  1836,  1837,  1042,   912,  4158,  5380,  4629,
     912,  5423,  5181,  1042,  4875,  2975,   912,  5540,  5557,  4810,
    4719,  4833,  5000,  4866,  5180,  5180,  2083,  5181,  3755,  3932,
    5463,  3022,  4338,  2286,  3682,  1050,  3033,  5471,  1051,  3019,
    3617,  5181,  2285,  5378,  3018,  1503,  1011,  2190,  3728,  1681,
    3411,  2413,  4985,  3415,  5182,  5182,  3416,  1508,  5095,  1721,
    2249,   755,   756,  1930,  1931,  1932,  4447,  4725,  4763,  5387,
    4949,  2045,     0,  4390,  5181,     0,     0,  5510,     0,     0,
       0,     0,  5515,     0,     0,     0,  5181,  5181,     0,     0,
       0,     0,  1147,  5181,     0,     0,  2045,     0,     0,  5180,
       0,     0,     0,     0,     0,     0,     0,  5181,     0,     0,
       0,   969,     0,   962,  5180,  2045,     0,  5181,     0,     0,
       0,     0,     0,     0,   963,     0,     0,  5554,  5180,     0,
       0,     0,     0,     0,     0,  2045,     0,  5181,     0,  5181,
       0,     0,     0,     0,   116,     0,     0,     0,  5181,     0,
       0,     0,   114,  5554,     0,  5181,     0,  5181,     0,  5181,
       0,  5180,     0,  1250,  5182,  5182,     0,     0,     0,     0,
    -982,     0,     0,  5180,  5180,     0,     0,     0,     0,     0,
    5180,     0,  5181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1281,  5180,  3182,     0,     0,  3182,  3182,
    5181,  5181,     0,     0,  5180,     0,     0,     0,     0,  1298,
       0,     0,     0,     0,     0,     0,     0,  5181,  5181,     0,
       0,     0,  5181,     0,  5180,     0,  5180,     0,     0,     0,
       0,     0,     0,     0,     0,  5180,     0,     0,     0,  5182,
       0,     0,  5180,     0,  5180,     0,  5180,     0,     0,     0,
       0,     0,     0,     0,  5182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5182,  5180,
       0,  1360,  1391,  4339,     0,     0,     0,     0,  4340,     0,
       0,     0,     0,     0,  4341,     0,     0,  5180,  5180,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5182,     0,     0,  5180,  5180,     0,     0,     0,  5180,
       0,   912,     0,  5182,  5182,     0,     0,     0,   963,     0,
    5182,     0,     0,     0,  4342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5182,     0,     0,     0,     0,     0,
     963,     0,     0,     0,     0,     0,  1471,     0,     0,     0,
       0,     0,     0,     0,  5182,     0,  5182,     0,     0,     0,
    2213,     0,     0,     0,     0,  5182,     0,     0,     0,  1473,
       0,     0,  5182,     0,  5182,     0,  5182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   963,     0,  4343,     0,     0,     0,     0,     0,  5182,
       0,     0,     0,     0,     0,     0,     0,     0,   884,     0,
       0,     0,     0,     0,     0,     0,     0,  5182,  5182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5182,  5182,     0,     0,     0,  5182,
       0,     0,     0,  4344,     0,     0,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,   912,   912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,   912,     0,
     912,     0,     0,   912,   912,   912,   912,   912,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,   912,
    4345,     0,     0,     0,   912,     0,   912,     0,   912,   912,
       0,   912,   912,     0,     0,     0,   912,   912,   912,     0,
       0,     0,   912,   912,   912,     0,   912,     0,   912,     0,
     912,     0,   912,     0,   912,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3864,  3865,     0,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2417,  2417,  2417,     0,     0,     0,     0,   912,     0,   912,
       0,   912,     0,     0,     0,   912,     0,     0,     0,     0,
       0,   912,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  -810,     0,  1934,  1935,
       0,     0,     0,     0,     0,     0,     0,  1945,  1946,     0,
       0,  1949,  1950,     0,     0,  4347,  4348,     0,     0,     0,
    1958,  1959,     0,  1960,  1961,     0,     0,     0,  1985,     0,
       0,     0,  1994,  1995,  1996,  1997,     0,  1999,   912,     0,
       0,     0,     0,     0,     0,  2007,  2008,     0,  2011,  2012,
       0,     0,     0,     0,     0,  2016,     0,     0,  2019,  2020,
    2021,  2022,  2023,  2024,     0,  2026,     0,     0,  2029,  2030,
       0,     0,     0,  2033,     0,     0,     0,  2036,  2040,  2041,
       0,     0,     0,     0,     0,     0,     0,   962,   962,   962,
    2048,  2049,  2050,     0,     0,     0,     0,     0,  2056,  2057,
    2058,  2059,  2060,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,     0,     0,  2081,   884,
       0,     0,     0,     0,     0,     0,  2085,     0,  2086,  2087,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,   912,  2473,     0,  2475,  2476,     0,     0,     0,
    2478,     0,     0,     0,     0,     0,     0,     0,     0,  2127,
       0,     0,     0,  2491,     0,     0,  2497,  2498,     0,  2500,
       0,     0,  2503,  2504,  2505,  2506,     0,     0,     0,  2509,
       0,     0,     0,     0,  2521,     0,     0,     0,     0,  2526,
    2527,  2528,  2529,  2530,     0,     0,     0,  2534,  2535,   912,
       0,     0,     0,  2545,     0,  2547,  2548,  2549,     0,  2552,
    2553,     0,  2555,     0,     0,  2558,     0,     0,  2559,  2560,
    1760,  1784,  1785,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  -963,  -963,  1787,     0,     0,
       0,     0,     0,     0,  2260,  -963,     0,     0,     0,     0,
       0,  1790,     0,     0,     0,     0,     0,  1791,  1792,     0,
       0,  1793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2298,     0,     0,
    2303,  1365,  1366,     0,     0,  1795,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1796,
       0,     0,     0,  1797,     0,     0,     0,     0,     1,     0,
       0,     2,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     3,     0,     0,     0,
       4,     0,  1802,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     5,     6,     0,     0,     0,     0,
       0,     0,     7,     0,     0,     0,  2348,     8,     9,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    10,     0,  2367,     0,     0,     0,  1963,
    1964,  1965,  1966,  1967,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1806,
       0,     0,     0,     0,     0,    12,  1807,     0,     0,     0,
    2946,  2947,     0,     0,     0,    13,    14,     0,     0,     0,
       0,     0,     0,     0,  2433,     0,  1808,    15,    16,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,   962,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,  1968,  1969,  1970,  1971,
       0,   963,     0,     0,   963,  1810,     0,     0,     0,   912,
       0,     0,    20,     0,    21,     0,     0,   912,     0,    22,
       0,     0,    23,  1811,     0,     0,     0,     0,     0,  3034,
       0,     0,     0,     0,     0,     0,     0,    24,     0,     0,
       0,     0,     0,     0,     0,    25,     0,     0,    26,     0,
       0,     0,     0,     0,   912,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    27,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1815,     0,
     912,     0,     0,     0,     0,    28,     0,  1816,     0,    29,
     912,     0,   912,     0,   912,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1972,     0,  1973,
    1974,  1975,     0,     0,     0,     0,     0,     0,  1976,   963,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,   912,     0,   912,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1368,
       0,     0,  1369,     0,     0,     0,  1821,     0,     0,   912,
       0,     0,     0,     0,  2738,     0,     0,     0,  2742,     0,
       0,     0,     0,     0,     0,    30,     0,     0,  2738,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3172,  1977,
       0,     0,  3183,     0,     0,     0,   912,  3188,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,  1822,  1823,  1824,  1825,     0,     0,     0,    32,
    1826,     0,  3237,  3238,  3239,  3240,  3424,     0,     0,     0,
       0,  1760,  1784,  1785,   912,     0,  3075,  1827,     0,     0,
    1828,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,  1978,  1979,  3274,     0,     0,     0,     0,    37,
      38,     0,  2814,  2816,  2818,   912,     0,     0,  1787,    39,
       0,    40,     0,     0,     0,     0,  1830,     0,  3188,  3188,
      41,     0,  1790,     0,     0,     0,    42,     0,  1791,  1792,
       0,     0,  1793,     0,    43,     0,     0,     0,     0,    44,
      45,    46,     0,     0,     0,  2857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1795,     0,     0,     0,
       0,     0,     0,     0,  2865,     0,     0,     0,     0,     0,
    1796,     0,    47,     0,  1797,     0,  2869,     0,  2870,    48,
       0,     0,     0,  3191,   912,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    49,
       0,  -658,     0,  1802,     0,     0,     0,     0,     0,     0,
    3242,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    50,     0,     0,     0,  3255,     0,     0,
       0,     0,     0,     0,  1980,    51,     0,     0,  1833,    52,
       0,     0,     0,     0,     0,     0,     0,    53,     0,     0,
    1371,  1981,  1982,    54,     0,     0,     0,  3458,     0,     0,
       0,     0,  1836,  1837,  3300,  3301,     0,     0,     0,     0,
      55,     0,  3314,     0,     0,     0,  3425,     0,    56,     0,
    1806,     0,     0,     0,  3459,     0,     0,  1807,     0,     0,
       0,     0,     0,     0,    57,    58,    59,    60,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1808,     0,    61,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3426,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3460,     0,     0,  3461,     0,     0,
       0,     0,     0,     0,     0,  3462,    62,     0,  3030,     0,
       0,     0,  2298,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3463,     0,  1810,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1811,     0,    63,  3182,  3182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3464,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   912,     0,  3417,     0,     0,     0,  3465,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1815,
       0,    64,     0,     0,     0,  1126,     0,     0,  1816,     0,
       0,     0,     0,     0,   912,     0,   912,     0,     0,   912,
     912,     0,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,     0,     0,     0,     0,   912,     0,
       0,   912,  3466,     0,   912,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3427,  3467,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,  3619,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,  1821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    42,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   963,   963,   963,   912,     0,  3468,  3469,
    3470,     0,     0,     0,     0,  3471,     0,     0,  3472,     0,
       0,     0,     0,  1822,  1823,  1824,  1825,     0,     0,     0,
       0,  1826,     0,     0,     0,     0,     0,     0,     0,     0,
     912,   912,     0,     0,     0,  2417,     0,     0,  1827,     0,
      49,  1828,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3473,  3474,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1830,     0,     0,
       0,     0,     0,  3332,     0,     0,  3475,     0,     0,     0,
       0,     0,     0,     0,    54,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    55,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3761,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3770,     0,  3777,  3778,  3779,  3780,     0,  3782,  3783,     0,
    3476,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1833,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,   912,     0,     0,
       0,     0,     0,  1836,  1837,     0,     0,     0,     0,  3447,
    3477,  3876,     0,     0,     0,     0,     0,     0,  3455,  3456,
       0,     0,     0,     0,  3882,     0,     0,     0,  3182,  3182,
       0,     0,     0,     0,     0,     0,     0,     0,  3478,  3493,
    3494,     0,  3495,     0,     0,  3498,  3499,  3500,  3501,  3502,
       0,     0,     0,     0,     0,     0,     0,     0,  3759,     0,
    3760,  3508,  3428,     0,     0,  -658,  3509,     0,  3510,     0,
    3511,  3512,     0,  3513,     0,     0,     0,     0,  3518,  3519,
    3520,  3479,     0,     0,  3523,  3524,  3525,     0,  3526,     0,
    3528,     0,  3530,     0,  3532,     0,  3533,     0,     0,     0,
       0,  3536,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2417,     0,  2417,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2417,  2417,  2417,  2417,     0,     0,
       0,     0,     0,  2417,  2417,  2417,  2417,  2417,  2417,     0,
    2417,  2417,  2417,  2417,     0,     0,  3970,  3570,  2417,     0,
       0,     0,     0,  2127,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,   912,   963,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     1,     0,     0,     2,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3899,     0,     0,
    3618,  3808,  3809,     0,     4,     0,     0,  3810,     0,  3811,
       0,  3812,  3813,     0,     0,     0,     0,     0,     5,     6,
       0,     0,     0,     0,     0,     0,     7,     0,     0,  3814,
       0,     8,     9,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    10,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,    11,     0,     0,
       0,     0,     0,  3993,  3994,  3995,  3996,     0,     0,  3815,
       0,     0,  3816,     0,     0,     0,     0,     0,     0,    12,
    3817,   912,     0,     0,     0,     0,     0,     0,     0,    13,
      14,     0,  2348,     0,     0,     0,     0,     0,     0,  3463,
       0,    15,    16,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3819,     0,  3820,     0,    19,     0,
       0,   912,     0,     0,   912,     0,     0,     0,     0,     0,
       0,  2433,  3821,  3822,     0,     0,    20,   912,    21,     0,
       0,     0,     0,    22,     0,     0,    23,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    24,     0,     0,     0,     0,     0,     0,     0,    25,
       0,     0,    26,     0,  3823,     0,     0,     0,     0,     0,
       0,     0,     0,   912,     0,     0,     0,  3824,     0,     0,
       0,     0,    27,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3825,     0,     0,    28,
       0,     0,     0,    29,     0,  3826,  3827,     0,  3828,     0,
    4240,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3829,  3830,  3831,     0,     0,  4270,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3832,  3833,  3834,     0,     0,     0,     0,
    3835,     0,     0,  3836,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3837,  3838,     0,     0,     0,     0,     0,   912,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3839,  3840,     0,     0,   912,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    32,     0,     0,     0,     0,     0,     0,
       0,  3475,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,    34,     0,
      35,     0,     0,    36,     0,   912,     0,     0,     0,     0,
    5177,     0,     0,    37,    38,     0,  5188,     0,     0,     0,
       0,     0,     0,    39,     0,    40,     0,     0,     0,     0,
       0,     0,     0,     0,    41,     0,     0,     0,     0,  2417,
      42,   912,     0,  3841,     0,     0,     0,  3842,    43,     0,
       0,     0,     0,    44,    45,    46,     0,     0,     0,  3843,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4024,     0,     0,     0,     0,     0,     0,     0,  4027,
       0,     0,     0,     0,     0,     0,    47,     0,     0,     0,
       0,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,   912,     0,     0,     0,     0,     0,  5177,  5177,     0,
       0,     0,  4436,    49,     0,     0,  4057,  4058,     0,  3844,
       0,     0,  3845,     0,     0,  3846,  3847,  3848,  3849,     0,
       0,     0,     0,     0,     0,     0,     0,    50,     0,     0,
       0,     0,  4083,     0,     0,     0,     0,     0,     0,    51,
       0,   912,  4094,    52,  4096,     0,  4098,     0,     0,     0,
       0,    53,     0,     0,   962,     0,     0,    54,  3850,  3851,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,    55,     0,     0,     0,     0,     0,
       0,     0,    56,     0,     0,     0,  3852,     0,     0,     0,
       0,     0,     0,   912,     0,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,  5177,  5177,     0,
       0,     0,     0,    61,     0,     0,     0,     0,     0,     0,
       0,  2348,     0,     0,     0,     0,     0,     0,  4425,  4426,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      62,     0,     0,     0,     0,     0,     0,     0,  4180,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,  5177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2298,  5177,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4599,  4600,     0,
    4602,     0,     0,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,  5177,    64,     0,     0,     0,  5488,
       0,     0,     0,     0,     0,     0,  5177,  5177,     0,     0,
       0,     0,     0,  5177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3424,     0,     0,  5177,     0,  1760,
    1784,  1785,     0,     0,   912,     0,     0,  5177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,  4285,  5177,     0,  5177,
       0,     0,     0,     0,     0,     0,  1787,     0,  5177,     0,
       0,     0,     0,     0,     0,  5177,     0,  5177,     0,  5177,
    1790,     0,     0,     0,     0,     0,  1791,  1792,     0,     0,
    1793,     0,     0,     0,     0,     0,  4680,     0,     0,     0,
       0,     0,  5177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1795,     0,     0,     0,     0,     0,
    5177,  5177,     0,     0,     0,     0,     0,   912,  1796,     0,
       0,     0,  1797,     0,     0,   912,     0,  5177,  5177,     0,
       0,     0,  5177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  -658,
       0,  1802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2417,  2417,  2417,  2417,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3425,     0,     0,     0,  1806,     0,
       0,     0,     0,     0,     0,  1807,     0,     0,     0,  4701,
    4702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4466,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1810,     0,  4480,     0,  2433,     0,
       0,  4485,  4486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1811,     0,     0,  4493,     0,     0,     0,     0,
    4495,     0,     0,  4496,     0,     0,  4497,  4498,     0,     0,
    1780,     0,  4856,     0,     0,  1781,     0,  1782,     0,     0,
    1783,     0,     0,     0,  4865,  4240,     0,     0,  4510,  1760,
    1784,  1785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1815,     0,     0,
       0,     0,     0,  1126,     0,     0,  1816,     0,     0,     0,
       0,  1786,     0,     0,  -963,  -963,  1787,  1788,     0,     0,
       0,     0,  1789,     0,  -963,     0,     0,     0,     0,     0,
    1790,     0,     0,     0,     0,     0,  1791,  1792,  2348,     0,
    1793,     0,     0,     0,     0,     0,     0,     0,     0,  1794,
       0,     0,     0,     0,     0,     0,     0,     0,  3427,     0,
    3188,  3188,     0,     0,  1795,     0,     0,     0,     0,     0,
       0,     0,  4589,  4592,     0,     0,     0,     0,  1796,     0,
       0,     0,  1797,     0,     0,  1821,     0,     0,     0,     0,
    1798,  1799,     0,  4924,     0,    42,     0,  1800,     0,     0,
       0,     0,     0,     0,  2417,  1801,     0,     0,     0,     0,
       0,  1802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1803,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4956,     0,     0,     0,     0,     0,     0,     0,
       0,  1822,  1823,  1824,  1825,  1804,     0,     0,     0,  1826,
       0,     0,     0,     0,  4647,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1827,     0,    49,  1828,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1805,     0,  1806,     0,
       0,     0,     0,     0,     0,  1807,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1830,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1808,  5003,     0,     0,     0,
       0,     0,    54,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1809,    55,
       0,     0,     0,     0,     0,     0,     0,  5038,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4728,  4729,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1810,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1811,     0,     0,     0,  1812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1833,     0,     0,
       0,     0,     0,     0,  1813,     0,     0,     0,     0,     0,
    1814,     0,     0,     0,     0,     0,     0,  1815,     0,     0,
    1780,  1836,  1837,     0,     0,  1781,  1816,  1782,     0,     0,
    1783,     0,     0,  5111,     0,     0,     0,     0,     0,  1760,
    1784,  1785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1817,     0,
       0,  5039,  5040,  5041,     0,     0,     0,     0,     0,  3188,
    3188,  1786,     0,  1818,  1819,  1820,  1787,  1788,     0,     0,
    1128,     0,  1789,  -658,     0,     0,     0,     0,     0,     0,
    1790,     0,  2348,     0,     0,     0,  1791,  1792,     0,     0,
    1793,     0,     0,     0,     0,  1821,  1053,  1054,     0,  1794,
       0,     0,  4842,     0,  4844,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1795,     0,     0,     0,     0,     0,
       0,     0,  1055,  1028,     0,     0,     0,     0,  1796,     0,
       0,     0,  1797,  1056, -2118,     0,     0,     0,     0,     0,
    1798,  1799,  5234,     0,     0,     0,     0,  1800,     0,     0,
       0,  1822,  1823,  1824,  1825,  1801,     0,     0,  1057,  1826,
    1058,  1802,     0,     0,     0,     0,     0,     0,     0,     0,
    1059,     0,  1803,     0,     0,     0,  1827,     0,     0,  1828,
       0,     0,     0,     0,  5123,     0,     0,  5126,  5127,  5128,
    5129,     0,     0,     0,     0,  1804,     0,     0,     0,     0,
       0,     0,  1829,     0,     0,     0,     0,     0,     0,     0,
       0,  4910,     0,     0,     0,  1830,     0,     0, -2110,  1060,
       0,     0,     0,     0,  1061,     0,     0,  1062,     0,     0,
     963,     0,     0,     0,     0,     0,  1805,  1063,  1806,     0,
       0,     0,     0,  4918,     0,  1807,     0,     0,     0,  1831,
       0,     0,  1832,     0,  5314,  5315,     0,     0,     0,  1064,
       0,  1065,     0,     0,     0,  1808,     0,     0,     0,     0,
    1066,     0,  1067,     0,     0,     0,     0,  5225,     0,     0,
       0,     0,     0,     0,     0,     0,  5235,  5236,  1809,     0,
       0,     0,     0,     0,     0,  5244,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2433,     0,     0,  4969,     0,     0,     0,
       0,     0,     0,     0,  1810,     0,     0,     0,     0,  4589,
       0,     0,     0,     0,     0,     0,     0,  1833,  1834,  1835,
       0,     0,  1811,  1068,     0,     0,  1812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1836,  1837,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4589,  1069,     0,     0,     0,
       0,     0,     0,     0,  1813,     0,     0,     0,     0,     0,
    1814,     0,     0,     0,     0,     0,     0,  1815,     0,     0,
       0,     0,     0,     0,     0,     0,  1816,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1817,     0,
       0,  1070,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1818,  1819,  1820,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1071,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
    1073,     0, -2114,  1074,  1075,  1821,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2433,     0,     0,     0,  1076,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1822,  1823,  1824,  1825,     0,     0,     0,     0,  1826,
       0,     0,     0,     0,     0,     0,     0,     0,  1077,     0,
       0,     0,     0,     0,     0,     0,  1827,     0,     0,  1828,
       0,  1078,     0,     0,     0,     0,     0,  5147,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1829,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2854,     0,  1830,     0,  1079,     0,     0,
       0,     0,     0,  5205,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2118,     0,     0,  1080,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1831,
       0,     0,  1832,     0,     0,     0, -2114,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5249,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -2854,     0,     0,     0,     0,     0,
       0,  1081,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5281,     0,     0,     0,  1833,  1834,  1835,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1836,  1837,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5329,     0,  5330,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5338,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1082,  1083,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5406,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   243,   244,  5433,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,  5465,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,  5480,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,  5555,
       0,   318,     0,     0,   319,   320,   321,  2348,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,   814,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
      42,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,    49,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,  1357,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,    55,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,  2037,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,  2038,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,  2039,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,  2292,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,  2293,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,  2294,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,  2295,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,  2296,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
    2297,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,   874,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,  2757,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,  2813,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,   814,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,  2815,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,  2817,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,  1280,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,  2093,     0,   250,     0,     0,     0,     0,  2094,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,     0,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,  2347,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,  3446,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,  3517,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,  5310,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,     0,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,     0,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,  2111,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,     0,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,  2113,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,     0,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,    42,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,    49,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,    54,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
      55,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,  2985,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,  2986,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   243,   244,     0,   245,   246,   247,   248,
     249,  2987,     0,   250,     0,     0,     0,     0,   251,     0,
    2988,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,  2984,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,  2985,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,  2986,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   243,   244,     0,
     245,   246,   247,   248,   249,  2987,     0,   250,     0,     0,
       0,     0,   251,     0,  2988,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,  2985,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,  2986,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,  2987,
     250,     0,     0,     0,     0,   251,     0,     0,  2988,     0,
     253,   254,   255,   256,   257,   258,     0,  -564,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5150,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5151,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,     0,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5152,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5153,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5154,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5155,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -519,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5156,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -519,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5157,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
    -519,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  5559,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,   764,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
    2909,     0,     0,     0,     0,   308,   309,   784,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
    2910,   575,   576,  2911,     0,     0,     0,     0,     0,   578,
     579,     0,     0,   842,   580,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  2912,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,   844,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,  2061,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,  1698,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1143,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,  1699,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,  1700,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,  1027,  1028,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  1029,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,  1030,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,  1031,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,  1032,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,  1033,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,  1034,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,  1035,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,  1036,  1037,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,  1038,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,  1039,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1040,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1143,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,  1361,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1143,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,  1537,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
    1027,  1028,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  1545,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,  1030,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,  1031,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
    1032,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,  1034,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,  1036,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
    1038,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
    1040,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1143,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,  1700,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,  2172,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,  2173,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,  5497,   251,     0,  5498,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  2173,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,  5498,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,    42,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,    49,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,    54,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,    55,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
    1128,  4167,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
    4404,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,  4408,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,  2483,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,  2484,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,  1866,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,  1867,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,  4009,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,    42,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,  2486,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,    49,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,    54,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,    55,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,  1128,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,  2985,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,  2986,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,  2987,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,  1284,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,  3207,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,  3542,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,  4289,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   243,   244,  2131,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   243,   244,  2925,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   243,   244,  3574,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   243,   244,  3756,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   243,
     244,  4143,   245,   246,   247,   248,   249,   937,   938,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,   939,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,   940,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,   941,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   942,   333,   334,   943,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   944,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,   945,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,   946,
       0,   372,     0,     0,     0,   947,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,   948,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   949,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   950,   477,   478,   479,   951,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,   952,     0,   489,   490,   491,   492,
     493,     0,   953,   495,     0,   496,   497,   498,     0,     0,
     954,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,   955,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,   956,
     957,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   958,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
     959,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,   960,   591,   961,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,     0,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,  1009,   938,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,   939,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,   940,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,   941,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     942,   333,   334,   943,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   944,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,   945,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,   946,     0,
     372,     0,     0,     0,   947,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,   948,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,   949,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   950,   477,   478,   479,  1010,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,   952,     0,   489,   490,   491,   492,   493,
       0,   953,   495,     0,   496,   497,   498,     0,     0,   954,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,   955,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,   956,   957,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     958,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,   959,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,   960,   591,   961,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
       0,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,   938,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,   939,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,   940,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,   941,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   942,
     333,   334,   943,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   944,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,   945,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,   946,     0,   372,
       0,     0,     0,   947,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,   948,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,   949,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   950,   477,   478,   479,     0,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,   952,     0,   489,   490,   491,   492,   493,     0,
     953,   495,     0,   496,   497,   498,     0,     0,   954,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,   955,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,   956,   957,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   958,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,   959,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
     960,   591,   961,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,     0,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,  3225,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,  3226,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
    3227,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,  3228,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,  1391,  1392,     0,   447,
     448,     0,     0,  3229,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,  5547,  1004,  5548,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,  3230,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,  1365,  1366,
     251,  1367,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,  1368,     0,     0,  1369,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,  1370,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,  1371,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,  1514,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  1515,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,  1516,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1143,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
    1517,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,  2483,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,  2484,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,  1866,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,  1867,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,  2486,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,  1539,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  1540,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1143,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,  1714,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,  1715,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,  1716,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
    1514,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
    3874,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1143,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,  1142,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1143,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,  1144,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,  1142,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1143,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,  1568,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1143,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,  1637,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
    1638,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,  1410,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,  3007,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1143,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1143,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
    3296,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,  1514,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1143,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1143,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,  3930,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1143,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
    5467,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,  5468,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,  1004,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,  1111,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,  1181,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,  1182,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,  1370,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,  2444,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  2579,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,  3209,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
    3232,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,  3261,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,  3326,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,  2194,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,  2195,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,  5214,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1545,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
       0,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,     0,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,     0,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,  1546,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,     0,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,     0,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1545,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,     0,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,     0,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,     0,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,     0,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,     0,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  1530,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  1531,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,     0,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,     0,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,   948,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,  1532,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,     0,
     477,   478,   479,     0,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,     0,   495,     0,
     496,   497,   498,     0,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,     0,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,     0,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,  5291,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,  5292,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,     0,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,     0,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,   948,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,  5293,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,     0,   477,
     478,   479,     0,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,     0,   495,     0,   496,
     497,   498,     0,     0,     0,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,     0,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,     0,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
    2254,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,     0,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
       0,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,   948,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,  2255,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,     0,   477,   478,
     479,     0,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,     0,   495,     0,   496,   497,
     498,     0,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,     0,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,     0,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,  3086,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,     0,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,     0,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
     948,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
    3087,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,     0,   477,   478,   479,
       0,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,     0,   495,     0,   496,   497,   498,
       0,     0,     0,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,     0,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,     0,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,     0,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,     0,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   948,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,     0,   477,   478,   479,     0,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,     0,   495,     0,   496,   497,   498,     0,
       0,     0,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,     0,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,  -564,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,  5150,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,  5151,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,  -534,  -534,   322,     0,  -534,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,  5152,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,  5153,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,  5154,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,  5155,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,  -519,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,  5156,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,  -519,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,  5157,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,  -519,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,     0,     0,   253,   254,
     255,   256,   257,   258,     0,  -564,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,     0,     0,     0,     0,   268,  5150,     0,   269,
     270,     0,   271,   272,     0,     0,     0,     0,   275,   276,
     277,  5151,   279,   280,     0,   281,   282,     0,   283,   284,
       0,   286,     0,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,     0,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,     0,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,     0,     0,     0,   319,
     320,   321,     0,  -555,     0,   322,     0,  -555,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,  5152,   343,   344,   345,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,     0,   361,
       0,     0,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,  5153,     0,   369,     0,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,     0,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
    5154,     0,     0,   381,     0,   382,     0,     0,     0,   384,
       0,     0,   385,  5155,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,  -519,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,  5156,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,     0,   498,  -519,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,     0,     0,
     508,   509,     0,   510,   511,   512,  5157,   513,     0,     0,
       0,   515,   516,   517,     0,   518,     0,   519,   520,     0,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,     0,   533,     0,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,     0,   550,   551,   552,   553,     0,     0,     0,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,     0,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,     0,     0,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,  -555,     0,  -519,     0,
       0,     0,   602,   603,   604,     0,   605,     0,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,     0,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,     0,     0,   253,   254,   255,
     256,   257,   258,     0,  -564,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5150,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5151,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,  -552,     0,   322,     0,  -552,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5152,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5153,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5154,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5155,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -519,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5156,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -519,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5157,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,  -552,     0,  -519,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,     0,     0,   253,   254,   255,   256,
     257,   258,     0,  -564,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
       0,     0,     0,     0,   268,  5150,     0,   269,   270,     0,
     271,   272,     0,     0,     0,     0,   275,   276,   277,  5151,
     279,   280,     0,   281,   282,     0,   283,   284,     0,   286,
       0,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,     0,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,     0,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,     0,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,  5407,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,  5152,   343,   344,   345,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,     0,   361,     0,     0,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,  5153,     0,   369,     0,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,     0,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,  5154,     0,
       0,   381,     0,   382,     0,     0,     0,   384,     0,     0,
     385,  5155,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,  -519,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,  5156,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,     0,   498,  -519,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,     0,     0,   508,   509,
       0,   510,   511,   512,  5157,   513,     0,     0,     0,   515,
     516,   517,     0,   518,     0,   519,   520,     0,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,     0,
     533,     0,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,     0,
     550,   551,   552,   553,     0,     0,     0,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
       0,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,     0,     0,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,  -519,     0,     0,     0,
     602,   603,   604,     0,   605,     0,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,     0,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,     0,     0,   253,   254,   255,   256,   257,
     258,     0,  -564,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,     0,
       0,     0,     0,   268,  5150,     0,   269,   270,     0,   271,
     272,     0,     0,     0,     0,   275,   276,   277,  5151,   279,
     280,     0,   281,   282,     0,   283,   284,     0,   286,     0,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,     0,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,     0,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,     0,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,  -557,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,  5152,   343,   344,   345,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,     0,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
    5153,     0,   369,     0,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,     0,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,  5154,     0,     0,
     381,     0,   382,     0,     0,     0,   384,     0,     0,   385,
    5155,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,  -519,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
    5156,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,     0,   498,  -519,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,     0,     0,   508,   509,     0,
     510,   511,   512,  5157,   513,     0,     0,     0,   515,   516,
     517,     0,   518,     0,   519,   520,     0,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,     0,   533,
       0,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,     0,   550,
     551,   552,   553,     0,     0,     0,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,     0,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
       0,     0,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,  -519,     0,     0,     0,   602,
     603,   604,     0,   605,     0,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,     0,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,     0,     0,   253,   254,   255,   256,   257,   258,
       0,  -564,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,     0,     0,
       0,     0,   268,  5150,     0,   269,   270,     0,   271,   272,
       0,     0,     0,     0,   275,   276,   277,  5151,   279,   280,
       0,   281,   282,     0,   283,   284,     0,   286,     0,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,     0,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
       0,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,     0,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,  5472,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,  5152,   343,   344,   345,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,     0,   361,     0,     0,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,  5153,
       0,   369,     0,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,     0,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,  5154,     0,     0,   381,
       0,   382,     0,     0,     0,   384,     0,     0,   385,  5155,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,  -519,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,  5156,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,     0,   498,  -519,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,     0,     0,   508,   509,     0,   510,
     511,   512,  5157,   513,     0,     0,     0,   515,   516,   517,
       0,   518,     0,   519,   520,     0,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,     0,   533,     0,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,     0,   550,   551,
     552,   553,     0,     0,     0,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,     0,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,     0,
       0,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,  -519,     0,     0,     0,   602,   603,
     604,     0,   605,     0,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,     0,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
    -564,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5150,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5151,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,  5513,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5152,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5153,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5154,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5155,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -519,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5156,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -519,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5157,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -519,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
       0,     0,   253,   254,   255,   256,   257,   258,     0,  -564,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5150,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5151,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,  -538,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5152,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5153,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5154,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5155,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -519,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5156,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -519,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5157,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -519,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,  -564,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5150,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5151,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
       0,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5152,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5153,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5154,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5155,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -519,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5156,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -519,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5157,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -519,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,  -564,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5150,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5151,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,     0,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5152,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5153,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5154,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5155,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -519,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5156,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -519,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5157,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,  5410,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
    -519,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,     0,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,     0,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,  3808,  3809,
       0,     0,     0,     0,  3810,     0,  3811,     0,  3812,  3813,
       0,     0,  3808,  3809,     0,     0,     0,     0,  3810,     0,
    3811,     0,  3812,  3813,     0,     0,  3814,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3814,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3815,     0,     0,  3816,
       0,     0,     0,     0,     0,     0,     0,  3817,     0,     0,
    3815,     0,     0,  3816,     0,     0,     0,     0,     0,     0,
       0,  3817,     0,     0,     0,     0,  3463,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3463,     0,     0,  3818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3819,     0,  3820,     0,     0,     0,     0,  5300,     0,
       0,     0,     0,     0,     0,  3819,     0,  3820,     0,  3821,
    3822,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3821,  3822,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3823,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3824,  3823,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3824,     0,
       0,     0,     0,  3825,     0,     0,     0,     0,     0,     0,
       0,     0,  3826,  3827,     0,  3828,     0,  3825,     0,     0,
       0,     0,     0,     0,     0,     0,  3826,  3827,     0,  3828,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3829,  3830,  3831,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3829,  3830,  3831,     0,     0,
    3832,  3833,  3834,     0,     0,     0,     0,  3835,     0,     0,
    3836,     0,     0,     0,  3832,  3833,  3834,     0,     0,     0,
       0,  3835,     0,     0,  3836,     0,     0,     0,  3837,  3838,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2598,     0,  3837,  3838,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3839,  3840,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3839,  3840,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3475,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3475,  2599,  2600,  2601,  2602,  2603,  2604,  2605,
    2606,  2607,  2608,  2609,  2610,  2611,  2612,  2613,  2614,  2615,
    2616,  2617,  2618,     0,  2619,  2620,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3841,     0,     0,     0,  3842,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3841,     0,  3843,     0,  3842,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3843,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3844,     0,     0,  3845,
       0,     0,  3846,  3847,  3848,  3849,     0,     0,     0,     0,
    3844,     0,     0,  3845,     0,     0,  3846,  3847,  3848,  3849,
       0,     0,  2621,  2622,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3850,  3851,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3850,
    3851,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3852,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3852,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2623,  2624,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2625,
       0,  2626,  2627,  2628,  2629,  2630,     0,     0,  2631,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2632,     0,
       0,     0,     0,  2633,  2634,  2635,  2636,  2637,  2638,  2639,
    2640,  2641,  2642,  2643,  2644,  2645,  2646,  2647,  2648,  2649,
    2650,  2651,  2652,  2653,  2654,  2655,  2656,  2657,  2658,  2659,
    2660,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2661
};

static const yytype_int16 yycheck[] =
{
       6,    44,  1184,     0,   887,     0,  1235,  1332,   901,    15,
     115,  1699,    18,     0,    43,    44,    22,  1281,  1177,  1032,
    1033,  1185,  1172,    97,   802,    31,    57,   116,  2207,  1626,
    1081,  1165,    38,  1150,    43,    41,  3057,  1059,  1332,  1052,
      46,  1460,  1424,    49,  2516,  1839,  1145,    53,  2848,    55,
     763,  1150,  1870,     6,  1145,  2438,  2439,    60,  1424,  1150,
      60,  2172,  1084,  1199,  2472,  1135,  1385,  2475,  2476,    64,
    2054,  2055,  3270,  3376,  1200,  2389,  2172,    64,  1200,    19,
    2394,  2945,  2969,  2067,  2068,  2069,  1505,  3126,    21,  1780,
      30,    97,  2559,  2560,    21,    35,  2704,  1167,  2197,  2251,
    3214,  1671,   226,    59,  2840,  1748,    39,  2475,  2476,  1800,
      43,  3477,    39,  1748,  2707,  1780,    43,  2749,  1748,  1170,
    1274,  2753,  3854,  1174,   116,  1782,   121,  1818,  3854,  1786,
    1674,    22,  3322,  1677,  1348,  1679,  3000,   749,   750,  3300,
    3707,  1254,  1255,  1800,  2144,  2746,  2287,  3758,  3874,  3875,
      21,  1150,  2251,  2754,  2483,  1812,  2746,  2754,    49,   872,
     873,  1150,   875,  1506,  2754,  2449,  2707,  2707,    39,  1150,
    1283,  2707,  2246,  2914,  1762,   888,  2707,  2723,  1582,  3053,
    2547,  2548,  1295,  1296,  1297,   191,   735,   736,  1301,  1691,
    1692,  1693,  2978,  3385,  3385,  1599,   121,  3628,  1348,  4520,
    1429,  2498,  1606,    43,    21,  4520,  3917,    35,  1612,    22,
      18,    19,  1050,    68,   220,    71,   222,    18,    19,   225,
     226,   227,   228,    11,    21,    18,    19,  1340,    21,    59,
    2527,  2500,  2529,  2530,     9,    71,   242,  2987,  2834,    73,
    2509,  2698,   100,    52,    71,    77,  2486,  2739,  2740,  2741,
     125,    73,   194,  1683,    29,  1685,  1686,  1687,   160,    34,
     197,  4772,    18,    19,  2756,   158,   156,    18,    19,   222,
    3827,  3828,   225,   156,  3831,   125,  2884,    18,    19,   156,
    2549,   194,   197,  1512,  2553,  3658,  3023,   144,  1358,  2781,
     249,   246,  3849,  2785,    18,    19,  2704,   235,   326,  2380,
     191,  2382,  1247,  1248,  1249,   125,    18,    19,  4395,  2801,
    2802,  1239,  1240,  1258,  2395,  2807,  1904,  2398,   131,    48,
    2401,    21,   103,   125,    62,    21,    70,   162,  4231,    19,
      21,  2823,  2824,  3070,    18,    19,   156,   228,   109,    39,
    2832,  1224,    18,    19,  1289,  3266,   176,  1292,    18,    19,
     180,   242,  3757,   230,   156,    18,    19,    70,  2850,   156,
    4418,   176,   156,  2971,   194,   130,  1311,  1312,   231,    78,
    1315,     7,   366,  3110,  3111,    18,    19,    18,    19,    21,
     238,    18,    19,  4167,   756,    73,   372,   197,  1333,  1334,
      26,    18,    19,  1338,  1339,  2709,   239,    31,    18,    19,
     258,    18,    19,   179,    64,   246,   249,   372,  1353,   916,
     917,   918,  4645,   271,   921,   922,    18,    19,   925,   235,
     927,   928,   929,    18,    19,   156,   176,  4338,   282,    18,
      19,   212,   111,    48,   160,   276,   246,   276,    18,    19,
      18,    19,   185,     5,   158,   198,    37,   144,    84,  3815,
    4549,   243,   111,    18,    19,    73,   197,   379,   125,   379,
     156,    57,   377,   238,   156,   156,   200,    35,  5154,  5155,
     125,   156,    23,   194,  3664,  4032,  2884,    33,   571,  3845,
    3846,   126,   582,   156,    18,    19,  3118,   191,   258,   156,
      19,   432,  1270,    18,    19,  1002,   354,   371,  1381,  3236,
     330,   125,    37,   315,   571,    21,  1284,   636,   144,    85,
      61,    62,    40,   127,   194,   139,   255,   194,   571,  1412,
    1413,   127,    18,    19,   156,  1538,  1660,   197,   156,   571,
     315,   502,   388,   193,    18,    19,  1549,  3424,  4149,   611,
     231,    18,    19,    13,   542,   276,   387,   103,   387,   392,
     194,  3313,   388,  1575,   571,    73,   163,  1579,    22,    73,
    2829,   388,  1584,  2971,   285,   368,   122,   194,  5079,  3162,
     446,   243,  3651,  3652,  1708,   130,   235,   432,   386,  4886,
     276,   389,  3661,  3662,   276,   386,   186,   368,   389,    18,
      19,  1613,  1614,   386,    35,   371,   389,   150,   428,   501,
     562,   237,   246,   565,    18,    19,   591,  1500,   285,  3241,
     282,  4332,  3349,   428,  3351,    18,    19,   194,   476,   743,
    4352,    62,   640,   194,   125,   623,  1238,   235,   219,   614,
     386,    67,   188,   389,   248,   386,   708,   608,   389,  1352,
     372,   285,   248,  4950,   447,   386,   399,  3409,   389,   611,
    4371,   293,   387,   546,    18,    19,   130,   533,   204,  1208,
     469,  1554,   386,   150,   150,   389,   266,   131,  4235,  3301,
     140,   456,  1723,  1724,   386,   246,  1389,   389,   428,   732,
     198,  5192,  4740,   812,   219,   419,   322,   203,   368,   245,
     548,   387,  2262,   432,  2264,   636,  1409,   571,   510,   228,
     470,   743,   386,  2987,   400,   389,  5217,   331,   412,   400,
     386,   239,   812,   389,   285,   808,   386,   293,   103,   389,
     642,  3608,   642,   386,   578,  4824,   389,  5413,  5414,   735,
     736,    18,    19,   369,   290,   729,   376,   743,  3035,   745,
    3854,   192,    52,   386,   811,   386,   389,   315,   389,   386,
    4307,   608,   389,   877,  3868,  2137,   509,   417,   403,   386,
    4317,   602,   389,   602,   455,   432,   386,   241,  4325,   389,
     562,  2137,   368,   565,   517,   501,  4560,   432,  3386,   807,
     231,  2147,  4693,   786,   386,   464,   786,   389,   401,  2941,
     432,   386,  3385,  2484,   389,  2486,   802,   386,   542,    81,
     389,   492,  5035,   500,  4361,  3074,   386,  3279,   386,   389,
    2453,   389,   588,   799,   450,  3551,   372,  3553,  2453,   757,
    4723,   386,  3001,  2453,   389,  4198,  4199,   160,   604,   542,
     693,   565,   546,  3102,  3103,  3104,  3105,    65,  1951,   647,
     396,   403,  2941,   608,   735,   736,   647,   812,  3132,    65,
     974,  3003,   386,   812,   647,   389,   627,   812,   614,  4264,
    2844,   386,   612,   698,   389,  4952,  3195,  2978,  3197,  1241,
     812,   877,   722,   879,   565,   812,  4934,  4935,   884,  1428,
    1993,   876,  2978,   571,   622,   594,  3807,  2887,  3752,   876,
     386,   647,   582,   389,    18,    19,   647,   812,  3167,   812,
     716,  3651,   386,   634,  3003,   389,   647,   636,  1032,   386,
     546,   813,   389,   919,   695,   747,  1040,  1041,   924,   812,
     810,   995,   812,   647,  1431,  3382,  1907,   810,   619,   812,
    3011,  1480,  2726,   810,  1862,   647,  1060,   812,   634,  2073,
    1489,   753,   634,   603,   562,   636,  3542,  1559,   582,  3870,
     808,  3130,   808,  2383,  2384,   812,  3448,   386,   813,  5470,
     389,  3201,  2075,   647,   510,   808,   611,   808,   974,   808,
     758,   647,   386,   807,   980,   389,   812,   647,  3386,   807,
     571,   808,   812,   386,   647,   807,   389,   646,   994,   995,
     810,  4181,  1937,   629,   807,   812,  3488,   812,  3490,  2596,
     642,  3738,   812,   812,   647,  1933,   647,   808,   810,   817,
     647,   812,  3504,   810,  3506,   808,   810,  1023,   812,   812,
     647,   636,   386,   630,  4063,   389,  1032,   647,   256,  3521,
     647,  4742,    18,    19,  1040,  1041,   571,   593,  2511,  1163,
     256,  1050,   141,  2272,   562,   647,   204,  1136,   562,   600,
    2523,  3788,   647,   608,  1060,  2698,   812,   808,   647,   636,
    2005,   812,   812,  2698,  2009,  2662,  3558,   647,  2698,   647,
    1194,   812,  1177,  1178,   510,  3344,   808,   812,  3347,   810,
     633,  2554,   647,  3380,   808,  3354,  2031,   808,   812,  1178,
    3359,  3360,  3361,  3362,  3363,  4293,  1102,  1103,    21,   386,
     812,  3370,   389,  4182,  1037,  1111,  3375,    18,    19,  3378,
    1037,  2584,   748,   647,   810,  1189,   807,  1050,   810,   810,
    2708,   812,   647,  1050,   808,   810,  2071,   812,   812,  5187,
    4561,   808,  2950,  1128,   608,  1141,   812,   810,   808,   812,
     696,  1128,  1137,   810,  1136,   808,   633,   633,   364,   812,
     535,   647,  3624,    47,   655,   656,   931,  1163,  5479,   469,
    1234,  2390,   613,   647,   808,   808,  1172,   808,   501,   812,
     647,   812,   812,  1165,  4335,   812,   738,   739,   810,  1185,
     812,   808,   810,  1189,   812,  1191,  1192,  1184,  1194,  1184,
    1196,  5506,   812,  2357,   807,  1201,   777,  1184,  1204,  1205,
    1104,   377,  1208,   174,   636,   487,   808,   753,  2533,  1215,
    1050,  1102,  1137,   808,   275,   571,   991,   812,   647,  1225,
    1226,  1227,   997,   812,  1230,  2003,   160,  1233,  1234,  4955,
    1236,  1237,   812,   647,   812,  4427,  4427,   808,  4352,  2533,
      19,   455,   565,   808,   647,   344,    33,   812,  2261,   582,
      18,    19,  1205,   464,   293,  3801,  3802,   614,   259,  3996,
     194,   455,   386,  2951,  1270,   389,   847,  2896,   278,   400,
    1359,  1302,   652,   276,   808,   176,   455,  2328,  1284,    87,
    4167,   137,   486,   647,  1408,  1280,    65,   812,  2438,  2439,
     352,  1903,   634,  1280,   112,  2412,   152,   115,  1422,  2321,
     400,   366,  1235,  1915,  1916,  1917,  1918,  2904,  1235,  2331,
      18,    19,  2334,  2412,  1926,  2337,   812,  1208,   534,    18,
      19,  2412,   216,    11,   552,  2707,  1332,   282,   812,    18,
      19,  1106,   406,  1457,  2470,   812,   552,  1037,  2474,   219,
     483,  2707,  1348,   371,  2480,  4902,  4220,  4904,   216,   449,
     415,   137,   510,    18,    19,  1386,  1387,    71,  1364,  1390,
     647,  1367,  1393,  1394,  1395,  4102,   152,  1398,  1399,  1400,
    1401,  1402,  1403,  1404,  1405,  1449,   732,  2974,  2975,   472,
     812,  4684,  4685,   812,   387,  1388,   285,  3075,  1388,   377,
    4176,    52,  3759,   432,  2172,   263,  3396,  4138,   812,   565,
     386,    71,  1408,   389,  3997,   808,   582,    12,  2121,  1415,
    1416,  1417,  1418,  2412,  1420,  1421,  1422,    18,    19,  1425,
    1426,  1427,  1428,  2412,  1430,   125,   584,   643,  1434,   158,
    1504,  2412,   563,  3702,  3434,   158,  3908,  3909,    18,    19,
    1446,  2567,  2568,  1449,  2282,  2567,  2568,  1521,   812,  4050,
     574,  1457,  2290,  4050,  1460,   812,  3997,  3997,  1464,  1465,
    4050,  3997,   249,  3792,  1417,  3644,  3997,  3751,  1421,  5195,
     812,   481,  1425,  1479,  1480,   386,  4213,   256,   389,   167,
      18,    19,  1488,  1489,  3663,  1491,  1492,  5098,   275,    18,
      19,  1565,   122,   464,   292,   165,  1429,  4234,  1504,  1505,
     243,   500,  1429,  2885,   406,  2924,  1580,  1513,   237,  4246,
    3201,  3305,   200,   727,  4251,  1521,  3207,  1509,  4119,  2885,
      44,  1550,  4119,   647,  3598,   812,   571,   428,  1461,  4119,
    1536,    18,    19,   727,  1461,  1235,  4557,  1428,  1544,  3691,
    3681,  1550,   153,  4704,  3046,  2864,  3090,  5114,   727,  1673,
    5276,    18,    19,   164,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1142,  2981,  1467,  1653,  3549,  3640,   501,  3552,   492,
    1576,  2707,  1578,   634,  1580,  5301,  1700,  1583,  2921,  1512,
    2293,  1655,  3012,  3013,   658,  1512,  3994,  3995,  1479,  1480,
    1461,   485,  3691,    18,    19,   753,  5328,  1488,  1489,   602,
    1491,   812,  3754,   642,  2153,  2869,  2870,  1560,  1561,  1562,
    1734,  1564,  3303,  3304,  4106,  1689,   571,  1550,   386,   427,
    3039,   389,  3251,  1550,  2838,  1578,  3994,  3995,  1634,  1635,
    1583,    18,    19,  2140,   123,  4825,   812,  2980,  3303,   287,
     369,  3722,   565,  1649,  3048,  3049,   369,  3304,   582,  1655,
     651,   713,   714,   715,   441,  3754,   454,  3926,  1433,  2772,
     290,   647,   448,  3093,   807,  3095,  3096,  1673,  1660,    18,
      19,   371,  1563,  4560,   388,  1566,  4308,  4980,   386,  3679,
     285,   389,   614,  1689,  4277,  3999,  2799,   386,  2838,  4887,
     389,   571,    26,   479,  1700,   723,   619,   386,   125,   571,
     389,   349,   801,   802,   803,   804,   605,   368,    18,    19,
    1550,   612,   332,   636,    18,    19,  5082,  1712,   388,  4359,
     813,   386,  4362,  1729,   389,  2879,  1721,   387,  1734,  1429,
     282,   419,   703,   704,   571,   162,   647,  3428,  4346,  3382,
      77,   369,   372,  3216,    71,  1751,  1752,  3382,    25,  4788,
      84,   139,  3382,   741,   742,   122,   658,   575,   247,  5277,
     578,  1461,   807,  5489,    18,    19,   125,    21,  4568,    18,
      19,    25,  3772,   552,   385,  3004,  3005,  3006,  4514,     9,
    3162,    18,    19,  5086,   400,   386,   122,   742,   389,   167,
      18,    19,  3610,   634,  3267,   429,  3162,   138,   483,   231,
      18,    19,  3275,   162,   638,   186,   386,  3280,   469,   389,
      18,    19,  1512,   812,  1843,   209,   246,   546,   370,    18,
      19,   188,   200,   546,   158,    64,   812,   807,   238,   355,
     354,    18,    19,  1712,  4427,    74,  4105,   635,   165,   500,
     179,  3343,  1721,  3345,   532,  5043,   276,   481,   386,  4736,
      89,   389,   188,  3355,  3356,  3357,  3358,   386,  1864,  1865,
     389,   271,  3364,  3365,  3366,  3367,  3368,  3369,     0,  3371,
    3372,  3373,  3374,   614,  1880,   500,   197,  3379,    53,   647,
     812,   813,    32,   219,   807,   266,  2831,   228,   282,    64,
    1846,   168,  2943,   249,   542,    18,    19,  3897,   586,   386,
     629,   812,   389,   237,    18,    19,   629,  1913,    18,    19,
     125,    26,    77,  5247,    18,    19,   272,   414,   546,   386,
      18,    19,   389,   290,  4238,   262,    18,    19,   249,    79,
    4244,  5449,   636,    59,    23,   807,  4338,  2061,  4346,   647,
      18,    19,   602,   331,   371,   434,    35,  3313,   647,   569,
     636,   122,    18,    19,   290,  2079,   186,   387,   647,   570,
      49,   386,    77,   593,   389,    18,    19,  4369,   156,    84,
     807,   812,    61,    62,  1865,   595,    18,    19,   812,  3979,
    5283,   128,   647,    18,    19,  3036,   231,   368,   322,  1880,
      18,    19,  4484,  3044,    18,    19,   235,  2003,  2004,   386,
     625,   629,   389,  3385,   154,   372,    18,    19,    18,    19,
      18,    19,   371,   421,    18,    19,  3029,  4425,  4426,  3385,
    4660,   160,  1913,   455,   197,  4657,   365,   366,    18,    19,
     245,   372,   371,    18,    19,   369,   372,   386,    18,    19,
     389,   419,    22,  3409,   812,   571,   647,   681,   293,  2173,
     176,    23,    18,    19,   180,  2061,  5119,  4425,  4426,  5122,
     549,   388,   177,    35,   653,  4176,   476,   647,   194,   184,
     596,   812,   813,  2079,   400,  2106,   386,    49,   547,   389,
    4176,   212,   386,   237,   160,   389,    13,  2211,  2119,    61,
      62,  2122,  3689,  2096,  5428,  5429,  2096,   262,    18,    19,
     808,  3671,  3672,   497,  2099,    18,    19,   282,   812,   647,
    4262,  4263,  2099,   812,  4516,  2727,  4268,  2120,   647,   290,
    2120,  2127,   237,   812,   368,   373,   812,   258,  4992,  2842,
    2136,  4115,   386,  4117,  2258,   389,   536,   386,    18,    19,
     389,  2215,  2216,   808,   571,   360,   293,  2153,   235,   386,
    2274,   131,   389,  2866,   532,  2868,   212,  4338,   386,   628,
     647,   389,   197,  4262,  4263,  2171,  2172,  2173,   386,  4268,
     570,   389,   602,    18,    19,  3719,   263,   585,   386,  3723,
     647,   389,  2188,   428,  3603,  3414,  2192,   386,  4369,   362,
     389,    23,   807,   563,  2200,    18,    19,  2203,   813,   386,
    2978,   372,   389,    35,   330,  2211,    21,   322,   586,  2215,
    2216,   812,   546,   140,  5328,   369,  3582,    49,   122,  4013,
    4938,   125,   647,  3642,   813,  4943,   593,    18,    19,    61,
      62,   194,   812,    48,  4701,  4702,   484,   563,  3975,   235,
    2246,   230,  2248,   156,  2250,  2136,  5309,  2250,   363,   588,
    3569,   212,  2258,  3990,   369,   277,   387,   593,   280,   216,
     647,   508,  2153,   386,   414,   604,   389,   263,  2274,  2393,
      18,    19,   386,  2282,   812,   389,   386,   141,  2421,   389,
    2171,  2290,   386,   812,   188,   389,   436,  3651,   386,    77,
     534,   389,    18,    19,   386,   629,  3660,   389,   647,  2305,
      13,  2444,   428,  3628,    18,    19,   263,  2431,   386,  2200,
      13,   389,  2203,   400,   122,   219,    18,    19,   655,   656,
     386,   808,   285,   389,    18,    19,   746,   477,    13,  2335,
    2336,  3625,   614,   386,  3628,  4153,   389,   647,    13,  2272,
     492,   808,  2275,   647,   386,  2272,   167,   389,  2275,  2282,
     194,   386,  5070,  2356,   389,  2282,  2356,  2290,   386,   606,
     696,   389,   386,  2290,   784,   389,  3436,    18,    19,    18,
      19,  4843,    13,  4845,   386,    21,   386,   389,   386,   389,
     188,   389,   386,   808,   807,   389,   290,  2393,   538,   127,
     813,  5128,   546,   647,  4546,   432,   386,  2521,   647,   389,
    2429,   386,   246,   650,   389,   194,   386,   429,   239,   389,
     647,   748,   749,   565,   748,  2421,   453,   125,   249,   647,
     386,   808,   593,   389,   807,  2431,   591,   140,   128,   647,
    2459,   546,  2438,  2439,  2558,    18,    19,   140,  2444,   647,
     148,   285,  2282,  2449,  2335,  2336,  2449,  4546,   647,   614,
    2290,  3564,   241,  3579,   800,   140,  3578,  2390,   495,   808,
     647,  5069,   808,  2390,  3758,   140,   386,   619,   372,   389,
       9,  2477,    19,   386,   262,   629,   389,  2483,  2507,   187,
     344,  4750,   290,  2489,  2490,  2491,  2492,  2493,  2494,  2495,
     655,   656,    31,  2499,   813,  2501,   807,  5297,   808,   140,
     811,    18,    19,   209,   808,  2511,   386,  2513,  2514,   389,
    2516,   600,  2518,  2519,   629,  2521,  2522,  2523,  5126,  5127,
     220,  5542,  2528,   582,   647,  2531,   808,  2533,   235,   680,
     812,    86,  2538,   647,  4803,  2541,  2542,   647,   234,   235,
     691,   386,  4279,   647,   389,  2485,  2552,  4284,  2554,   647,
     105,  4288,  2558,  2444,  3605,   647,  2496,    18,    19,   808,
    3885,   392,  2502,   386,   372,   261,   389,  5304,  2574,   647,
     230,   808,  2272,  5040,  5041,  2275,   282,  3202,  2584,  2585,
     808,   647,   808,   748,   749,   231,   812,  3212,  3213,   212,
     808,  3885,  2532,   293,   647,   386,  2536,    21,   389,   680,
     808,    61,    62,  2543,  2544,   647,  4297,   680,   455,   808,
     691,    71,   647,   563,   197,  3997,    61,    62,   691,   647,
     212,   808,  4751,   647,    84,  2749,    71,  4756,   600,  2753,
     235,  3997,  5015,   748,   800,   647,   680,   647,   386,   647,
     565,   389,   808,   647,    38,  2719,   807,   691,    26,   100,
      74,  2542,    46,   625,  5454,   807,  4450,   647,    12,   141,
     386,  5069,   647,   389,  3557,   808,   455,   647,     7,   812,
    3692,   137,   386,    18,    19,   389,   365,   366,    18,    19,
     197,   647,   807,  2574,   386,   808,   152,   389,   952,   593,
    2390,   955,   386,  2699,   808,   389,   960,  2703,   808,   300,
     301,   965,   807,   492,   808,  4363,    84,   807,  4366,  4367,
     808,  4448,   227,  2719,   229,    19,   808,   808,  5126,  5127,
     571,   812,  2728,  2729,  2730,  2731,  2732,   647,   808,   815,
     808,  2726,   812,   807,   647,   386,   160,   386,   389,   807,
     389,    19,   808,  2749,   808,   807,  2777,  2753,   812,   835,
    4879,   812,    21,   808,  4883,   808,   122,   812,  4177,   125,
    4024,   808,   848,   849,   807,   812,   808,   647,   600,   807,
    5039,   787,   788,  2897,   790,  2728,   565,  2730,  2731,   813,
     808,  4211,  4212,   562,   808,   593,   565,   238,  2912,   621,
     622,   497,   141,  4057,  4058,   212,   808,    13,   808,   138,
     808,   120,   647,   386,   808,   144,   389,   258,  2699,   455,
    4939,   235,  2703,   808,   807,  4944,  2890,   812,   808,  4083,
     271,   807,   188,   808,   647,  4809,   622,    43,  2834,   625,
     619,   100,  2838,     7,    80,   807,    82,   141,   636,   263,
     807,   639,   808,   444,   445,    77,   492,   636,   636,   807,
    3743,  3744,  4843,   219,  4845,  4149,   647,   716,  3571,   237,
     808,  3997,   344,   141,   812,   319,   320,   655,   656,   386,
     324,   325,   389,   807,  2880,  2881,    26,  2872,    94,   125,
    4014,   807,    98,  4000,  2890,  2872,   808,   156,   808,   228,
     812,  2897,  4583,  4584,   808,  4277,    61,    62,   812,   647,
    4064,  4000,   148,   354,   717,   718,  2912,   226,  2914,  4000,
     808,  4277,   808,  2919,   812,   807,   812,  2923,  2924,   565,
     807,   647,  5101,   192,   290,   194,   158,    77,   808,  4431,
    4432,  4433,  4434,   647,    84,   799,   800,   801,   802,   803,
     804,   187,   807,   212,   322,   647,   652,  2953,   217,   666,
     667,   125,   669,   647,  2960,  2961,  4069,   807,   160,   161,
     748,   749,   231,   808,   138,   671,   122,   808,   807,   238,
     144,   812,  2978,   619,  2969,  2981,   563,   246,   808,   655,
     656,  2987,   812,  2986,  2987,   808,  2986,   807,   808,   258,
     636,   369,  2987,   807,  3118,   344,   647,   808,   647,   201,
    2987,   812,   271,  3032,   343,   237,   372,   276,   158,   808,
     150,   151,   214,   812,  4127,   334,   285,   808,   807,   338,
     807,   503,   504,  3032,    12,   476,   345,   177,   667,   807,
     669,   807,   188,  3039,   184,   122,  3067,   253,  3069,   807,
     344,   386,    77,    13,   389,  4427,   386,  2567,  2568,   389,
     807,   108,   254,  3059,   228,   808,    47,    48,  3064,   812,
     808,  4427,  2953,   219,   647,   267,   344,  3191,   807,  2960,
    2961,  3004,  3005,  3006,   807,  3459,   808,  3004,  3005,  3006,
     812,   122,   808,   807,   125,   354,   807,   237,  1117,  1118,
     103,  1120,   294,  1122,   808,   807,  3480,   548,   808,  3032,
     212,   188,   812,  1319,  1320,  3032,   808,   426,   377,   122,
     167,   135,  3118,   418,   808,   331,   807,  3241,   387,   807,
     108,   808,   480,  4542,   122,   812,  3132,  3133,  3134,  3132,
     647,   363,   219,   807,   290,   807,    21,   369,    15,   127,
     227,   808,   229,   200,    21,   812,   807,   188,  4567,  4313,
     480,    21,  3158,  4166,   503,   504,   358,   808,   582,   808,
    4324,   807,    39,   764,   765,   807,    43,   807,   546,   343,
     140,   490,   322,   122,   807,   188,  3300,  3301,   219,   395,
      57,    58,  1610,  1611,   808,  3191,    63,   141,   812,  3195,
     188,  3197,  3032,   439,   807,   807,   807,  3203,   372,   503,
     504,  3207,   237,   290,   808,   808,   438,   476,   812,   812,
    3216,   807,   200,   363,   807,   100,   372,   807,  3224,   369,
     808,   219,   807,   807,   812,   503,   504,   593,   807,   574,
     100,   500,   245,   563,   807,  3241,  4561,   141,   568,   188,
     808,  3247,   808,   808,   812,   807,   812,   812,  5517,   290,
     220,   629,   808,   807,   141,   243,   812,   807,   807,   807,
     653,  3267,  4556,  3387,  5533,   807,   807,  4561,   384,  3275,
     219,   156,    33,  3279,  3280,   562,   808,   290,   808,   548,
     812,   611,   812,   808,   807,   372,   156,   812,   122,  3295,
    5559,   125,   290,   807,  3300,  3301,   808,   627,   286,   808,
     812,   517,   647,   812,  3004,  3005,  3006,   647,   807,   194,
     807,   807,   631,   141,   546,   797,   798,   799,   800,   801,
     802,   803,   804,   653,   194,  3331,   808,   212,   363,   807,
     649,   372,   217,   602,   369,   808,   807,   807,   807,   812,
    3346,   290,   212,   559,   613,   614,   492,   217,  3437,   807,
     377,   808,   808,   238,   188,   812,   812,   807,   807,   372,
     808,   246,   419,   807,   812,   634,   598,   636,   238,   807,
     748,   808,   807,   258,   372,   812,   246,    77,   808,   807,
     141,  3387,   812,   396,   807,   219,   271,   807,   258,   807,
     344,   276,   807,    93,   807,   807,   546,   629,  4176,   141,
     285,   271,   807,   438,  3295,   808,   276,   141,  5005,   812,
     807,   380,   808,   197,   156,   285,   812,  3423,   492,   565,
    3426,   808,  3428,   372,   807,   812,   807,  3811,   697,  3424,
    3462,   419,  3464,  3428,  3440,   807,   807,   593,  3433,  3434,
     344,  3428,   231,   808,  3439,   246,   194,   812,   797,   798,
     799,   800,   801,   802,   803,   804,   290,   344,   197,   808,
    3844,  4625,  4626,   246,  4628,  4729,   808,   808,  3852,   354,
     812,   812,   620,   619,   620,  3859,  4635,  4636,   500,   629,
     377,  3414,   808,   500,   354,   492,   812,  3414,   249,   212,
     636,   565,   377,   797,   798,   799,   800,   801,   802,   803,
     804,   813,   387,   812,   166,   141,   593,   377,   565,   808,
     498,   546,   108,   812,   275,   249,   344,   387,   807,   797,
     798,   799,   800,   801,   802,   803,   804,   808,   194,   586,
     276,   812,  3423,   542,   562,  3426,  3542,  5225,   372,   808,
     808,   810,    37,   812,   812,   619,  3620,   166,   817,   503,
     504,   222,   593,    37,   611,  3561,   526,   527,   565,   529,
     530,   531,   636,   598,   542,   265,   542,   287,   157,   813,
     627,   807,   521,   812,   812,   563,   807,   565,   548,    96,
     593,   141,   807,   344,  4477,   813,    48,   156,   156,    37,
     197,   476,  3598,   111,   629,   593,  3602,  3603,   748,   503,
     504,   808,   344,  3609,   365,   366,   476,   810,   807,   160,
     344,   599,   619,  3608,  3620,   500,   503,   504,  3624,  3625,
     115,   811,  3628,   611,   160,   221,   160,   122,   122,   636,
     500,   115,   812,  3628,  3640,   249,  3642,   293,   122,    48,
     195,  3628,   342,   383,   593,  3651,  3652,   160,  3651,  3652,
     171,   532,    64,   518,  3660,  3661,  3662,  3660,  3661,  3662,
     193,   807,    74,   548,   708,   492,     7,   115,   368,    71,
      77,    13,   633,   500,   122,   503,   504,    89,   548,   808,
     441,  3712,   808,   696,   179,   140,    93,    10,   812,   249,
     813,   808,   492,   188,   188,   179,   501,   808,   808,  3705,
     500,  3707,   808,   808,   188,   808,   808,  4871,   344,  4873,
    4874,   807,   275,   666,  3414,   708,   377,   602,  3609,   707,
     614,   562,   515,   812,   219,   219,    50,   134,   282,   614,
     430,   179,   602,   807,    30,   219,   812,   287,   565,  4903,
     188,   812,   503,   504,   614,  3751,   582,  3753,  3751,   634,
     812,   636,  3758,   486,    71,   516,   571,   732,   273,   593,
     812,   503,   504,   812,   634,   565,   636,   657,   811,   503,
     504,   219,  4823,   812,   249,   813,   801,  3809,  3810,   252,
     560,   193,  3814,   181,   344,    88,  3792,   199,   194,   812,
     194,    64,   619,   620,  3800,   290,   290,   393,   812,    21,
     807,    74,   812,   378,  5098,   558,   290,   403,   812,   636,
     645,   136,   697,   156,   410,  5265,    89,   728,  3850,   619,
     620,   808,    48,   235,  3856,  3857,  3858,   697,   786,  3861,
    4980,   455,   532,   372,   653,   728,   636,   636,   727,   571,
     812,    87,   290,   797,   798,   799,   800,   801,   802,   803,
     804,   263,   502,     7,   808,   315,   807,   110,   265,   158,
     355,   582,   400,    74,   582,  5015,  3872,   503,   504,   400,
     400,   355,   367,   136,   261,   261,   371,   372,   372,  3885,
     400,   136,  3888,  3889,   400,    48,   763,   371,   372,   400,
     400,   768,   400,   797,   798,   799,   800,   801,   802,   803,
     804,   584,  3908,  3909,   808,   618,  3912,   355,  3914,   400,
     618,  3917,   799,   800,   801,   802,   803,   804,   514,   500,
     193,   798,   807,   808,   372,   810,   199,   812,   812,   812,
     709,   627,   817,   491,   807,   342,  5086,   814,   808,   807,
     810,  5205,   812,   503,   504,  4838,   808,   817,   812,   609,
      57,  5401,   171,   377,   447,     7,   716,   377,   365,   366,
     721,   368,   235,   111,   613,     7,   591,   200,   808,  3975,
     798,   799,   800,   801,   802,   803,   804,    21,   808,   808,
     807,   197,  5211,    27,  3990,   808,  3992,    64,   400,   807,
     263,   808,   808,   800,   808,   872,   873,    74,   875,   876,
     808,   812,   808,  4009,   808,   417,   808,   807,   689,   812,
     808,   888,    89,   808,  5464,   611,  5466,  5281,   812,   192,
      64,   808,   808,   430,   812,   287,   808,    71,   813,   804,
     808,    75,  5482,    77,   808,   808,   797,   798,   799,   800,
     801,   802,   803,   804,   813,    89,   457,   458,   459,   460,
     461,   462,   463,   807,   813,   797,   798,   799,   800,   801,
     802,   803,   804,   797,   798,   799,   800,   801,   802,   803,
     804,   807,   807,   287,   812,   812,   571,  5527,  5528,   808,
     575,   125,   813,   578,   811,   287,    64,   571,    77,   287,
     287,   575,   287,   588,   578,   100,    74,   812,   593,   593,
     812,   596,   160,   377,   588,   582,   518,   984,   634,   593,
     236,    89,   596,   812,   812,   812,   193,   582,  4009,   400,
      13,    12,   111,   571,   582,   532,   812,   575,   160,   210,
     578,   197,  4138,  5283,   377,   197,   582,   582,   255,   432,
     588,   194,   812,  4149,   417,   593,  1023,   197,   596,   813,
     813,   614,  5477,   808,   813,   813,   813,   427,   235,   203,
    1037,   797,   798,   799,   800,   801,   802,   803,   804,   158,
    4176,  4177,  4167,  1050,    60,   513,  4182,  5502,   607,  4182,
     808,   812,   194,  5477,  4308,   814,   263,   404,   401,   789,
     789,   603,   228,   403,   403,   144,  5521,   103,   571,   571,
     571,   668,   341,   812,   379,   813,    60,   263,  5502,   477,
     807,  4335,   597,   402,   263,   193,  5541,   108,   263,   263,
     706,   377,   672,   672,   249,   160,   160,  5521,   160,  4235,
     160,   160,   160,   238,   160,   160,   127,   797,   798,   799,
     800,   801,   802,   803,   804,   518,   235,  5541,   160,   160,
     160,   160,   160,   258,   708,   160,   160,   235,  5422,   160,
     160,   160,   160,   160,   160,   160,   271,   641,   160,   286,
     160,   160,   160,  4279,  4303,  4281,   160,   160,  4284,   160,
     160,   160,  4288,   160,   160,   263,   160,   160,   160,   160,
     160,  4297,   160,     4,   160,   160,   160,   160,   160,    19,
     653,   791,  4308,   464,   799,   800,   377,   808,   199,   154,
      21,   808,   807,   813,   245,   799,   800,   813,   245,   808,
     808,   365,   366,   807,   571,  4331,   808,   371,    39,  4335,
     603,   812,   321,   377,   808,   571,  1213,   808,   808,   571,
     417,   813,   582,   654,   235,   813,   807,   300,   301,   354,
     339,   799,   800,   582,   813,   812,   807,  5539,  1235,   197,
     384,   730,   212,   807,   732,   812,  1243,  1244,   432,  4375,
    4376,   372,   377,   417,   363,  1252,  1253,  1254,  1255,  1256,
    1257,   611,   100,   335,   812,   156,   807,   554,  1265,  1266,
    4396,  1268,  1269,   807,  5277,   286,  1273,  1274,    12,   807,
    1277,  1278,  1279,  1280,   403,  1282,  1283,   500,     7,   403,
     343,   812,  4418,  1290,  1291,    73,  1293,  1294,  1295,  1296,
    1297,   532,   400,  1300,  1301,  1302,  1303,  1304,  1305,  1306,
    1307,  1308,   532,  1310,   532,   532,  1313,  1314,   532,   417,
    4331,  1318,  4448,  4396,   491,  1322,  1323,  1324,  4454,   807,
     263,   263,   496,   377,   614,  4450,   807,   591,  1335,  1336,
    1337,   563,   812,  1340,   366,   636,  1343,  1344,  1345,  1346,
    1347,   476,   563,   812,   582,  1352,   582,   450,   372,   808,
     808,   812,   212,    19,  4375,   807,  1363,  1364,  5381,   807,
     377,   444,   445,   807,  1371,   377,  1373,  1374,   389,   807,
     807,   807,   546,   807,    62,   785,   807,   807,  1385,  1386,
    1387,  5524,  1389,  1390,   108,   807,  1393,  1394,  1395,   807,
     238,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,   720,
    4635,  4636,  1409,  4657,   247,   413,  4542,  1414,   247,    21,
     258,   808,  4548,   548,   751,    48,   494,   808,   808,   807,
    4556,   808,  1429,   271,   687,  4561,  4562,   546,   812,   603,
     687,  4567,   812,   571,   808,  4560,  5449,    26,    27,    28,
     523,   524,   525,   167,   563,   285,    12,   546,   160,   384,
    4704,   812,   231,   801,  1461,   642,  5479,  4593,   282,   160,
     197,   812,   807,   258,   258,    56,   808,   390,    48,   217,
     808,  4607,   808,   808,    63,    66,   200,   498,   808,   614,
     160,   655,   656,   160,   160,    76,   812,   403,    77,   807,
      48,    35,   160,   807,    83,    84,   228,   518,    87,    90,
      91,    92,   103,   792,   245,  1512,   354,  4761,   278,  4645,
     368,   235,  1519,  4649,   813,   106,   111,   111,   162,   807,
    5533,  4657,   111,   400,   807,   729,   807,   807,   807,   377,
     440,   705,     7,   807,   799,   125,   125,    12,   808,    14,
     129,   383,   563,  1550,   565,  1552,  5559,   568,  1555,   582,
     565,    26,    27,    28,   228,   729,   807,   116,   117,   118,
     119,   120,   286,   472,   377,   807,   372,   245,  4704,   158,
     636,   400,   197,   808,   748,   749,   432,   808,   599,   808,
     210,    21,   603,    58,   377,   582,   808,   269,    63,   808,
     611,   808,   246,   808,   812,   197,   258,   813,   812,   258,
     258,   697,    77,   160,  4740,   817,  4742,  4743,    83,    84,
     126,  4736,    87,    56,   158,   817,   277,  4821,   162,   817,
      48,    96,    21,    66,  1631,  4761,    35,   403,   476,    48,
     160,    48,   653,    76,   153,    48,   111,   801,   807,  4775,
     477,    35,    35,  1650,   625,   729,   235,    90,    91,    92,
     125,   608,   125,   242,   129,   263,   186,    64,   202,   263,
     203,    35,   137,   106,   223,   224,   225,   226,   372,   144,
     807,   201,   372,   262,   377,   372,   415,   152,   222,    77,
      15,   764,   765,   158,   214,  4821,   707,   377,    21,   807,
     414,   813,  4828,   808,   515,   419,   487,   808,   377,   808,
     548,   808,  1709,   808,   808,   341,   808,  4843,  4881,  4845,
     808,  5339,   812,   265,   427,   812,    48,   192,   387,   808,
     377,   175,   285,   210,   384,    21,  5354,   147,    63,   565,
     258,   808,   321,   258,   807,   807,   266,   267,   160,   808,
    5368,   405,   333,   287,   812,   120,    48,   120,    48,   158,
     339,    48,   387,   162,  4775,   377,   619,   372,   807,   350,
     235,   367,    15,   620,   294,    21,   614,   242,   812,    81,
    4906,   143,   510,   372,   498,   334,   228,   336,   337,   338,
     515,    21,   173,    48,   372,   341,   345,   262,   384,   263,
     377,   194,  5420,   202,   518,    21,   160,   276,  4934,  4935,
     162,   318,   807,   636,   673,   394,  5434,  4828,    21,   808,
     285,   397,    48,   222,   403,   194,  5444,   112,  4954,   808,
     808,   812,   812,   808,   162,   807,   813,  4963,   807,   812,
     808,   636,   362,   608,   808,   812,   808,   807,   382,   563,
     807,   812,   808,   808,   568,  5006,   321,  5475,   808,   807,
     136,   807,   807,   807,   573,   136,  5484,  5030,  5486,   136,
     807,   812,   586,   377,   339,   158,  5002,   426,   343,   808,
     537,   149,   472,   483,   418,   599,   691,   678,   287,  5015,
     471,  5509,   691,   691,   653,    48,   416,   611,    48,   534,
     333,   554,   807,   482,   155,    32,   814,   488,   442,  5035,
     633,   384,    64,   627,   483,    64,   808,   350,    19,   481,
     702,   808,   387,   553,   197,   633,  5544,  5545,    32,   394,
     384,  5549,   384,   467,   808,   143,   691,   688,   403,   653,
     489,   490,  1939,   483,   228,   701,  1943,   464,     6,   377,
    5099,   377,   246,   154,  1951,   810,  1953,   134,    48,   538,
     539,   540,   541,   608,   171,   130,   154,   546,   633,   550,
     230,   292,  5098,   810,  5100,   814,   124,   511,   231,    54,
     143,  5107,  5108,   382,   563,   450,   567,   566,  5114,   702,
     810,   574,   372,   707,   807,   154,  1993,  5241,   215,   574,
    5244,   810,   812,  5129,   500,    54,   574,   154,   542,   194,
    5057,   194,   194,   454,   635,  5141,   125,   482,   812,   418,
     377,   698,   196,   602,  3586,  5151,  5161,  3340,   562,  3334,
    5156,   565,  3336,  4745,  4742,  3338,  3352,  4750,  3988,  3785,
    2037,  2038,  2039,   442,  5161,  4755,  5161,  1240,  5191,  4768,
    5362,  5072,  1757,  5416,  5161,   488,  4954,  5559,  5078,  5517,
      46,  5187,  2977,  2919,  4138,  1092,  5529,  5057,   467,  5057,
    5057,  5057,  5057,   538,   539,   540,   541,  5057,  2075,  5230,
    5431,   546,   631,  2080,  5057,  5057,  5057,  5332,  5057,  5431,
    5057,  5414,  5057,  5057,  5358,  5357,  3997,  5057,   563,   648,
     649,   566,  2099,  2474,  2480,  3582,  4427,  5154,  5155,  2106,
    4277,  4450,   511,  2700,  2111,  5241,  2113,   550,  5244,  1199,
    3434,  3433,  2119,  4230,  2121,  2122,  4862,  5371,  3439,  5306,
    4642,  5257,  5390,  5318,   567,  5316,  5030,   602,  2453,  2567,
    4452,  3428,  4297,   542,  4298,   724,  4349,  3828,  3861,  3860,
     981,  4671,  5328,  5316,  4352,  5099,  3538,  5034,  5211,  4883,
    4944,  4879,  4939,  4893,  5211,  3203,  1912,  4649,  4324,   748,
     749,   636,  4446,  5299,   639,  4002,  3113,  3416,  2568,  3106,
    4721,  2568,  2567,  1694,  1731,  2345,  2343,  1098,  3891,  2966,
    3233,  1890,  2960,  1865,  5154,  5155,  3331,  3609,  2950,  4154,
      64,  2253,  1024,  2424,  1364,  1023,  1037,  4475,  2838,  2059,
    2127,  4980,  2878,  5001,    27,  5283,  5381,  5264,  5265,  1284,
    2987,  5299,  2987,  2987,  2987,  5479,  5506,  4847,  4586,  5107,
    3912,  4210,  1111,  5108,  4595,  1634,  5002,  5057,  3667,  5390,
    4804,  2431,  3885,  4975,  4877,  5371,    16,  2137,  1184,  2885,
    1184,    64,  3608,  1469,  5498,  3608,  4564,  4173,    71,   724,
    1632,  3606,    75,  4547,    77,  1184,  4556,  1184,  1180,  2329,
    1730,  2330,   993,  1104,  1597,  2272,    89,  1181,  2275,  2906,
    3295,  2226,  1258,   748,   749,  2282,  2283,  3612,  5296,  4258,
    2287,  5380,  5339,  2290,  4632,  2225,  2293,  5521,  5541,  4516,
    4369,  4561,  4850,  4616,  5264,  5265,  1367,  5354,  3133,  3346,
    5436,  2275,   125,  1548,  3032,    43,  2290,  5443,    43,  2270,
    2953,  5368,  1546,  5291,  2268,  1009,    39,  1461,  3101,  1150,
    2711,  1689,  4818,  2719,  5154,  5155,  2720,  1012,  4985,  1173,
    1508,    11,    11,  1240,  1240,  1240,  4005,  4386,  4447,  5307,
    4763,  5477,    -1,  3902,  5401,    -1,    -1,  5483,    -1,    -1,
      -1,    -1,  5488,    -1,    -1,    -1,  5413,  5414,    -1,    -1,
      -1,    -1,  5498,  5420,    -1,    -1,  5502,    -1,    -1,  5339,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5434,    -1,    -1,
      -1,  5211,    -1,  2390,  5354,  5521,    -1,  5444,    -1,    -1,
      -1,    -1,    -1,    -1,  1235,    -1,    -1,  5533,  5368,    -1,
      -1,    -1,    -1,    -1,    -1,  5541,    -1,  5464,    -1,  5466,
      -1,    -1,    -1,    -1,  5539,    -1,    -1,    -1,  5475,    -1,
      -1,    -1,  5539,  5559,    -1,  5482,    -1,  5484,    -1,  5486,
      -1,  5401,    -1,   768,  5264,  5265,    -1,    -1,    -1,    -1,
     263,    -1,    -1,  5413,  5414,    -1,    -1,    -1,    -1,    -1,
    5420,    -1,  5509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   798,  5434,  2472,    -1,    -1,  2475,  2476,
    5527,  5528,    -1,    -1,  5444,    -1,    -1,    -1,    -1,   814,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5544,  5545,    -1,
      -1,    -1,  5549,    -1,  5464,    -1,  5466,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5475,    -1,    -1,    -1,  5339,
      -1,    -1,  5482,    -1,  5484,    -1,  5486,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5354,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5368,  5509,
      -1,   876,   365,   366,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,   377,    -1,    -1,  5527,  5528,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5401,    -1,    -1,  5544,  5545,    -1,    -1,    -1,  5549,
      -1,  2588,    -1,  5413,  5414,    -1,    -1,    -1,  1429,    -1,
    5420,    -1,    -1,    -1,   417,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5444,    -1,    -1,    -1,    -1,    -1,
    1461,    -1,    -1,    -1,    -1,    -1,  1467,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5464,    -1,  5466,    -1,    -1,    -1,
    1481,    -1,    -1,    -1,    -1,  5475,    -1,    -1,    -1,   984,
      -1,    -1,  5482,    -1,  5484,    -1,  5486,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1512,    -1,   496,    -1,    -1,    -1,    -1,    -1,  5509,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5527,  5528,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5544,  5545,    -1,    -1,    -1,  5549,
      -1,    -1,    -1,   546,    -1,    -1,    -1,  2734,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2743,  2744,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2764,  2765,    -1,
    2767,    -1,    -1,  2770,  2771,  2772,  2773,  2774,    -1,    -1,
    2777,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2786,
     603,    -1,    -1,    -1,  2791,    -1,  2793,    -1,  2795,  2796,
      -1,  2798,  2799,    -1,    -1,    -1,  2803,  2804,  2805,    -1,
      -1,    -1,  2809,  2810,  2811,    -1,  2813,    -1,  2815,    -1,
    2817,    -1,  2819,    -1,  2821,    -1,    -1,    -1,    -1,  2826,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   655,   656,    -1,  2842,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1691,  1692,  1693,    -1,    -1,    -1,    -1,  2864,    -1,  2866,
      -1,  2868,    -1,    -1,    -1,  2872,    -1,    -1,    -1,    -1,
      -1,  2878,  2879,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   705,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   729,    -1,  1243,  1244,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1252,  1253,    -1,
      -1,  1256,  1257,    -1,    -1,   748,   749,    -1,    -1,    -1,
    1265,  1266,    -1,  1268,  1269,    -1,    -1,    -1,  1273,    -1,
      -1,    -1,  1277,  1278,  1279,  1280,    -1,  1282,  2955,    -1,
      -1,    -1,    -1,    -1,    -1,  1290,  1291,    -1,  1293,  1294,
      -1,    -1,    -1,    -1,    -1,  1300,    -1,    -1,  1303,  1304,
    1305,  1306,  1307,  1308,    -1,  1310,    -1,    -1,  1313,  1314,
      -1,    -1,    -1,  1318,    -1,    -1,    -1,  1322,  1323,  1324,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3004,  3005,  3006,
    1335,  1336,  1337,    -1,    -1,    -1,    -1,    -1,  1343,  1344,
    1345,  1346,  1347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3032,    -1,    -1,  1363,  1364,
      -1,    -1,    -1,    -1,    -1,    -1,  1371,    -1,  1373,  1374,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3057,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3067,    -1,  3069,  1761,    -1,  1763,  1764,    -1,    -1,    -1,
    1768,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1414,
      -1,    -1,    -1,  1781,    -1,    -1,  1784,  1785,    -1,  1787,
      -1,    -1,  1790,  1791,  1792,  1793,    -1,    -1,    -1,  1797,
      -1,    -1,    -1,    -1,  1802,    -1,    -1,    -1,    -1,  1807,
    1808,  1809,  1810,  1811,    -1,    -1,    -1,  1815,  1816,  3126,
      -1,    -1,    -1,  1821,    -1,  1823,  1824,  1825,    -1,  1827,
    1828,    -1,  1830,    -1,    -1,  1833,    -1,    -1,  1836,  1837,
      26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    62,    63,    -1,    -1,
      -1,    -1,    -1,    -1,  1519,    71,    -1,    -1,    -1,    -1,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1552,    -1,    -1,
    1555,    18,    19,    -1,    -1,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
      -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    14,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    50,    51,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,    -1,  1631,    63,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    79,    -1,  1650,    -1,    -1,    -1,   116,
     117,   118,   119,   120,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,
      -1,    -1,    -1,    -1,    -1,   121,   242,    -1,    -1,    -1,
    2201,  2202,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1709,    -1,   262,   143,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,  3414,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,   223,   224,   225,   226,
      -1,  2272,    -1,    -1,  2275,   321,    -1,    -1,    -1,  3446,
      -1,    -1,   208,    -1,   210,    -1,    -1,  3454,    -1,   215,
      -1,    -1,   218,   339,    -1,    -1,    -1,    -1,    -1,  2300,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,  3491,  3492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,
    3517,    -1,    -1,    -1,    -1,   281,    -1,   403,    -1,   285,
    3527,    -1,  3529,    -1,  3531,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,   336,
     337,   338,    -1,    -1,    -1,    -1,    -1,    -1,   345,  2390,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3564,    -1,    -1,
      -1,    -1,  3569,    -1,  3571,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   386,
      -1,    -1,   389,    -1,    -1,    -1,   482,    -1,    -1,  3606,
      -1,    -1,    -1,    -1,  1939,    -1,    -1,    -1,  1943,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,  1953,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2469,   426,
      -1,    -1,  2473,    -1,    -1,    -1,  3643,  2478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,
      -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,   425,
     546,    -1,  2503,  2504,  2505,  2506,    21,    -1,    -1,    -1,
      -1,    26,    27,    28,  3681,    -1,  2374,   563,    -1,    -1,
     566,   447,    -1,    -1,   450,    -1,   452,    -1,    -1,   455,
      -1,    -1,   489,   490,  2535,    -1,    -1,    -1,    -1,   465,
     466,    -1,  2037,  2038,  2039,  3712,    -1,    -1,    63,   475,
      -1,   477,    -1,    -1,    -1,    -1,   602,    -1,  2559,  2560,
     486,    -1,    77,    -1,    -1,    -1,   492,    -1,    83,    84,
      -1,    -1,    87,    -1,   500,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,    -1,    -1,  2080,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2099,    -1,    -1,    -1,    -1,    -1,
     125,    -1,   538,    -1,   129,    -1,  2111,    -1,  2113,   545,
      -1,    -1,    -1,  2481,  3791,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,   156,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
    2508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   589,    -1,    -1,    -1,  2525,    -1,    -1,
      -1,    -1,    -1,    -1,   631,   601,    -1,    -1,   724,   605,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     647,   648,   649,   619,    -1,    -1,    -1,    35,    -1,    -1,
      -1,    -1,   748,   749,  2562,  2563,    -1,    -1,    -1,    -1,
     636,    -1,  2570,    -1,    -1,    -1,   231,    -1,   644,    -1,
     235,    -1,    -1,    -1,    62,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,   660,   661,   662,   663,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,   675,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,   712,    -1,  2283,    -1,
      -1,    -1,  2287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   142,    -1,   321,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   339,    -1,   752,  3994,  3995,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4028,    -1,  2721,    -1,    -1,    -1,   205,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
      -1,   807,    -1,    -1,    -1,   400,    -1,    -1,   403,    -1,
      -1,    -1,    -1,    -1,  4061,    -1,  4063,    -1,    -1,  4066,
    4067,    -1,  4069,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4080,    -1,    -1,    -1,    -1,  4085,    -1,
      -1,  4088,   260,    -1,  4091,  4092,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     455,   279,    -1,    -1,    -1,    -1,  4113,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2956,    -1,    -1,    -1,    -1,
    4127,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3004,  3005,  3006,  4173,    -1,   346,   347,
     348,    -1,    -1,    -1,    -1,   353,    -1,    -1,   356,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,
      -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4207,  4208,    -1,    -1,    -1,  3046,    -1,    -1,   563,    -1,
     565,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     408,   409,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,
      -1,    -1,    -1,  2588,    -1,    -1,   434,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   636,  4289,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3149,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3161,    -1,  3163,  3164,  3165,  3166,    -1,  3168,  3169,    -1,
     508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4393,  4394,    -1,    -1,
      -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,  2734,
     578,  3242,    -1,    -1,    -1,    -1,    -1,    -1,  2743,  2744,
      -1,    -1,    -1,    -1,  3255,    -1,    -1,    -1,  4425,  4426,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   606,  2764,
    2765,    -1,  2767,    -1,    -1,  2770,  2771,  2772,  2773,  2774,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3146,    -1,
    3148,  2786,   807,    -1,    -1,   810,  2791,    -1,  2793,    -1,
    2795,  2796,    -1,  2798,    -1,    -1,    -1,    -1,  2803,  2804,
    2805,   649,    -1,    -1,  2809,  2810,  2811,    -1,  2813,    -1,
    2815,    -1,  2817,    -1,  2819,    -1,  2821,    -1,    -1,    -1,
      -1,  2826,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3343,    -1,  3345,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3355,  3356,  3357,  3358,    -1,    -1,
      -1,    -1,    -1,  3364,  3365,  3366,  3367,  3368,  3369,    -1,
    3371,  3372,  3373,  3374,    -1,    -1,  3377,  2872,  3379,    -1,
      -1,    -1,    -1,  2878,    -1,    -1,    -1,    -1,    -1,    -1,
    4557,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4577,    -1,  4579,  3414,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3315,    -1,    -1,
    2955,    34,    35,    -1,    36,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    -1,    50,    51,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    62,
      -1,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4686,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,  3391,  3392,  3393,  3394,    -1,    -1,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,   121,
     123,  4718,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,
     132,    -1,  3057,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,   143,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,   190,    -1,
      -1,  4788,    -1,    -1,  4791,    -1,    -1,    -1,    -1,    -1,
      -1,  3126,   205,   206,    -1,    -1,   208,  4804,   210,    -1,
      -1,    -1,    -1,   215,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,   244,    -1,   247,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4850,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,   281,
      -1,    -1,    -1,   285,    -1,   288,   289,    -1,   291,    -1,
    3721,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   327,   328,   329,    -1,    -1,  3760,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   374,   375,    -1,    -1,    -1,    -1,    -1,  4975,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,   409,    -1,    -1,  5006,
      -1,    -1,   414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   447,    -1,    -1,   450,    -1,
     452,    -1,    -1,   455,    -1,  5052,    -1,    -1,    -1,    -1,
    5057,    -1,    -1,   465,   466,    -1,  5063,    -1,    -1,    -1,
      -1,    -1,    -1,   475,    -1,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,  3920,
     492,  5088,    -1,   496,    -1,    -1,    -1,   500,   500,    -1,
      -1,    -1,    -1,   505,   506,   507,    -1,    -1,    -1,   512,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3454,
      -1,    -1,    -1,    -1,    -1,    -1,   538,    -1,    -1,    -1,
      -1,    -1,    -1,   545,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5148,    -1,    -1,    -1,    -1,    -1,  5154,  5155,    -1,
      -1,    -1,  3993,   565,    -1,    -1,  3491,  3492,    -1,   572,
      -1,    -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,
      -1,    -1,  3517,    -1,    -1,    -1,    -1,    -1,    -1,   601,
      -1,  5198,  3527,   605,  3529,    -1,  3531,    -1,    -1,    -1,
      -1,   613,    -1,    -1,  5211,    -1,    -1,   619,   621,   622,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5230,   636,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   644,    -1,    -1,    -1,   649,    -1,    -1,    -1,
      -1,    -1,    -1,  5250,    -1,  5252,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5262,    -1,  5264,  5265,    -1,
      -1,    -1,    -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3606,    -1,    -1,    -1,    -1,    -1,    -1,  3976,  3977,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     712,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3643,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5337,    -1,  5339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3681,  5354,  5355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4218,  4219,    -1,
    4221,    -1,    -1,  5390,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5400,  5401,   807,    -1,    -1,    -1,   812,
      -1,    -1,    -1,    -1,    -1,    -1,  5413,  5414,    -1,    -1,
      -1,    -1,    -1,  5420,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    21,    -1,    -1,  5434,    -1,    26,
      27,    28,    -1,    -1,  5441,    -1,    -1,  5444,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5457,    -1,    -1,    -1,    -1,    -1,  3791,  5464,    -1,  5466,
      -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,  5475,    -1,
      -1,    -1,    -1,    -1,    -1,  5482,    -1,  5484,    -1,  5486,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,  4337,    -1,    -1,    -1,
      -1,    -1,  5509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
    5527,  5528,    -1,    -1,    -1,    -1,    -1,  5534,   125,    -1,
      -1,    -1,   129,    -1,    -1,  5542,    -1,  5544,  5545,    -1,
      -1,    -1,  5549,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,
      -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4431,  4432,  4433,  4434,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,  4347,
    4348,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4028,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,  4061,    -1,  4063,    -1,
      -1,  4066,  4067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,  4080,    -1,    -1,    -1,    -1,
    4085,    -1,    -1,  4088,    -1,    -1,  4091,  4092,    -1,    -1,
       7,    -1,  4603,    -1,    -1,    12,    -1,    14,    -1,    -1,
      17,    -1,    -1,    -1,  4615,  4616,    -1,    -1,  4113,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,    -1,   400,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    58,    -1,    -1,    61,    62,    63,    64,    -1,    -1,
      -1,    -1,    69,    -1,    71,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,  4173,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,    -1,
    4701,  4702,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4207,  4208,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,   482,    -1,    -1,    -1,    -1,
     137,   138,    -1,  4734,    -1,   492,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,  4745,   152,    -1,    -1,    -1,    -1,
      -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,   192,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,  4289,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,   565,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,  4857,    -1,    -1,    -1,
      -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,   636,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4888,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4393,  4394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,   343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4951,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,    -1,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
     387,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
       7,   748,   749,    -1,    -1,    12,   403,    14,    -1,    -1,
      17,    -1,    -1,  5004,    -1,    -1,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,  4889,  4890,  4891,    -1,    -1,    -1,    -1,    -1,  5040,
    5041,    58,    -1,   450,   451,   452,    63,    64,    -1,    -1,
     807,    -1,    69,   810,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,  4557,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,    -1,   482,    35,    36,    -1,    96,
      -1,    -1,  4577,    -1,  4579,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    62,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    72,    73,    -1,    -1,    -1,    -1,    -1,
     137,   138,  5123,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,   538,   539,   540,   541,   152,    -1,    -1,    97,   546,
      99,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,   169,    -1,    -1,    -1,   563,    -1,    -1,   566,
      -1,    -1,    -1,    -1,  5022,    -1,    -1,  5025,  5026,  5027,
    5028,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,
      -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4686,    -1,    -1,    -1,   602,    -1,    -1,   157,   158,
      -1,    -1,    -1,    -1,   163,    -1,    -1,   166,    -1,    -1,
    5211,    -1,    -1,    -1,    -1,    -1,   233,   176,   235,    -1,
      -1,    -1,    -1,  4718,    -1,   242,    -1,    -1,    -1,   636,
      -1,    -1,   639,    -1,  5235,  5236,    -1,    -1,    -1,   198,
      -1,   200,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,  5115,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5124,  5125,   285,    -1,
      -1,    -1,    -1,    -1,    -1,  5133,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4788,    -1,    -1,  4791,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,  4804,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,   725,   726,
      -1,    -1,   339,   282,    -1,    -1,   343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4850,   315,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
     387,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   450,   451,   452,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   407,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   418,
     419,    -1,   421,   422,   423,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4975,    -1,    -1,    -1,   443,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,    -1,   566,
      -1,   510,    -1,    -1,    -1,    -1,    -1,  5052,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   542,    -1,   602,    -1,   546,    -1,    -1,
      -1,    -1,    -1,  5088,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   562,    -1,    -1,   565,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,
      -1,    -1,   639,    -1,    -1,    -1,   585,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5148,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,    -1,    -1,
      -1,   630,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5198,    -1,    -1,    -1,   724,   725,   726,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5250,    -1,  5252,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     5,     6,  5400,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,  5441,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,  5457,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,  5534,
      -1,   143,    -1,    -1,   146,   147,   148,  5542,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    46,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,   801,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,   801,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
     636,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   807,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     816,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,   807,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   816,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,   699,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,   807,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,   816,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   812,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   811,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   811,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   811,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     811,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   808,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     807,   808,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     808,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   808,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,   619,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   807,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,   807,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,     5,     6,   801,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,   801,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,     5,     6,   801,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,     5,     6,   801,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,
       6,   801,     8,     9,    10,    11,    12,    13,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,   608,   609,   610,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,   608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
     608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,    -1,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,   522,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,   593,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,   386,    -1,    -1,   389,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,   647,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
     501,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
     371,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,   371,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      95,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,   172,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,
     422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,   451,
     452,   453,    -1,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,    -1,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,    -1,   449,    -1,   451,   452,   453,
      -1,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,    -1,   421,   422,   423,    -1,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,    -1,   449,    -1,   451,   452,   453,    -1,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,   151,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,   633,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,   633,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    34,    35,
      -1,    -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,
      -1,    -1,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,
      42,    -1,    44,    45,    -1,    -1,    62,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   123,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     142,    -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   187,    -1,   189,    -1,    -1,    -1,    -1,   194,    -1,
      -1,    -1,    -1,    -1,    -1,   187,    -1,   189,    -1,   205,
     206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   260,   247,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,
      -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   288,   289,    -1,   291,    -1,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   327,   328,   329,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   327,   328,   329,    -1,    -1,
     346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,
     356,    -1,    -1,    -1,   346,   347,   348,    -1,    -1,    -1,
      -1,   353,    -1,    -1,   356,    -1,    -1,    -1,   374,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,   374,   375,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   408,   409,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   408,   409,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   434,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     496,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   496,    -1,   512,    -1,   500,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,
      -1,    -1,   578,   579,   580,   581,    -1,    -1,    -1,    -1,
     572,    -1,    -1,   575,    -1,    -1,   578,   579,   580,   581,
      -1,    -1,   444,   445,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   621,   622,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,
     622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   649,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   710,   711,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   731,
      -1,   733,   734,   735,   736,   737,    -1,    -1,   740,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   750,    -1,
      -1,    -1,    -1,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   793
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   807,   819,   820,   823,   824,   825,
     826,   827,   829,   834,   837,   890,   891,   892,   893,   895,
     898,   920,   942,   949,   950,  1185,  1186,  1188,  1190,  1192,
    1195,  1197,  1198,  1199,  1200,  1201,  1203,  1204,  1239,  1240,
    1248,  1249,  1252,  1265,  1267,  1271,  1274,  1275,  1279,  1281,
    1286,  1290,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1307,
    1308,  1434,  1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,
    1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1491,
    1492,  1513,  1514,  1518,  1522,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1583,
    1584,  1586,  1590,  1599,  1609,  1613,  1615,  1616,  1686,  1688,
    1690,  1713,  1719,  1721,  1722,  1723,  1725,  1729,  1731,  1768,
    1774,  1775,  1776,  1777,  1813,  1820,  1821,  1823,  1824,    12,
     108,   127,   200,   243,   286,   419,   498,   563,   565,   599,
     611,   707,  1787,  1788,  1789,  1792,   282,   370,  1280,  1769,
     571,  1661,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    20,    23,    25,    26,    27,    28,    29,    30,    32,
      36,    40,    43,    44,    45,    47,    49,    50,    53,    56,
      57,    59,    60,    61,    63,    65,    66,    67,    68,    69,
      70,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    90,    91,    92,    93,
      94,    98,   103,   106,   110,   111,   112,   115,   120,   121,
     126,   127,   129,   135,   136,   137,   138,   139,   143,   146,
     147,   148,   152,   154,   155,   157,   158,   159,   162,   163,
     165,   166,   167,   168,   169,   170,   173,   174,   175,   176,
     177,   180,   181,   183,   184,   185,   186,   187,   190,   191,
     195,   196,   198,   202,   204,   205,   206,   207,   209,   211,
     215,   216,   218,   221,   222,   226,   227,   228,   229,   232,
     233,   234,   237,   242,   243,   244,   248,   252,   253,   255,
     256,   260,   262,   265,   266,   269,   272,   273,   279,   280,
     282,   284,   286,   287,   295,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   315,   316,   317,   319,   320,   321,   322,   324,
     325,   330,   331,   332,   333,   334,   335,   338,   339,   341,
     343,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     356,   357,   360,   361,   362,   363,   364,   368,   369,   373,
     375,   376,   378,   379,   380,   383,   393,   394,   395,   397,
     399,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   412,   414,   415,   416,   418,   420,   421,   422,   423,
     424,   426,   427,   428,   431,   435,   436,   438,   439,   442,
     443,   444,   445,   446,   448,   449,   451,   452,   453,   456,
     457,   458,   459,   460,   461,   462,   463,   465,   467,   468,
     470,   471,   472,   474,   477,   478,   479,   480,   482,   484,
     485,   486,   487,   488,   490,   491,   495,   496,   497,   498,
     502,   506,   508,   509,   510,   511,   513,   514,   515,   516,
     517,   523,   524,   525,   527,   530,   533,   535,   537,   538,
     539,   540,   541,   542,   545,   546,   549,   550,   551,   552,
     553,   554,   557,   558,   559,   560,   562,   563,   566,   567,
     568,   569,   572,   573,   575,   576,   577,   578,   584,   585,
     589,   590,   591,   594,   595,   597,   598,   600,   601,   604,
     607,   609,   611,   612,   618,   620,   623,   627,   629,   630,
     631,   632,   639,   640,   641,   643,   644,   645,   646,   649,
     652,   653,   654,   655,   656,   658,   667,   668,   669,   671,
     672,   673,   675,   678,   680,   687,   688,   691,   693,   695,
     696,   700,   701,   702,   703,   704,   705,   706,   707,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   745,   746,   747,   748,   749,   750,   751,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   914,  1658,  1667,  1677,  1678,  1679,  1681,  1682,  1685,
     315,   456,   836,   562,   565,  1715,  1715,   640,  1770,   108,
     199,   286,   389,   498,   518,   563,   568,   599,   603,   611,
     653,   707,  1163,  1487,  1784,  1788,  1789,  1790,  1791,  1792,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    96,    97,   102,   104,   107,   108,
     113,   114,   115,   120,   122,   125,   171,   178,   179,   188,
     195,   205,   207,   213,   219,   226,   230,   241,   245,   271,
     279,   290,   318,   323,   334,   338,   340,   344,   345,   346,
     347,   348,   355,   365,   366,   367,   371,   372,   396,   408,
     409,   411,   426,   454,   455,   474,   476,   483,   484,   490,
     543,   544,   551,   555,   556,   561,   571,   575,   576,   577,
     578,   587,   588,   589,   593,   596,   611,   615,   616,   617,
     619,   624,   626,   631,   632,   649,   664,   665,   670,   676,
     677,   679,   682,   683,   684,   685,   686,   690,   692,   694,
     745,   783,   799,   800,   801,   805,   807,   811,   815,   816,
    1136,  1300,  1318,  1319,  1322,  1323,  1324,  1326,  1330,  1333,
    1335,  1336,  1338,  1339,  1340,  1347,  1348,  1349,  1372,  1373,
    1374,  1637,  1639,  1642,  1643,  1644,  1645,  1646,  1647,  1650,
    1653,  1655,  1658,  1667,  1779,  1781,   108,   167,   200,   235,
     286,   419,   498,   518,   563,   586,   599,   611,   627,   653,
     707,  1487,  1667,  1280,   103,   535,   951,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     420,   424,   440,   448,   456,   492,   505,   506,   557,   586,
     608,   610,  1658,  1661,  1668,  1672,  1679,  1682,  1683,  1685,
    1735,  1736,  1656,  1667,   835,   565,   128,   220,   293,  1493,
     406,   658,    87,   427,  1614,   111,   235,   646,  1617,   243,
    1715,  1280,  1667,  1610,   486,   611,  1715,  1280,   128,   293,
    1494,  1517,   652,  1600,   521,   939,   943,   944,  1667,    13,
     424,  1735,  1770,  1667,    13,   140,   220,   526,   527,   529,
     530,   531,   548,  1309,  1310,  1311,  1782,    61,    62,   125,
     209,   282,   351,   403,   497,   584,   652,   653,   671,   707,
     811,  1138,  1658,  1670,  1678,  1679,  1681,  1682,  1684,  1687,
    1697,  1702,  1703,    35,    36,    61,    72,    97,    99,   109,
     158,   163,   166,   176,   198,   200,   209,   211,   282,   315,
     380,   407,   418,   419,   422,   423,   443,   497,   510,   546,
     565,   630,   753,   754,  1138,  1247,  1573,  1574,  1576,  1577,
    1578,  1698,   943,   204,   510,   584,  1247,   204,  1247,  1656,
    1667,   565,  1523,   406,   658,   243,  1720,  1667,   483,  1503,
    1507,   659,  1435,  1436,  1667,    32,    79,   154,   414,   436,
     477,   538,  1816,  1326,  1667,  1658,   400,  1055,   807,  1780,
    1781,   243,   282,  1322,  1297,  1298,  1300,  1434,     0,   156,
     821,   414,   104,   274,   611,  1212,  1661,  1667,  1671,  1673,
    1674,  1757,  1760,   126,   403,   611,  1241,  1242,  1243,  1244,
    1245,  1246,   194,   246,   285,  1312,  1313,  1465,   387,   602,
    1447,  1448,   276,   602,  1448,  1453,  1465,  1299,  1300,   130,
     608,    17,   195,  1587,  1588,  1656,   160,  1216,  1667,   160,
     914,   137,   152,   448,   479,  1724,   212,   914,  1671,  1667,
    1656,   563,   230,  1486,   212,   167,  1194,  1787,  1715,  1770,
    1287,  1288,  1656,   807,   921,   813,   185,   517,   582,  1484,
    1656,  1484,    19,  1771,   230,  1086,   235,   212,   455,  1671,
     235,   716,  1667,   563,  1086,  1086,   212,   235,   565,  1783,
    1783,  1787,  1792,   807,   807,   807,  1333,   807,   807,   807,
    1322,  1385,   807,   807,   807,   807,   807,   807,   807,   807,
    1321,  1321,   807,  1124,   807,   807,   807,   571,   807,   807,
     807,  1780,   807,   807,   807,   807,   807,   807,   807,   807,
     807,  1322,   807,   807,   807,  1383,  1384,  1653,  1667,   807,
     807,   807,   807,   807,   807,   807,   807,   807,  1322,  1124,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,  1124,   571,   807,   807,
     807,   571,   807,   807,   807,    37,   219,   571,   807,  1321,
    1124,  1124,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,  1333,  1333,  1333,   619,  1298,  1300,
    1322,   811,  1671,  1667,   812,    18,    19,    21,   386,   389,
     571,   647,  1320,  1327,  1328,  1666,  1667,   160,   161,   201,
     214,   254,   267,   294,   358,  1331,    33,   141,   249,   275,
     344,   365,   366,   441,   503,   504,   516,   721,   797,   798,
     799,   800,   801,   802,   803,   804,  1329,  1333,    71,   388,
     571,  1662,   259,   651,   807,   813,  1486,  1486,  1486,  1667,
     212,  1486,  1486,   716,  1667,  1486,   563,  1486,  1486,  1486,
     212,  1715,   830,  1591,   135,   418,  1734,   480,   480,   563,
     568,   611,   627,   653,   653,   384,   807,  1761,   562,   377,
    1761,    67,   510,  1761,   109,   627,  1761,   811,  1761,   377,
     582,   812,   380,    68,   432,   813,  1671,   197,   231,  1235,
    1667,  1661,  1822,  1322,   246,    85,   293,  1619,   194,  1714,
    1715,   197,   315,  1573,  1611,  1667,  1283,  1674,  1282,  1715,
     246,  1495,  1486,  1602,   315,   510,   753,  1601,  1603,   620,
     940,   500,   945,  1734,   377,   197,   377,   582,  1771,  1318,
    1311,   500,   653,   813,    35,   125,   160,   501,  1139,  1504,
    1671,   194,   582,  1504,   255,   432,  1705,  1706,  1708,  1710,
      13,   125,   364,  1672,  1675,  1743,   212,   811,  1671,    35,
     125,  1141,  1142,  1671,   813,   125,   584,  1693,  1701,  1703,
     812,  1694,  1504,   166,   275,   634,  1432,  1582,   807,   108,
     167,   200,   419,   565,   586,   611,   627,  1582,    13,  1572,
    1671,  1452,  1453,   197,   249,  1575,  1579,   198,    70,   542,
     194,   542,   562,    70,   542,    13,    43,    94,    98,   253,
     331,   395,   517,   559,  1524,  1525,  1526,   166,   222,   542,
    1452,  1582,   542,   287,   157,   421,   585,   234,   235,   261,
    1162,    73,   562,   542,   623,   945,   432,   636,  1253,  1254,
    1255,   446,   533,  1260,  1261,  1262,  1260,  1656,  1667,  1822,
    1715,   807,   812,  1435,   812,   807,  1437,    37,   219,  1638,
    1662,  1815,  1815,  1815,    96,  1814,  1815,  1815,   156,   813,
     807,    48,   156,  1300,   156,   197,   111,   156,   808,   808,
    1312,   808,   810,  1667,  1321,   807,   138,   228,   372,  1746,
    1750,  1751,  1758,   811,     7,   125,   138,   144,   228,   343,
    1745,  1746,  1750,  1751,  1752,  1753,  1754,  1755,   464,   812,
    1763,   160,   160,   160,   812,   502,   608,  1314,   146,   391,
     811,  1463,  1464,  1466,  1671,   249,  1313,  1465,  1312,    48,
      13,   140,  1778,  1452,   290,   372,   593,  1454,  1455,  1639,
    1667,  1778,  1452,  1447,  1448,  1453,   231,   293,   428,  1520,
    1521,  1517,   195,  1587,   160,   194,  1296,  1491,  1492,  1513,
    1518,  1585,  1589,  1638,  1667,   332,   569,   595,  1187,  1674,
    1191,  1667,  1667,   746,   784,  1671,  1667,  1189,   383,     7,
      26,    84,   144,   237,   322,   369,   450,   629,   748,  1022,
    1023,  1036,  1037,  1038,  1039,  1045,  1047,  1048,  1049,  1574,
       7,    12,    14,    17,    27,    28,    58,    63,    64,    69,
      77,    83,    84,    87,    96,   111,   125,   129,   137,   138,
     144,   152,   158,   169,   192,   233,   235,   242,   262,   285,
     321,   339,   343,   381,   387,   394,   403,   435,   450,   451,
     452,   482,   538,   539,   540,   541,   546,   563,   566,   589,
     602,   636,   639,   724,   725,   726,   748,   749,  1038,  1087,
    1090,  1092,  1093,  1145,  1217,  1218,  1220,  1221,  1223,  1225,
    1226,  1227,  1228,  1230,  1232,  1667,   171,  1667,   914,   532,
    1793,  1794,  1193,  1484,   249,   812,   235,   263,   400,  1160,
    1293,  1294,  1322,  1381,  1382,  1667,   839,   838,   176,   428,
     812,  1266,    59,   176,   180,   194,   330,   428,  1276,  1277,
    1278,    57,   368,   368,   447,  1772,  1329,  1667,  1667,  1667,
     518,   193,  1667,   708,     7,  1016,  1667,  1674,  1747,  1759,
    1743,  1667,  1667,  1086,    11,   167,   200,   419,   586,   901,
    1786,  1794,  1800,  1802,  1803,  1808,   200,   901,  1785,  1794,
    1800,  1803,  1808,  1783,  1322,  1322,    13,   140,  1379,  1430,
    1379,  1379,  1379,   633,  1387,  1322,  1322,  1382,  1382,  1322,
    1322,   140,  1379,  1430,   808,   372,   808,   808,  1322,  1322,
    1322,  1322,  1653,   116,   117,   118,   119,   120,   223,   224,
     225,   226,   334,   336,   337,   338,   345,   426,   489,   490,
     631,   648,   649,  1425,  1426,  1322,  1381,   112,   115,   575,
     578,  1427,   140,  1375,  1322,  1322,  1322,  1322,  1425,  1322,
    1382,  1384,    10,   812,   813,   140,  1379,  1322,  1322,   140,
    1379,  1322,  1322,  1382,  1382,  1382,  1322,  1382,  1326,  1322,
    1322,  1322,  1322,  1322,  1322,   808,  1322,  1379,  1379,  1322,
    1322,   140,  1379,  1322,  1426,  1426,  1322,    46,   268,   583,
    1322,  1322,   808,  1654,  1655,  1667,  1379,  1379,  1322,  1322,
    1322,  1379,  1379,  1382,   808,   808,  1322,  1322,  1322,  1322,
    1322,   811,  1351,  1352,  1639,  1646,  1667,   808,   808,   808,
    1333,   140,  1379,  1312,   808,   812,   209,   282,   497,  1699,
     501,  1322,  1319,  1666,  1667,  1322,  1322,  1322,   179,   371,
     588,   604,  1329,    13,    20,  1324,  1332,  1326,  1326,   807,
    1780,  1333,  1326,  1326,  1326,  1326,   275,   666,  1325,  1326,
    1326,   245,  1326,   245,  1326,  1326,  1326,  1326,  1326,    33,
     249,   275,   441,  1671,  1333,  1662,  1662,  1322,  1344,  1345,
    1346,   801,  1667,  1667,   914,  1667,   377,  1667,   914,  1671,
     708,  1045,  1047,  1488,  1489,  1490,   914,  1667,  1674,  1742,
    1484,  1743,  1667,  1486,   614,   831,    35,   158,   162,   202,
     222,   287,   382,   418,   442,   467,   511,   542,  1592,  1596,
    1597,  1715,    86,   811,   952,   953,   954,   955,  1667,  1732,
     562,  1667,  1762,  1674,  1671,   200,   419,   565,  1733,  1742,
    1736,    21,  1428,  1429,   186,   362,  1667,  1726,  1667,  1822,
    1495,   515,   812,    50,   282,  1618,    30,  1656,  1716,  1717,
    1484,   811,   828,  1661,   287,   812,   582,  1284,  1285,  1656,
    1484,  1656,  1667,  1606,  1604,  1605,   812,  1662,    56,    66,
      76,    90,    91,    92,   106,   333,   350,   488,   550,   567,
     946,   948,   812,  1730,  1674,  1742,  1733,   486,  1773,  1772,
     197,  1303,  1304,  1465,    13,   364,  1743,  1667,    71,  1144,
    1322,  1674,   732,   571,  1664,   273,   379,   642,   812,  1709,
     812,  1707,   657,  1689,   811,   812,  1667,   209,   282,   497,
     652,   671,  1700,  1504,  1667,  1705,  1694,  1504,  1695,  1696,
    1697,  1702,    13,    35,   125,   377,   483,   708,  1322,  1712,
     249,  1580,  1662,  1322,   801,  1086,   914,   914,   914,  1656,
     914,  1674,  1656,   287,   349,   542,  1582,  1667,   914,  1582,
    1674,  1575,   914,  1582,   252,   560,   181,   194,  1527,   812,
    1580,  1575,   194,   889,  1575,  1579,  1579,  1575,  1582,  1582,
     379,   642,    88,   812,  1250,   812,   889,   125,  1322,  1508,
    1509,  1510,  1507,  1436,  1438,  1667,    21,   812,   378,  1818,
     558,  1819,   645,   258,   470,  1817,  1667,  1322,   277,   280,
     429,  1056,  1057,  1674,   136,   808,   156,   822,   808,   728,
      48,   786,   455,  1202,  1202,   787,   788,   790,  1671,  1758,
     653,   728,  1758,   636,  1758,   455,   727,  1744,   455,  1744,
    1744,   455,  1744,  1744,    65,   256,   364,   534,   552,   643,
    1739,  1740,  1674,  1757,   636,  1209,  1659,  1661,  1659,  1659,
    1243,   666,   667,   669,  1315,  1316,  1317,   571,  1663,  1663,
    1671,   812,   502,  1322,  1449,  1651,  1300,  1301,   376,   812,
    1300,  1301,  1452,  1452,   197,  1485,  1657,  1667,  1520,  1235,
    1671,    87,   432,  1081,  1082,  1085,  1092,  1093,  1094,  1145,
     915,  1667,  1667,   194,   368,   315,     7,   915,   807,   110,
    1033,  1504,  1505,  1505,  1033,  1505,  1505,   582,  1505,   812,
    1089,   158,    74,    89,   199,   400,   518,  1102,  1104,  1160,
    1234,  1505,    64,    89,   235,  1234,   400,  1505,  1505,  1234,
    1505,   400,   400,  1505,  1505,  1505,  1505,   582,   136,  1505,
     261,   400,   563,    64,    89,   193,   400,   417,  1160,  1234,
     261,  1505,   400,   400,   563,   136,  1505,  1505,  1505,  1505,
    1505,  1234,   400,    48,  1505,  1505,   400,    21,    74,   160,
     582,  1160,  1238,   400,   400,  1505,   584,  1505,  1505,  1505,
     139,   331,  1505,  1505,   400,  1505,   618,   618,  1505,  1505,
    1505,  1090,    71,  1138,   449,  1055,  1219,   812,   812,   500,
     709,  1828,  1196,   491,   627,  1794,   144,   608,  1273,   125,
    1289,  1667,  1288,  1656,   807,   807,  1294,   808,   812,   457,
     458,   459,   460,   461,   462,   463,   840,   841,   232,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   316,
     317,   444,   445,   710,   711,   731,   733,   734,   735,   736,
     737,   740,   750,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   793,   853,   854,   855,   856,   857,   858,   859,   860,
     861,   862,   863,   864,   865,   866,   867,   868,   869,   870,
     871,   872,   873,   874,   875,   876,   877,   878,   879,   886,
     887,   888,  1656,   609,  1277,    57,   447,   171,   894,   377,
       7,   716,   111,   377,  1086,  1033,   613,  1017,     7,    19,
    1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,   125,   812,
     897,   591,   591,   614,  1175,  1176,  1656,   200,  1086,  1086,
    1086,  1086,  1086,  1794,   812,   808,  1379,   808,  1322,   808,
     808,   808,  1322,   150,   633,  1386,    21,    25,   808,   614,
     808,   808,   808,   614,   812,  1382,   808,   801,   808,   812,
     812,   808,   808,   808,   197,   812,   808,   812,  1382,   808,
     812,   812,   812,   800,   812,   808,   808,   807,  1653,  1667,
    1379,   808,   808,   808,  1379,   808,   812,   808,   808,   808,
     808,   812,   808,   249,   808,   812,   812,   808,   812,   812,
     808,   808,   808,   812,   197,   812,  1379,   808,   808,   812,
     812,   812,   808,   197,  1322,   197,  1322,   197,  1322,   197,
     808,   812,   808,   808,   808,   808,   812,    21,   808,   812,
     808,   812,   808,   808,   689,  1357,  1357,   808,   812,  1350,
     808,  1350,   812,  1671,   808,  1357,  1357,  1357,   812,  1379,
     808,  1382,   813,   813,   813,  1671,  1704,  1322,   817,   179,
     371,   588,   604,  1780,    19,  1322,   165,  1326,   807,  1322,
    1322,  1326,   807,  1780,  1333,  1326,  1320,   808,   812,   807,
     813,   813,  1656,  1488,  1486,  1089,  1024,  1025,  1026,  1045,
     812,    52,   469,  1236,   192,  1834,  1484,   811,   832,   833,
     287,   287,   287,   287,   287,   287,   812,  1484,  1598,   115,
     575,   578,   811,   947,   957,  1374,  1644,  1653,  1671,   812,
     160,   377,   808,   812,   582,   801,  1667,  1676,  1741,   636,
    1737,  1667,   160,   186,   201,   214,   266,   267,   294,   362,
     416,  1727,  1728,  1431,  1432,  1656,  1661,  1661,  1291,  1292,
    1656,   236,  1429,   812,  1671,    31,   582,  1612,  1674,  1674,
     812,   582,   176,   428,   612,  1268,  1269,  1270,   400,  1396,
    1397,   582,  1608,    13,  1607,  1607,  1603,   812,   160,   210,
     377,   197,  1741,  1667,   145,   699,   719,   807,   816,  1305,
    1306,  1388,  1390,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1656,  1780,  1431,  1303,   582,   582,   582,    35,  1143,  1671,
     582,  1504,  1202,  1202,   432,   453,   495,  1711,  1708,  1706,
    1743,  1671,  1675,   194,   813,   813,   813,   813,   813,  1703,
    1322,  1712,   812,  1701,  1661,   197,  1581,   808,  1667,   614,
    1582,   427,  1452,  1526,  1581,  1582,    60,  1582,  1656,  1656,
    1582,   513,  1255,   607,  1263,  1262,   808,   812,   808,   812,
    1780,  1638,   404,   194,   813,   808,    73,   807,    73,   807,
     401,  1059,   216,   263,   814,  1505,   403,   732,  1664,  1664,
    1744,  1744,   789,   789,  1749,  1752,    13,   364,  1743,   403,
     144,  1671,  1749,  1664,   103,  1664,  1664,   571,   571,   571,
      19,  1738,   319,   320,   324,   325,  1210,  1211,     5,   403,
     738,   739,  1206,  1207,  1208,  1485,   668,  1316,  1138,  1140,
    1464,   341,    22,   131,  1450,  1451,   812,  1455,  1455,  1485,
    1656,  1667,   197,   812,   813,  1519,  1306,   122,   188,   219,
     290,   372,   593,  1458,  1461,  1462,   379,  1082,    84,    77,
      93,   265,   342,   368,   430,   532,   917,   919,    60,   477,
     263,   597,  1035,   108,   221,   393,   403,   410,   514,   611,
     899,   900,  1661,  1021,  1022,   219,   290,   372,   593,  1050,
    1460,  1461,  1658,  1661,  1021,  1050,  1050,  1667,  1661,  1835,
    1023,  1505,  1183,  1667,  1160,  1161,  1280,  1161,    64,   193,
     417,   603,  1103,  1159,  1174,  1183,  1667,   807,  1667,   125,
    1231,  1667,  1667,  1667,  1667,  1667,  1280,   122,   188,   290,
     372,   593,  1459,  1459,  1667,   122,   188,   219,   290,   372,
     593,  1457,    13,  1224,  1424,  1667,  1280,  1661,  1661,  1661,
    1661,  1138,  1505,  1457,  1224,  1667,  1667,   263,  1424,   263,
    1667,  1667,  1671,  1667,  1224,  1505,   186,   266,   368,  1096,
    1459,   125,  1233,  1667,  1459,  1459,  1667,  1280,  1445,  1446,
    1654,   125,  1091,  1457,  1661,  1280,  1667,  1667,  1656,  1280,
    1280,    80,    82,   125,   148,   187,   439,  1095,  1091,  1091,
     125,  1457,  1667,  1457,  1224,   807,   371,  1671,  1835,  1835,
    1505,  1505,   402,     7,   144,  1087,  1227,  1228,  1221,  1225,
    1228,   717,   718,  1034,  1505,   706,  1832,   377,   909,  1213,
     127,   248,  1656,   672,   672,  1224,   417,  1420,  1421,  1422,
    1667,   249,  1322,   160,   160,   160,   160,   160,   160,   160,
     812,   889,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   812,   889,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,  1083,  1084,  1085,  1656,  1035,   708,   641,  1656,  1460,
     286,    77,   177,   184,   363,  1018,  1019,  1020,  1036,  1037,
    1039,  1040,  1043,  1044,  1045,  1046,  1047,  1048,  1049,  1033,
    1749,  1748,   791,  1756,   653,  1747,  1763,  1505,    47,   216,
     485,  1178,  1178,   377,    21,   231,   275,   455,   807,  1051,
    1052,  1053,  1054,  1055,  1088,  1090,  1298,  1300,  1500,  1621,
    1086,   914,   914,  1667,   914,   914,   245,  1322,   808,  1356,
    1357,  1356,  1356,  1356,   574,  1322,  1322,   154,    35,    62,
     112,   115,   123,   142,   189,   205,   260,   279,   346,   347,
     348,   353,   356,   408,   409,   434,   508,   578,   606,   649,
    1113,  1117,  1380,   282,   578,  1139,  1139,  1380,   808,  1356,
     808,   245,   245,  1322,  1322,  1322,   387,  1377,  1322,  1322,
    1322,  1322,  1322,  1326,   808,  1356,   808,  1356,  1322,  1322,
    1322,  1322,  1322,  1322,  1382,  1356,  1356,   245,  1322,  1322,
    1322,   808,  1356,  1322,  1322,  1322,  1322,   197,  1322,   197,
    1322,   197,  1322,  1322,  1356,  1356,  1322,    35,    62,  1457,
    1379,  1356,   807,  1358,  1359,  1360,  1667,   231,   693,  1354,
    1351,   808,  1354,   808,  1333,  1357,   596,  1637,   808,  1356,
     808,   813,  1324,   808,   812,  1333,  1333,  1425,  1425,    19,
    1322,   165,  1346,  1381,   801,  1667,  1667,  1229,  1230,  1232,
    1460,  1490,  1089,  1674,  1236,  1671,   812,   889,  1597,  1593,
    1671,   955,   958,   959,   954,   373,   484,   956,  1733,  1667,
    1742,   813,   813,   582,   654,  1431,   807,  1452,  1396,   812,
    1293,  1294,  1663,   293,   432,   642,  1718,  1717,  1322,  1661,
     582,  1285,  1656,  1270,   807,   500,   619,   620,   807,  1496,
    1497,  1499,  1500,  1501,  1460,   889,   889,   948,   947,   384,
    1733,  1742,   197,   807,  1780,  1306,  1390,  1399,  1400,  1401,
    1402,   730,   812,   100,   238,   258,   271,   354,   476,   548,
    1391,  1392,  1393,  1396,  1429,   212,  1442,  1431,  1743,  1743,
    1743,   732,  1664,  1744,  1744,    78,   594,   432,  1458,  1691,
    1692,  1504,  1696,  1459,  1452,   163,   630,  1742,   372,  1452,
    1659,  1575,  1575,   523,   524,   525,   888,  1264,   611,  1256,
    1510,  1667,   812,   335,   156,   807,  1326,   807,  1326,  1458,
     554,  1060,   807,    12,  1058,  1457,  1663,   403,   500,     7,
    1758,    21,    48,   343,  1744,   403,  1744,  1744,  1739,  1457,
    1457,  1457,  1457,  1211,   285,   605,   174,   464,   703,   704,
     696,  1458,  1458,    77,   747,  1205,  1208,  1139,    73,  1622,
    1651,   614,  1429,   813,  1306,  1657,   801,  1667,   500,  1505,
    1505,  1661,   532,   532,   532,   532,   532,   491,  1667,   377,
    1661,  1030,  1031,  1032,  1036,  1045,  1047,  1661,  1661,  1661,
    1661,  1457,  1661,  1661,   808,   812,  1671,  1183,   401,   807,
    1183,   807,   263,   263,  1161,   366,  1105,  1106,  1107,  1174,
     807,   614,   591,  1098,  1099,  1100,  1102,  1667,    34,    35,
      40,    42,    44,    45,    62,   112,   115,   123,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   327,
     328,   329,   346,   347,   348,   353,   356,   374,   375,   408,
     409,   496,   500,   512,   572,   575,   578,   579,   580,   581,
     621,   622,   649,  1108,  1111,  1112,  1113,  1114,  1115,  1116,
    1117,  1119,  1107,  1107,   655,   656,  1177,   144,   500,  1224,
    1667,  1276,   812,  1458,   125,  1139,  1661,   563,  1667,  1236,
     636,   563,  1661,  1108,  1224,   812,  1450,  1224,   582,   582,
    1424,  1224,  1598,  1143,  1139,  1024,   372,  1829,  1830,  1505,
     137,   152,  1833,    81,   487,   450,  1214,  1437,   377,   377,
     808,   808,   812,  1289,   807,   842,   842,   807,   847,   847,
     807,   850,   850,   807,   845,   841,   807,  1659,  1457,  1659,
     371,   882,  1673,  1457,   377,   741,   742,   883,  1458,   282,
     571,   742,   884,  1458,   879,  1457,  1659,  1659,  1659,  1659,
    1457,  1457,  1457,  1457,  1457,  1659,  1659,  1659,  1659,  1659,
    1659,  1457,  1659,   371,   885,  1659,  1659,  1659,  1457,  1645,
    1661,  1457,  1659,  1459,  1085,   807,   438,   598,  1027,  1028,
    1029,  1036,  1041,  1042,  1043,  1044,  1045,  1047,  1460,  1671,
     807,   896,   212,  1505,  1505,  1505,  1505,  1089,  1024,    19,
     785,  1743,  1209,   611,   708,  1827,  1656,  1500,  1656,   275,
    1098,  1053,  1052,  1089,  1312,  1054,  1667,   902,   807,   472,
    1809,     9,    31,  1014,  1322,   808,  1356,  1322,   574,   807,
    1128,  1129,  1129,   807,  1123,   807,  1121,  1122,  1128,   413,
    1118,  1120,  1128,    62,   247,  1123,   247,  1129,   720,  1334,
      21,   751,   808,   808,   808,  1356,  1356,  1322,  1322,   808,
     808,   812,   808,    48,   494,  1376,   812,   812,   808,   812,
     808,   249,  1341,  1342,  1356,  1356,   808,   808,   808,   808,
     812,   808,   808,  1322,   808,   194,   808,   808,   812,  1356,
     808,   812,   812,   808,  1322,   808,  1322,   808,  1322,   808,
     808,   808,   807,  1150,  1150,   812,   808,  1359,  1361,  1362,
     687,   687,  1357,   812,  1353,  1354,  1357,  1354,   808,   743,
    1337,  1356,  1667,  1382,   808,  1324,   808,   812,  1333,   808,
    1232,  1230,  1026,   833,   194,   636,  1594,   160,   812,  1741,
     636,  1765,   801,   801,  1667,  1742,   384,  1452,  1509,   500,
    1496,  1497,  1292,  1656,  1294,   231,  1295,  1620,  1621,   642,
     282,  1674,  1423,  1424,  1515,  1516,  1654,   808,  1498,  1649,
    1650,  1654,  1667,   807,  1502,  1506,   160,   197,  1741,  1742,
    1322,  1429,   812,   808,   808,   808,   808,   808,  1388,  1389,
    1390,  1398,  1388,   258,   258,   390,  1395,   238,   271,   476,
    1394,  1395,  1398,  1388,  1388,  1429,  1437,    48,   217,  1433,
    1442,  1202,  1202,  1089,  1712,   889,  1431,  1582,   160,   160,
     812,   160,   403,  1257,  1457,  1062,  1667,   808,  1062,   808,
      48,   807,  1064,  1326,   160,   807,   228,   792,  1758,   219,
    1661,  1665,   732,  1664,  1758,   125,   245,   360,   103,   125,
    1458,   245,  1662,  1662,   153,   164,   385,   570,  1623,  1624,
     278,  1625,  1306,  1396,  1667,  1431,   813,  1519,  1515,  1091,
    1661,   111,   111,   127,   248,   368,   162,  1089,   900,   807,
    1458,   400,  1065,  1066,   807,  1322,  1183,   729,   807,   807,
    1180,  1181,  1182,  1667,  1178,  1178,   808,   812,  1108,  1128,
    1128,  1129,    23,    35,    49,   600,   625,  1128,  1138,  1146,
    1147,  1148,  1123,   807,  1148,    62,   621,  1114,  1148,  1148,
      62,   622,   622,   625,   807,  1129,  1123,  1123,  1148,  1128,
    1129,   440,  1101,  1153,    27,    71,    75,    77,   125,   366,
     371,   377,   417,   496,   546,   603,   705,   748,   749,  1104,
    1107,  1131,  1132,  1133,  1144,  1152,  1177,  1329,    35,  1128,
    1149,  1128,  1128,  1129,   807,  1122,  1130,  1121,   125,   125,
    1177,  1108,  1667,  1144,  1144,   565,     9,   186,  1237,  1446,
    1667,  1667,   246,  1268,   808,   799,  1089,   372,   799,  1831,
    1834,   366,   415,    25,   168,   903,   582,   137,   152,   905,
    1795,  1424,  1424,  1421,   808,   843,   844,  1667,   808,   848,
     849,  1667,  1676,   808,   851,   852,  1659,  1660,   807,   808,
     846,   880,   881,  1457,  1181,  1505,  1505,  1089,   896,   383,
    1181,   352,   713,   714,   715,  1667,  1661,  1050,  1050,  1458,
    1020,  1749,   228,  1750,  1751,  1753,  1206,  1828,   807,  1656,
     808,  1090,   472,   377,  1804,   123,   247,   434,   549,  1097,
     807,   130,   241,   608,  1015,  1425,  1322,   122,   290,   372,
     593,  1148,   372,   372,   808,  1380,   245,  1648,  1425,  1425,
    1322,  1378,  1651,  1638,   808,  1322,  1322,  1382,    44,   354,
     808,   636,  1343,  1322,  1425,  1322,  1322,  1322,  1322,   808,
     808,   808,  1458,   808,   808,  1457,  1356,   808,   400,  1363,
    1322,  1357,  1357,   197,  1355,  1380,   125,   162,   371,  1409,
    1411,  1412,  1413,   808,  1382,  1595,   432,    56,    66,    76,
      90,    91,    92,   106,   333,   350,   471,   488,   550,   567,
     960,   959,   582,   210,   636,  1764,   808,  1515,    21,  1511,
     377,  1512,  1295,   269,   246,   808,   812,  1504,  1499,  1500,
     808,   812,   813,  1508,   812,   947,  1742,   197,   812,  1437,
    1388,   817,   258,  1395,  1395,   258,   258,   377,   614,   377,
     614,   192,   231,   613,  1415,  1416,  1417,  1418,  1419,  1322,
    1443,  1652,  1322,   697,  1439,  1433,  1744,  1744,  1458,  1661,
    1661,   888,  1661,   160,   126,  1258,   808,   812,   808,  1057,
    1065,   808,  1458,  1061,  1062,    48,    21,  1749,   403,  1749,
    1458,   125,   722,   125,  1458,    48,    48,   153,    48,  1624,
     536,   570,  1626,  1627,  1431,  1431,  1431,   477,  1032,  1181,
    1667,   808,   812,  1181,   808,   807,  1181,  1322,   808,   812,
     807,  1450,  1099,  1101,    35,    23,   600,  1138,    35,  1148,
    1139,  1184,  1638,  1148,   625,  1184,  1148,   508,   606,   650,
    1125,  1126,  1127,  1656,  1237,  1143,   125,   148,   187,  1134,
    1661,   115,   575,   578,   799,   800,   807,  1136,  1137,  1640,
    1641,  1642,  1643,   608,   125,   125,   139,   331,  1135,   263,
    1460,  1505,  1505,  1103,    71,  1133,   203,  1109,   263,   371,
     723,  1149,  1148,  1149,  1125,   372,  1125,  1125,   807,  1641,
    1237,  1656,  1667,   807,   372,  1830,   372,   415,  1322,  1322,
     377,   909,   914,   377,    77,   910,    21,   636,  1272,   808,
     812,   808,   812,   813,   808,   812,   844,   808,   812,   808,
     812,   808,  1050,  1050,  1029,   807,   808,  1659,  1659,  1659,
    1659,   636,  1205,  1832,  1181,   808,  1051,  1097,   487,   922,
     923,   924,  1667,   515,  1810,   377,   808,   808,   808,   808,
     808,   808,   812,  1334,  1662,   808,   808,   808,   812,  1356,
     808,   812,   808,   341,   265,   427,   808,   808,   808,   808,
     808,   808,  1151,   812,    48,   387,  1364,   186,   266,  1354,
    1640,   808,  1412,  1413,   377,   808,   175,   285,  1742,   384,
     210,    21,  1767,  1431,  1511,  1667,  1512,   147,   565,  1516,
    1510,  1499,  1500,  1649,  1667,   808,  1506,  1742,  1637,   808,
     258,   258,  1322,   807,  1322,   807,  1160,  1160,  1416,   638,
     812,  1444,  1359,  1440,  1441,  1439,  1661,   160,   405,  1259,
    1667,   216,   263,   808,   808,  1661,  1665,   120,   120,  1638,
    1638,    48,  1638,    48,    48,  1627,  1447,  1447,   377,   808,
     619,  1067,  1066,   808,  1179,  1180,   808,   808,    77,   262,
     748,   749,  1170,  1171,  1172,  1173,  1176,  1177,  1182,   372,
    1139,  1149,   808,   812,   808,  1127,   807,  1154,  1645,  1645,
    1322,  1136,   620,  1835,  1835,  1143,    15,    21,  1322,  1222,
    1223,  1065,  1425,   510,  1661,   143,  1215,  1500,  1796,   372,
     844,   849,  1667,   852,   812,   807,   881,   636,  1164,  1165,
    1166,  1173,   899,  1167,  1168,  1169,  1173,   228,  1671,  1833,
     808,   515,   903,   808,   812,  1111,  1661,   239,   249,   392,
     925,   926,   927,   928,  1656,   372,   808,    21,  1651,  1322,
     341,   173,   808,  1457,  1443,    48,   429,   481,   681,  1365,
    1371,  1357,   377,   162,   698,  1764,   384,  1674,  1452,  1512,
    1437,   263,  1656,    73,  1405,  1423,  1423,   194,  1414,  1414,
    1652,    21,   812,  1661,   160,  1251,   807,  1058,   111,   464,
    1825,  1826,  1638,  1638,  1638,   276,  1456,  1456,   162,  1164,
     249,   272,    77,   111,   235,   321,   339,   363,   563,  1078,
    1079,  1080,  1574,  1167,   808,   812,  1170,  1450,  1661,  1505,
    1505,  1505,  1172,   808,  1148,  1638,  1148,  1155,  1667,   318,
    1156,   808,   807,   808,   808,   904,   911,   912,   636,  1797,
     673,   844,   844,   397,  1229,  1166,   808,  1229,  1169,    48,
    1170,  1661,   908,   909,  1805,   924,  1144,   808,   812,  1667,
     194,   808,   112,   808,   808,  1449,    33,   103,   245,   696,
    1366,  1367,  1368,  1639,  1645,  1767,   636,  1766,   608,  1396,
     807,   808,   808,   808,   212,   258,   387,   807,   807,  1360,
    1441,  1661,   889,  1326,   807,   136,   368,   534,  1455,   807,
    1069,  1071,   573,  1505,   136,   136,  1505,  1505,  1505,  1505,
     807,  1075,  1080,   158,  1153,  1180,  1457,  1835,  1835,  1450,
     808,   812,   198,   399,   509,   377,  1157,  1322,   537,   906,
      54,    68,   182,   230,   257,   270,   380,   473,   913,   964,
     966,   967,   968,   970,   971,   972,   973,   974,   975,   977,
     985,   986,   989,  1000,  1003,  1005,  1006,  1658,  1669,  1680,
    1681,  1682,  1685,    53,    64,   282,   808,   812,  1658,  1460,
    1229,   905,   472,  1811,   927,  1111,   149,  1123,   245,   696,
    1367,  1369,  1639,  1645,   483,  1322,   691,   678,  1370,   691,
     691,   653,  1515,  1140,   700,  1406,  1407,  1667,  1429,    48,
      48,  1420,  1422,   808,  1062,  1505,   534,   807,  1070,  1071,
    1072,   326,  1068,  1071,  1661,  1505,  1505,  1460,  1460,  1458,
    1667,   554,  1076,  1077,  1505,  1667,   130,   608,   808,  1322,
     155,   907,   987,   990,  1667,   197,   362,   978,   965,  1669,
    1669,  1667,   969,   824,   292,   454,   635,  1009,    32,  1007,
     814,    64,   384,    64,   844,   910,  1111,   916,  1144,   483,
     808,  1322,   680,    19,   680,   680,  1425,   103,   212,   368,
     695,    13,   125,   364,  1743,   481,  1628,   702,   808,   812,
     194,  1111,   808,   808,   553,  1063,   808,  1663,   808,   812,
     326,  1073,  1074,  1326,  1661,  1661,  1671,   808,   812,  1671,
      52,   368,   469,   500,  1158,  1158,   547,   628,  1110,  1322,
    1322,   633,   992,   996,   197,  1667,   980,   981,  1322,   930,
     963,   964,   966,   968,   970,   972,   973,   974,   975,   977,
     985,  1000,  1003,  1005,   930,  1010,  1008,  1001,  1004,   384,
     384,   808,   143,  1144,   134,   917,   918,  1329,  1812,   191,
     412,  1798,  1799,  1425,  1369,   691,   483,   688,  1689,   228,
    1622,  1637,  1407,   701,  1144,  1458,  1063,  1826,  1071,   808,
     812,  1078,  1077,     6,   125,   371,   377,   377,  1131,   988,
     997,   150,   996,   999,   246,   154,  1322,   154,   963,   810,
     607,  1322,   931,  1009,  1007,   911,  1806,   134,   963,  1671,
    1801,   680,    48,  1625,  1405,   171,  1408,  1074,   608,   130,
     633,   991,   993,  1322,   930,   154,   976,   230,   982,   292,
     810,  1012,  1011,   124,   929,   932,  1002,  1669,  1002,   916,
     963,  1638,   231,  1629,   702,  1158,  1158,   994,   993,   999,
     998,    54,   979,  1667,   574,  1322,   143,    95,   172,   935,
     961,  1667,   154,   963,   810,  1807,   372,   807,  1631,  1637,
    1322,   154,   574,   812,   930,  1013,   930,   215,   812,  1111,
      86,   105,   810,   963,   278,   481,  1630,   808,   811,  1632,
    1633,  1654,   500,  1634,  1409,  1410,  1412,   995,    54,   930,
    1667,   983,   154,   154,   194,  1667,  1144,   194,   194,  1671,
     808,   812,  1635,  1636,  1654,  1411,  1413,   574,   150,   151,
     984,   454,   635,   933,   125,   962,   938,   939,  1457,   934,
    1633,   812,  1504,   377,   930,   930,   980,   520,   522,   936,
     937,   938,   941,  1329,  1667,  1322,  1296,  1636,  1510,   812,
     963,   196,   937
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   818,   819,   819,   819,   819,   819,   819,   820,   821,
     820,   820,   822,   822,   823,   823,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   825,   826,   826,   827,   828,   828,   830,   829,   831,
     831,   832,   832,   833,   835,   834,   836,   836,   838,   837,
     839,   837,   840,   840,   841,   841,   841,   841,   841,   841,
     841,   842,   842,   843,   843,   844,   845,   845,   846,   846,
     847,   847,   848,   848,   849,   850,   850,   851,   851,   852,
     853,   853,   854,   854,   855,   855,   856,   856,   857,   857,
     858,   858,   859,   859,   860,   860,   861,   861,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   867,   867,
     868,   868,   869,   869,   870,   870,   871,   871,   872,   872,
     873,   873,   874,   874,   875,   875,   876,   876,   877,   877,
     878,   878,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   880,   880,   880,   881,
     882,   882,   883,   883,   883,   884,   884,   884,   885,   885,
     886,   886,   887,   887,   888,   888,   888,   888,   889,   889,
     890,   890,   890,   890,   891,   892,   894,   893,   893,   893,
     893,   893,   893,   893,   895,   895,   896,   896,   896,   896,
     896,   897,   897,   898,   898,   898,   899,   899,   900,   900,
     900,   900,   900,   900,   900,   902,   901,   904,   903,   903,
     905,   905,   905,   905,   906,   906,   907,   907,   908,   908,
     909,   909,   910,   910,   912,   911,   913,   913,   913,   913,
     913,   913,   913,   913,   913,   913,   913,   913,   913,   914,
     914,   915,   915,   916,   916,   917,   917,   917,   917,   917,
     917,   917,   918,   918,   918,   919,   919,   920,   921,   921,
     922,   922,   923,   923,   924,   925,   925,   926,   926,   927,
     928,   928,   928,   928,   929,   929,   930,   930,   931,   931,
     932,   932,   933,   932,   934,   932,   935,   935,   936,   936,
     937,   938,   938,   939,   940,   940,   941,   941,   941,   941,
     941,   942,   943,   943,   944,   944,   945,   945,   946,   946,
     947,   947,   947,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   949,   950,   951,   951,   951,
     952,   952,   953,   953,   954,   955,   955,   956,   956,   957,
     958,   958,   959,   960,   960,   960,   960,   960,   960,   960,
     960,   960,   960,   960,   960,   960,   961,   961,   962,   962,
     963,   963,   963,   963,   963,   963,   963,   963,   963,   963,
     963,   963,   963,   965,   964,   967,   966,   969,   968,   971,
     970,   972,   973,   974,   976,   975,   977,   978,   978,   978,
     979,   979,   981,   982,   983,   980,   984,   984,   984,   985,
     985,   987,   988,   986,   990,   989,   991,   991,   992,   992,
     994,   995,   993,   997,   998,   996,   999,   999,  1001,  1000,
    1002,  1002,  1004,  1003,  1006,  1005,  1008,  1007,  1009,  1010,
    1011,  1009,  1012,  1013,  1009,  1014,  1014,  1015,  1015,  1015,
    1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,  1020,  1020,
    1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1021,
    1021,  1022,  1022,  1023,  1023,  1023,  1023,  1023,  1023,  1023,
    1024,  1024,  1025,  1025,  1026,  1027,  1027,  1028,  1028,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1030,  1030,  1031,  1031,
    1032,  1032,  1032,  1033,  1034,  1034,  1035,  1036,  1037,  1038,
    1039,  1040,  1041,  1042,  1043,  1044,  1045,  1046,  1047,  1047,
    1048,  1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,
    1053,  1054,  1054,  1055,  1056,  1056,  1056,  1056,  1056,  1056,
    1057,  1057,  1058,  1058,  1059,  1059,  1060,  1060,  1060,  1061,
    1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,
    1067,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1072,
    1071,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,
    1078,  1078,  1079,  1079,  1080,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,
    1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,  1089,
    1089,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1091,  1091,  1092,  1093,
    1094,  1095,  1095,  1095,  1095,  1095,  1095,  1096,  1096,  1096,
    1097,  1097,  1097,  1097,  1098,  1098,  1099,  1099,  1100,  1101,
    1101,  1102,  1102,  1102,  1102,  1102,  1102,  1103,  1104,  1104,
    1105,  1105,  1106,  1106,  1107,  1108,  1108,  1109,  1109,  1110,
    1110,  1110,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1113,  1113,  1114,
    1114,  1115,  1115,  1115,  1115,  1115,  1116,  1116,  1116,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1119,  1119,  1120,
    1120,  1121,  1121,  1121,  1122,  1123,  1123,  1124,  1124,  1124,
    1125,  1125,  1126,  1126,  1127,  1127,  1127,  1128,  1128,  1128,
    1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,  1132,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1134,  1134,  1134,  1135,  1135,  1135,  1136,  1137,  1137,  1138,
    1138,  1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,  1143,
    1143,  1144,  1144,  1145,  1145,  1146,  1146,  1146,  1147,  1147,
    1147,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1149,  1149,
    1151,  1150,  1152,  1152,  1153,  1154,  1154,  1155,  1155,  1156,
    1156,  1156,  1156,  1157,  1157,  1157,  1157,  1157,  1158,  1158,
    1158,  1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,  1162,
    1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,
    1167,  1167,  1168,  1168,  1169,  1170,  1170,  1171,  1171,  1172,
    1172,  1173,  1173,  1173,  1173,  1173,  1174,  1174,  1174,  1175,
    1175,  1176,  1176,  1177,  1177,  1178,  1178,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,
    1185,  1185,  1187,  1186,  1189,  1188,  1191,  1190,  1193,  1192,
    1194,  1192,  1196,  1195,  1197,  1198,  1198,  1198,  1198,  1199,
    1200,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1202,  1202,  1203,  1204,  1205,  1205,  1205,  1206,  1206,  1207,
    1207,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1209,  1209,  1210,
    1210,  1211,  1211,  1211,  1211,  1212,  1213,  1213,  1213,  1213,
    1214,  1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,  1218,
    1219,  1219,  1220,  1220,  1220,  1220,  1221,  1221,  1221,  1221,
    1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,
    1221,  1221,  1221,  1221,  1221,  1221,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1225,  1225,  1225,  1225,  1226,  1226,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1228,  1228,  1228,  1229,
    1229,  1229,  1229,  1229,  1230,  1231,  1231,  1232,  1233,  1233,
    1234,  1234,  1235,  1235,  1236,  1236,  1236,  1237,  1237,  1237,
    1238,  1238,  1238,  1238,  1239,  1239,  1240,  1241,  1241,  1242,
    1242,  1243,  1243,  1243,  1244,  1245,  1246,  1247,  1247,  1248,
    1250,  1251,  1249,  1252,  1253,  1253,  1254,  1254,  1255,  1255,
    1255,  1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,
    1260,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,  1264,
    1264,  1264,  1265,  1266,  1266,  1266,  1267,  1268,  1268,  1269,
    1269,  1270,  1270,  1270,  1271,  1272,  1272,  1273,  1273,  1273,
    1274,  1275,  1276,  1276,  1277,  1277,  1278,  1278,  1278,  1278,
    1278,  1278,  1279,  1280,  1280,  1280,  1282,  1281,  1281,  1283,
    1283,  1284,  1284,  1285,  1286,  1286,  1287,  1287,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1292,  1293,  1294,  1294,  1295,
    1295,  1296,  1296,  1296,  1296,  1297,  1297,  1297,  1297,  1297,
    1298,  1298,  1298,  1298,  1298,  1298,  1298,  1299,  1299,  1299,
    1299,  1299,  1300,  1300,  1300,  1301,  1301,  1301,  1302,  1302,
    1303,  1303,  1304,  1305,  1305,  1306,  1306,  1307,  1308,  1309,
    1309,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,  1313,
    1314,  1314,  1315,  1316,  1316,  1317,  1317,  1318,  1318,  1318,
    1319,  1319,  1320,  1320,  1320,  1320,  1320,  1321,  1321,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1323,  1323,  1323,  1323,  1323,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1325,  1325,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1327,
    1327,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,  1331,
    1331,  1331,  1331,  1331,  1332,  1332,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1334,  1334,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1337,  1337,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1340,  1340,  1341,  1341,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,  1347,
    1347,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1350,  1350,  1351,  1351,  1352,
    1352,  1352,  1353,  1353,  1354,  1354,  1354,  1355,  1355,  1355,
    1356,  1356,  1357,  1358,  1358,  1359,  1360,  1361,  1362,  1362,
    1363,  1363,  1364,  1364,  1365,  1365,  1366,  1366,  1367,  1367,
    1367,  1367,  1367,  1368,  1369,  1369,  1369,  1369,  1369,  1370,
    1370,  1370,  1370,  1370,  1371,  1371,  1371,  1372,  1373,  1374,
    1374,  1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,
    1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,
    1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,
    1380,  1380,  1381,  1381,  1382,  1382,  1383,  1383,  1384,  1384,
    1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,  1388,  1389,
    1389,  1390,  1390,  1390,  1390,  1390,  1390,  1391,  1391,  1391,
    1392,  1392,  1392,  1392,  1393,  1393,  1394,  1394,  1395,  1395,
    1396,  1396,  1397,  1398,  1398,  1398,  1398,  1398,  1398,  1399,
    1399,  1400,  1400,  1401,  1402,  1402,  1403,  1403,  1404,  1405,
    1406,  1406,  1407,  1407,  1407,  1408,  1408,  1409,  1409,  1409,
    1409,  1410,  1410,  1411,  1412,  1413,  1413,  1413,  1414,  1414,
    1414,  1414,  1415,  1415,  1416,  1416,  1417,  1417,  1418,  1418,
    1419,  1420,  1420,  1421,  1421,  1422,  1422,  1423,  1424,  1424,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1427,  1427,  1427,  1427,  1428,  1428,  1429,  1429,  1430,
    1430,  1431,  1431,  1432,  1433,  1433,  1434,  1434,  1435,  1435,
    1436,  1437,  1437,  1438,  1438,  1439,  1439,  1440,  1440,  1441,
    1442,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1446,  1447,
    1447,  1448,  1449,  1449,  1450,  1450,  1451,  1451,  1452,  1452,
    1453,  1454,  1454,  1454,  1455,  1455,  1455,  1455,  1455,  1456,
    1456,  1457,  1457,  1457,  1457,  1457,  1457,  1458,  1458,  1458,
    1458,  1458,  1459,  1459,  1459,  1459,  1459,  1460,  1460,  1460,
    1460,  1460,  1461,  1462,  1462,  1463,  1463,  1464,  1464,  1465,
    1466,  1466,  1466,  1467,  1468,  1469,  1470,  1471,  1471,  1472,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1484,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1489,  1489,  1490,  1490,  1491,  1491,  1491,  1492,  1492,
    1492,  1493,  1493,  1493,  1493,  1494,  1494,  1495,  1495,  1496,
    1496,  1496,  1497,  1497,  1497,  1498,  1498,  1499,  1500,  1500,
    1500,  1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,
    1505,  1506,  1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1513,  1514,  1514,  1515,  1515,  1516,  1517,
    1517,  1518,  1518,  1518,  1519,  1519,  1520,  1520,  1521,  1521,
    1521,  1522,  1523,  1523,  1524,  1524,  1525,  1525,  1526,  1526,
    1526,  1526,  1526,  1526,  1526,  1526,  1526,  1527,  1527,  1528,
    1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,
    1539,  1540,  1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,
    1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1557,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1572,  1573,  1573,
    1574,  1574,  1575,  1575,  1576,  1576,  1577,  1577,  1578,  1578,
    1578,  1578,  1579,  1579,  1580,  1580,  1581,  1581,  1582,  1582,
    1582,  1583,  1584,  1585,  1585,  1585,  1585,  1585,  1585,  1586,
    1586,  1587,  1587,  1588,  1588,  1589,  1589,  1589,  1591,  1590,
    1593,  1592,  1592,  1594,  1594,  1595,  1594,  1596,  1596,  1597,
    1597,  1597,  1597,  1597,  1597,  1597,  1597,  1597,  1597,  1597,
    1597,  1598,  1598,  1600,  1599,  1599,  1601,  1601,  1602,  1602,
    1604,  1603,  1605,  1603,  1606,  1603,  1607,  1607,  1608,  1608,
    1610,  1609,  1611,  1612,  1612,  1613,  1614,  1614,  1614,  1615,
    1616,  1617,  1617,  1618,  1618,  1619,  1619,  1619,  1620,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1624,  1624,
    1625,  1625,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1631,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1637,  1637,  1637,  1637,  1638,  1638,
    1638,  1639,  1640,  1640,  1640,  1641,  1641,  1642,  1643,  1643,
    1643,  1643,  1643,  1643,  1643,  1643,  1643,  1644,  1644,  1645,
    1645,  1645,  1646,  1646,  1646,  1647,  1647,  1647,  1648,  1648,
    1649,  1649,  1650,  1650,  1651,  1652,  1653,  1653,  1654,  1654,
    1655,  1655,  1656,  1656,  1657,  1657,  1658,  1658,  1659,  1660,
    1661,  1662,  1663,  1664,  1665,  1665,  1666,  1667,  1667,  1668,
    1668,  1669,  1669,  1670,  1670,  1671,  1671,  1671,  1672,  1672,
    1672,  1673,  1673,  1674,  1674,  1675,  1675,  1676,  1677,  1677,
    1677,  1677,  1677,  1678,  1678,  1678,  1679,  1679,  1679,  1679,
    1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,
    1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,
    1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,  1679,
    1679,  1680,  1680,  1680,  1681,  1681,  1681,  1681,  1681,  1681,
    1681,  1681,  1681,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1682,  1682,  1683,  1683,  1683,
    1684,  1684,  1684,  1684,  1685,  1685,  1685,  1685,  1685,  1686,
    1687,  1687,  1687,  1687,  1687,  1687,  1687,  1688,  1688,  1688,
    1688,  1688,  1688,  1688,  1689,  1689,  1690,  1690,  1691,  1691,
    1692,  1693,  1693,  1694,  1694,  1695,  1695,  1696,  1696,  1697,
    1697,  1697,  1697,  1697,  1698,  1698,  1698,  1698,  1699,  1699,
    1699,  1699,  1700,  1700,  1700,  1700,  1700,  1700,  1701,  1702,
    1702,  1702,  1702,  1702,  1702,  1702,  1703,  1703,  1703,  1704,
    1704,  1705,  1705,  1706,  1707,  1707,  1708,  1709,  1709,  1710,
    1710,  1711,  1711,  1711,  1711,  1712,  1712,  1712,  1712,  1712,
    1712,  1712,  1714,  1713,  1713,  1715,  1715,  1716,  1716,  1717,
    1718,  1718,  1718,  1718,  1720,  1719,  1719,  1721,  1722,  1723,
    1724,  1724,  1724,  1724,  1724,  1724,  1724,  1724,  1725,  1725,
    1725,  1725,  1725,  1726,  1726,  1727,  1727,  1727,  1727,  1728,
    1728,  1728,  1728,  1728,  1729,  1729,  1730,  1729,  1729,  1729,
    1731,  1731,  1732,  1731,  1731,  1733,  1733,  1733,  1733,  1734,
    1734,  1735,  1735,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1737,  1737,  1738,
    1738,  1739,  1739,  1740,  1740,  1740,  1741,  1741,  1741,  1741,
    1741,  1742,  1742,  1743,  1743,  1744,  1744,  1745,  1745,  1746,
    1746,  1746,  1747,  1747,  1747,  1748,  1748,  1748,  1749,  1749,
    1749,  1749,  1749,  1749,  1750,  1751,  1752,  1753,  1754,  1755,
    1756,  1756,  1756,  1757,  1757,  1757,  1757,  1757,  1757,  1757,
    1757,  1757,  1757,  1757,  1757,  1757,  1757,  1757,  1757,  1758,
    1759,  1759,  1760,  1760,  1761,  1761,  1762,  1762,  1763,  1763,
    1763,  1763,  1763,  1764,  1764,  1765,  1765,  1766,  1766,  1766,
    1766,  1766,  1767,  1767,  1769,  1768,  1770,  1770,  1771,  1771,
    1771,  1772,  1772,  1772,  1773,  1773,  1774,  1775,  1775,  1776,
    1777,  1778,  1778,  1778,  1779,  1780,  1781,  1782,  1782,  1782,
    1782,  1782,  1782,  1782,  1782,  1783,  1784,  1784,  1784,  1785,
    1785,  1785,  1785,  1785,  1786,  1786,  1786,  1786,  1786,  1786,
    1787,  1787,  1788,  1789,  1790,  1790,  1790,  1791,  1792,  1792,
    1792,  1793,  1793,  1793,  1795,  1794,  1796,  1797,  1797,  1797,
    1797,  1798,  1798,  1799,  1799,  1801,  1800,  1802,  1802,  1804,
    1805,  1806,  1807,  1803,  1809,  1810,  1811,  1812,  1808,  1813,
    1813,  1813,  1813,  1813,  1813,  1814,  1814,  1815,  1815,  1815,
    1816,  1816,  1817,  1817,  1817,  1818,  1818,  1819,  1819,  1819,
    1820,  1820,  1821,  1821,  1822,  1822,  1823,  1824,  1824,  1825,
    1825,  1826,  1826,  1826,  1827,  1827,  1828,  1828,  1829,  1829,
    1830,  1830,  1831,  1831,  1832,  1832,  1833,  1833,  1833,  1834,
    1834,  1835
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     1,     2,     0,     6,
       0,     6,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     3,     1,     3,     1,     2,     3,     5,     7,
       2,     3,     1,     3,     3,     2,     3,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     8,     7,     0,     3,     3,     6,
       3,     0,     3,    12,    11,    11,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       3,     4,     0,     2,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     0,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     1,     1,     1,     2,     3,     3,     3,     0,     3,
       0,     1,     3,     1,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       5,     5,     0,     7,     0,     6,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     2,     0,     3,     0,
       2,     2,     2,     2,     0,     6,     2,     0,     2,     1,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     1,
       1,     0,     0,     8,     0,     6,     1,     2,     1,     2,
       0,     0,     6,     0,     0,     6,     0,     2,     0,     5,
       0,     1,     0,     5,     0,     2,     0,     5,     4,     0,
       0,     8,     0,     0,     8,     1,     1,     1,     1,     1,
       0,     2,     0,     4,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     1,     1,     2,     1,     1,     2,     3,     1,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     3,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     1,     2,     1,     4,     0,     1,     1,     2,
       1,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     3,     2,     2,
       3,     3,     2,     3,     3,     1,     1,     1,     4,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     0,
       1,     6,     7,     7,     7,     8,     3,     4,     0,     2,
       0,     1,     0,     1,     2,     2,     9,     0,     2,     0,
       1,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     2,     4,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     1,     3,
       4,     4,     0,     5,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     7,     6,     6,     6,     4,     7,
       7,     6,     5,     5,     5,     5,     5,     5,     3,     3,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     1,     1,     4,
       0,     0,    11,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     3,     0,     3,     0,     3,     0,     3,     0,
       1,     1,     3,     1,     1,     0,     2,     1,     3,     3,
       3,     1,     4,     0,     1,     1,     5,     0,     1,     1,
       2,     1,     1,     1,     5,     0,     3,     0,     5,     4,
       2,     4,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     4,     0,     1,     1,     0,     4,     3,     3,
       5,     1,     3,     3,     5,     7,     1,     3,     2,     1,
       1,     8,     5,     1,     3,     3,     4,     0,     4,     0,
       2,     1,     2,     1,     1,     3,     2,     3,     3,     2,
       3,     4,     3,     4,     2,     3,     2,     1,     4,     4,
       4,     4,     3,     3,     4,     1,     1,     1,     9,     8,
       0,     1,     2,     1,     1,     1,     3,     2,     2,     0,
       1,     2,     1,     1,     1,     2,     1,     3,     4,     4,
       1,     1,     2,     0,     1,     2,     1,     3,     1,     1,
       1,     2,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     4,     1,     3,     4,     5,     7,     6,
       8,     6,     5,     6,     4,     3,     5,     4,     6,     3,
       4,     1,     1,     0,     3,     3,     3,     3,     3,     3,
       5,     5,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     9,    12,     5,     6,     6,     4,     4,     5,
       3,     3,     0,     1,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     0,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     8,     4,
       3,     6,     4,     6,     4,     7,     7,    10,     1,     4,
       4,     4,     4,     4,     6,     4,     4,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     2,     1,
       1,     5,     6,     5,     5,     5,     7,     5,     6,     5,
       6,     5,     6,     5,     6,     5,     6,     5,     5,     5,
       5,     5,     6,     8,     4,     4,     4,     4,     4,     5,
       7,     7,     6,     6,     9,     0,     3,     1,     1,     1,
       1,     2,     0,     2,     0,     2,     2,     0,     2,     2,
       0,     1,     2,     1,     1,     1,     3,     4,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     2,     2,
       2,     4,     2,     4,     1,     2,     2,     2,     4,     0,
       3,     2,     2,     3,     1,     1,     1,     4,     4,     2,
       4,     0,     1,     0,     2,     0,     3,     3,     1,     2,
       2,     3,     2,     1,     2,     1,     2,     1,     1,     2,
       2,     2,     1,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     3,     1,     3,
       0,     1,     0,     2,     4,     5,     1,     1,     4,     1,
       1,     5,     7,     5,     7,     3,     3,     3,     4,     4,
       1,     2,     2,     1,     3,     3,     0,     1,     0,     1,
       0,     1,     4,     1,     1,     1,     1,     1,     1,     3,
       5,     3,     3,     4,     3,     3,     3,     4,     8,     4,
       1,     3,     3,     7,     4,     0,     1,     0,     1,     1,
       2,     1,     2,     3,     3,     1,     1,     2,     0,     2,
       3,     3,     1,     1,     6,     6,     1,     2,     0,     1,
       1,     0,     1,     1,     1,     1,     3,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     2,     0,     2,     2,     3,     3,     1,
       4,     0,     3,     1,     3,     0,     2,     1,     3,     3,
       0,     4,     3,     1,     0,     1,     3,     1,     2,     0,
       1,     3,     3,     1,     0,     1,     1,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     2,     6,     6,     4,     6,     4,     5,
       4,     4,     5,     4,     4,     4,     5,     5,     4,     6,
       4,     1,     3,     1,     3,     0,     2,     0,     1,     0,
       1,     1,     3,     1,     1,     9,    10,     8,     6,     7,
       6,     0,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     4,     1,     3,     4,     3,     1,     2,     1,     2,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     0,
       1,     3,     4,     0,     1,     3,     1,     1,     1,     0,
       3,     0,     5,    10,     0,     1,     3,     1,     3,     0,
       1,    10,     7,     8,     0,     2,     0,     2,     1,     1,
       1,     3,     0,     1,     0,     1,     1,     3,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     0,     3,     3,
       5,     5,     4,     5,     5,     2,     4,     4,     4,     7,
       3,     3,     2,     6,     7,     7,     3,     6,     6,     3,
       3,     2,     5,     4,     3,     4,     3,     3,     2,     2,
       4,     6,     5,     4,     4,     3,     4,     4,     4,     4,
       4,     4,     4,     4,     4,     4,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     1,     0,     2,     0,     2,     0,     2,
       1,     3,     3,     1,     1,     1,     1,     1,     3,     1,
       1,     0,     3,     2,     1,     0,     1,     1,     0,     4,
       0,     4,     1,     0,     3,     0,     3,     3,     1,     2,
       2,     2,     2,     2,     3,     1,     1,     1,     1,     1,
       1,     0,     1,     0,     3,     3,     3,     1,     0,     2,
       0,     4,     0,     4,     0,     3,     0,     1,     0,     2,
       0,     3,     3,     2,     2,     3,     0,     1,     1,     2,
      18,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     1,
       1,     1,     3,     5,     2,     1,     1,     1,     1,     1,
       3,     5,     1,     3,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     2,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     5,     5,     7,     7,     3,     3,     3,
       6,     6,     6,     4,     0,     2,     4,     6,     1,     3,
       1,     2,     2,     0,     2,     1,     3,     2,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     2,     0,     2,     2,     2,     2,     2,     3,     3,
       4,     6,     2,     3,     3,     2,     1,     3,     3,     1,
       3,     2,     2,     1,     0,     2,     3,     0,     2,     2,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     4,     4,     1,     1,     1,     3,     3,
       1,     1,     2,     2,     0,     3,     2,     1,     1,     3,
       4,     2,     6,     5,     9,     3,     3,     2,     4,     3,
       6,     7,    10,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     7,     0,     9,     8,     6,
       5,     9,     0,    11,     7,     0,     1,     1,     1,     0,
       1,     1,     3,     2,     3,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     2,     0,     3,     0,
       1,     3,     1,     2,     2,     2,     1,     3,     3,     1,
       3,     1,     3,     1,     3,     0,     3,     0,     3,     3,
       2,     7,     3,     3,     2,     0,     2,     4,     1,     1,
       1,     1,     1,     1,     3,     4,     3,     5,     5,     6,
       3,     3,     3,     5,     5,     3,     3,     5,     2,     3,
       3,     3,     2,     4,     7,     4,     7,     3,     5,     2,
       1,     3,     1,     3,     0,     3,     1,     3,     0,     2,
       2,     2,     2,     0,     3,     0,     3,     0,     3,     4,
       3,     3,     0,     3,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     1,     2,     1,     2,     3,     3,
       3,     0,     3,     3,     0,     7,     2,     0,     3,     4,
       4,     1,     1,     0,     2,     0,    13,     8,     7,     0,
       0,     0,     0,    15,     0,     0,     0,     0,    12,     4,
       4,     3,     4,     3,     3,     0,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     3,
       5,     3,     3,     3,     1,     3,     4,     6,    10,     1,
       5,     0,     2,     3,     1,     1,     0,     3,     1,     3,
       1,     3,     1,     2,     0,     3,     0,     1,     1,     0,
       1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24826 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24840 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24862 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24870 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2219 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24879 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24895 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24922 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24931 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2276 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24937 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24943 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24955 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24961 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24967 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2289 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24973 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24979 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24985 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24991 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24997 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25003 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25009 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25015 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25021 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25027 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25033 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25039 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25045 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25051 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25057 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25063 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25069 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25075 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25081 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25087 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25093 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25099 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25105 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25111 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25117 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25123 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25129 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25135 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25141 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25147 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25153 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25159 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25165 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25171 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25177 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25183 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25189 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25195 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25201 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25207 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25213 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25219 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25225 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25237 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25243 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25249 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25255 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25261 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25267 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25273 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25279 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25290 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25322 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25333 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25344 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2480 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25350 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25361 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25373 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25383 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25392 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25407 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25416 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25439 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25450 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25461 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25472 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25483 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25494 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25506 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25527 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25535 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25546 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25555 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25566 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25576 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25584 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25596 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25606 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25616 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25624 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25635 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25644 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25657 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25667 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25675 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25686 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25695 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25706 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25716 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25725 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25735 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25744 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25753 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25762 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25771 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25780 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25798 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25807 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25816 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25825 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25834 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25843 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25852 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25861 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2928 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25870 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25879 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25888 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25897 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25906 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25915 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 25924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 25933 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 25941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 25949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 25957 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 25965 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 25979 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 25987 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 25995 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26004 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26019 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26028 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26036 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26044 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26052 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26060 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26068 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26076 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26085 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26093 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26101 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26109 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26119 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26157 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26165 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26173 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26181 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26191 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 26211 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 26252 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26260 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26270 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26280 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26288 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26296 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26312 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26320 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26334 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26343 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26352 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26361 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26370 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26378 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26398 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26406 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26417 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26423 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26429 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26455 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26463 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26471 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26479 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26489 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26501 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26512 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3414 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26518 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26532 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26555 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26600 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26617 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26625 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26633 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26643 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26675 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26692 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26708 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26716 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26724 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26735 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26746 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26757 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26765 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26773 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26781 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26798 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26806 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26814 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26834 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26846 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26857 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26867 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26873 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26883 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26893 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26903 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26914 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26934 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26940 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26950 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 26960 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26966 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 26975 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27025 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27039 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27057 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27077 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3886 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27083 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3887 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27089 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3891 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27095 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3892 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27101 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3898 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27107 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3900 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27113 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3902 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27119 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3904 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27125 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3906 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27131 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3908 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27137 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3910 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27143 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3915 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27149 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3916 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27155 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3917 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27161 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27169 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27177 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27185 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27191 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3941 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27199 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27251 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27302 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27308 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27314 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27320 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27326 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4077 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27332 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27338 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27346 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27371 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4120 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27470 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27491 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27536 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27574 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4310 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27587 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4319 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27653 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27665 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27671 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27677 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4420 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27716 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4435 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27739 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4456 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27745 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4457 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27759 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27776 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27786 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27796 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27806 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27820 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27850 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27856 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27862 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27868 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27874 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27880 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27890 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27900 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4577 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27906 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4579 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27912 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4581 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27918 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 27924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 27930 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 27936 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 27942 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 27948 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 27954 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 27960 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 27966 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 27972 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 27978 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 27984 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 27990 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28005 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28022 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28028 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28034 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28050 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28060 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28070 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28080 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28090 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28122 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28131 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28137 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28143 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4738 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28149 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28159 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28169 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28179 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28185 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28191 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28197 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28203 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28209 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28215 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28221 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4780 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28227 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28233 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28239 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28245 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4788 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28251 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28257 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28281 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28305 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28314 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28323 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4867 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28329 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28339 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28352 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28409 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4942 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28421 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4950 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28471 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4998 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28486 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28499 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28557 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28605 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28629 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28653 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5168 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28683 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28705 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28727 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5240 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28739 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5248 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28780 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5286 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28802 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5304 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28815 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5327 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28829 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5337 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28875 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5382 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28883 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 28891 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 28899 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5413 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28911 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5421 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28956 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5463 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 28965 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5471 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28977 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5479 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29018 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5517 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29027 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29045 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29067 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29088 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29094 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29100 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29120 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29139 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5619 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29154 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29163 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5638 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29180 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29214 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5700 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29243 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5708 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29285 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5749 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5766 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29316 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5774 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29358 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5817 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29364 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29370 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29376 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29394 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5844 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29402 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29408 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29416 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29422 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29432 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29458 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29468 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29474 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29484 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29494 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29500 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29510 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29520 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29526 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29536 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29546 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29552 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29558 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29564 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29570 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29578 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29586 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29592 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29600 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29608 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29616 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29624 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29632 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29640 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29648 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29656 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29664 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29672 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29680 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29688 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29694 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29744 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29753 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29762 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29773 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29784 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29795 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29801 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29807 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29815 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29823 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29831 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29839 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29847 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29855 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29863 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29869 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29875 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 29881 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 29899 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29905 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29918 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 29924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 29932 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 29940 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 29946 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29956 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29966 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29972 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29985 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 29991 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 29997 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30007 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30017 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30026 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30034 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30043 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30052 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30058 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30066 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30074 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30085 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30095 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30110 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30118 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30128 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30138 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30144 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6483 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30150 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30156 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30162 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30172 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30182 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30190 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30196 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30206 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30216 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30222 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30228 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30234 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30240 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30246 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30252 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30258 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30264 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30286 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6585 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30292 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6586 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30298 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6590 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6591 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30310 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30319 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30328 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30344 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30350 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30356 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30366 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30376 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30386 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30396 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30404 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30412 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30420 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30428 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulonglong_number));
          }
#line 30453 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30461 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30469 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30477 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
          }
#line 30485 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30493 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30501 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30539 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30547 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30555 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30563 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30571 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30579 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30587 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30595 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30603 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30611 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30619 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30627 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30635 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30643 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30651 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 30677 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30685 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30693 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30709 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30727 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30733 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30739 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30745 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6862 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6866 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30757 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30763 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30769 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30775 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30781 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30787 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30793 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30799 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30805 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6881 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30811 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6882 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30817 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30823 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30829 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30839 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30849 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30855 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30861 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30869 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30875 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 30884 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30893 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30902 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30910 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30923 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 30935 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 30944 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 30950 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30956 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30962 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30968 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30974 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30980 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 30986 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 30992 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31000 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31021 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31027 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31033 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31039 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31047 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31055 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31063 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31071 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31079 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31087 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31095 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31104 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31113 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31126 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31139 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31147 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31155 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31164 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31177 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31185 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31212 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31220 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31228 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31236 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31244 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31252 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31260 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31268 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31276 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31284 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31293 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31302 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31320 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31329 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31337 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31345 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31354 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31362 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31370 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31376 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31394 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7227 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31400 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31406 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31412 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31418 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7237 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31424 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7243 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31454 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7249 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31460 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7250 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31466 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7251 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31472 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31478 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31484 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31490 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31496 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31502 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31511 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7269 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31523 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31529 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31535 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31541 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31550 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31559 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31568 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31586 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31592 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31598 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31604 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31610 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7329 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31619 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31625 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31633 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31639 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31645 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31656 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31662 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31668 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31680 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31686 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31695 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31724 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31744 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31752 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31760 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31768 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31776 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31784 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31792 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31800 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31808 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31816 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31824 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31832 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31840 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31848 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 31856 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 31864 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 31877 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 31885 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 31893 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31901 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31909 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 31917 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 31923 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 31929 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 31935 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 31941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 31947 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 31953 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 31961 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31969 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 31982 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 31988 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 31994 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32000 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32013 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7583 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32019 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32025 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32031 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32041 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32047 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32053 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32059 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7607 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32065 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7608 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32071 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7613 "sql_yacc.yy" /* yacc.c:1646  */
    {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
#line 32080 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32090 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32100 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32113 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32124 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32135 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32144 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32153 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32162 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32171 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32182 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32192 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32204 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32210 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32219 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7709 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32237 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32249 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7741 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32255 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32261 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32272 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32283 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32289 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32295 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32301 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32307 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32316 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32325 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32334 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32343 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32352 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32358 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32364 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32370 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32376 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32394 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7813 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32400 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7814 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32406 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7818 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32412 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7823 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32418 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7824 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32424 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7825 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32458 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32468 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32483 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32489 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32499 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32515 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32525 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32535 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32541 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32547 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32553 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32561 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32569 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32585 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32591 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32597 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32603 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32609 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32615 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32621 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32627 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32633 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32639 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32645 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32651 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32661 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32672 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32682 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32698 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32708 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32719 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32729 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32735 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32745 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32754 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32768 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 32782 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 32794 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 32807 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32822 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32833 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32848 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32859 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32874 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8166 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32880 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32896 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32902 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32922 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32939 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32962 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32984 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33007 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33019 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33042 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33066 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33078 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33093 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33108 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 33117 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33133 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33149 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33164 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 33175 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 33184 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33190 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33196 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33205 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33215 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33225 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33236 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33247 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8479 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33253 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33263 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33273 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33285 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33316 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33328 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33339 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33350 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33361 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33372 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33392 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33402 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33418 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33434 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33444 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8619 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33450 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8624 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33456 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8625 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33462 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33472 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33482 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33492 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33502 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33516 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8669 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33522 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33528 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33534 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33540 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33546 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33559 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8689 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33565 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33571 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33583 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33599 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33608 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33617 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33625 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33633 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33642 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33651 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33661 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33669 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33677 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33685 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33693 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33709 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33717 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33725 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33733 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33742 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33759 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33767 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33775 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 33791 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33799 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33807 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 33815 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 33823 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 33829 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 33837 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 33845 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 33851 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33862 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33871 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33879 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 33888 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 33900 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33909 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 33917 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 33925 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 33933 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 33958 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33966 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 33974 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33982 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33990 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33998 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34006 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34014 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34022 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34030 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34038 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34046 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34054 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34062 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34070 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34078 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34086 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34094 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34102 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34112 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34120 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34128 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34137 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34146 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34155 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34161 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34170 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34179 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34189 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34199 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34205 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34213 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34237 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34245 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34263 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34269 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34275 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34281 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34287 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34293 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34299 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34305 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9157 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34317 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34323 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34329 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34335 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34344 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34354 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34367 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34381 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34389 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9230 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34395 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34410 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34427 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34457 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34474 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34482 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34490 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34498 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34506 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34514 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34522 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34530 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34538 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34546 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34554 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34563 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34571 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34579 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34587 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34595 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34603 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34611 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34619 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34627 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34635 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34643 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34652 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34678 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34687 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34696 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34704 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34719 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34725 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34731 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34737 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34746 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34752 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34761 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9507 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34767 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 34773 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 34779 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 34789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 34795 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 34814 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 34824 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 34835 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 34846 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 34855 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34864 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34870 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34879 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 34885 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 34891 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 34897 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 34903 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 34909 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 34915 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 34923 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34929 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34935 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9628 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34955 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 34963 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34972 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34981 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 34995 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35003 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35012 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35022 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35032 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35046 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35052 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35060 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 35068 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35078 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35088 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35096 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35104 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35110 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35121 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35127 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35133 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35141 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35150 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35158 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35166 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35174 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35182 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35190 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35198 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35206 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35214 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35222 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35230 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35238 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35246 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35254 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35262 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35270 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35278 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35286 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35294 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35300 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35306 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35314 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35323 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35331 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35344 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35362 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35380 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35386 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35392 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 10022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35398 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35408 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35418 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35426 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35438 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35446 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35455 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35463 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35473 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35483 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35493 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35501 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35523 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35529 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35535 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35541 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35547 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35553 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35563 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35573 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35584 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35590 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35598 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35604 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35610 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35616 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35622 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35628 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10178 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35634 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10179 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35640 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35650 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35669 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35677 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35685 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35693 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35709 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35717 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35725 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35733 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35741 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35749 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35766 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 35774 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 35791 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 35802 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 35810 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 35823 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 35831 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 35839 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 35847 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 35859 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35867 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35875 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35884 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35893 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 35905 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35917 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35925 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35933 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35957 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35965 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 35973 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 35981 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35989 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35997 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36005 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36013 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36021 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36029 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10425 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36037 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10436 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36043 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36049 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36055 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36061 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36067 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36073 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36079 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36085 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36091 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36097 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36105 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36111 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36119 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36127 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36135 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36143 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36151 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36159 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36165 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36173 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36181 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36189 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36197 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36205 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36214 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36222 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36230 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36241 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36249 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36257 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36265 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36273 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36281 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36289 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36300 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36312 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36318 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36324 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36332 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36340 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36348 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36356 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36364 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36372 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36380 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36396 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36406 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36414 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36422 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36438 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36446 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36454 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36462 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36470 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36479 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36488 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10677 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36497 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36505 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36513 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36521 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36529 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36538 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36546 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36554 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36562 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36570 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36578 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36586 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36594 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36602 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36610 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36618 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36627 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36635 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36643 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36651 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36667 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36675 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36683 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36692 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36700 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36708 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36716 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36724 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36732 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36740 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36748 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36756 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36764 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36772 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 36780 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 36788 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36796 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36804 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36812 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 36820 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36828 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 36836 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36844 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36852 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 36860 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 36868 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 36876 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 36884 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36892 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 36900 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 36908 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 36916 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 36924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 36934 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 36944 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 36954 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 36964 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 36974 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36982 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 36992 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37000 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37008 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37014 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37028 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37034 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37046 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37052 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37058 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37064 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37074 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37084 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37092 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37100 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37108 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37116 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37124 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37138 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37152 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37160 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37168 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37176 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37184 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37192 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37200 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37208 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37216 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37224 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37232 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37240 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37248 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37256 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37264 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37272 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37280 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37288 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37296 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37312 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37320 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37328 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37336 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37351 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37366 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37374 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37395 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37404 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37413 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37419 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37425 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37431 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37437 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37445 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37453 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37461 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37469 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37477 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37485 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37493 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37501 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37525 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37533 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37541 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37549 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37557 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11348 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37575 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37583 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37591 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37599 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37607 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37615 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37623 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37631 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37639 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37648 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37656 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37664 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37672 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37680 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37688 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37696 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37704 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37712 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37720 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37728 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37736 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37744 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37752 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37760 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37768 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 37776 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 37783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 37789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 37795 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 37801 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 37809 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 37820 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37828 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[-1].var_type),
                                                 (yylsp[0]), (yyvsp[0].bipartite_name).prefix, (yyvsp[0].bipartite_name).name);
          }
#line 37837 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37843 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37849 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37859 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 37865 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 37871 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 37877 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37886 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37897 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 37905 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 37916 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 37939 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 37951 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37962 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37973 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37984 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37995 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38006 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38017 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38028 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38039 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38050 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38061 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38073 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38084 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38095 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38106 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38117 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38128 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38139 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38150 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38161 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38167 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38177 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38187 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38193 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38199 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38209 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38219 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38225 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38237 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38243 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38255 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38265 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38271 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38277 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38291 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38297 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38303 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38319 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38327 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38335 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38348 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38356 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11943 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38362 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11944 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38368 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38374 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38380 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38386 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38392 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38398 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11955 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38404 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38410 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38416 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38424 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38454 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38464 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38470 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38476 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38484 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38490 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38496 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38513 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38525 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38541 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38549 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38559 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38569 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38590 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38598 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38606 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38614 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38623 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38632 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38641 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38650 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38656 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38668 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38680 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38688 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38696 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38704 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38712 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12203 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38718 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38724 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38730 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38736 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38742 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38760 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 38769 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 38775 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 38786 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38796 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38806 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38816 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38825 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 38838 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38851 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12312 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38857 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38863 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38869 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38875 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 38881 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 38887 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 38893 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 38899 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 38905 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 38911 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 38917 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 38923 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 38929 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 38935 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 38941 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 38947 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 38953 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 38959 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 38965 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 38971 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 38977 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12339 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 38983 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 38989 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12341 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 38995 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12342 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39001 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39007 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39013 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39019 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39025 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39031 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39039 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39047 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39055 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39064 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39074 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39091 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39104 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39112 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39122 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39132 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39140 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39148 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39158 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39168 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39179 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39185 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39193 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39202 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39213 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39219 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39225 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39234 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39245 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39253 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39259 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39267 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39276 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39287 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39293 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39299 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39305 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39319 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39329 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39339 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39349 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39357 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39365 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39373 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39381 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39389 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39395 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39401 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39407 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12651 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39413 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12652 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39419 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12653 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39425 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12654 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39431 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12655 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39437 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12659 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39443 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39449 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12661 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39455 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39461 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12663 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39467 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12667 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39473 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12668 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39479 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12669 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39485 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12670 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39491 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39497 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12675 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39503 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12677 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39515 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12678 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39521 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12679 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39527 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12684 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39533 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39543 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39553 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39561 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39569 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39577 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39585 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39593 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39599 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39609 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39626 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39636 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39647 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39710 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39718 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39734 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12873 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39745 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39761 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 39771 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 39783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39805 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39828 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39851 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 39860 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 39868 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 39876 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39886 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39896 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39906 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39916 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39922 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39928 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39934 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39940 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 39946 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39956 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39966 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 39982 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 39997 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40009 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40021 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40036 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40048 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40054 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40060 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13179 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40073 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40079 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40085 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13193 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40098 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40107 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40116 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40125 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40134 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40143 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40152 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40162 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40172 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40180 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40186 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40194 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40200 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40209 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40219 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40228 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40238 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40244 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40250 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40260 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40270 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40280 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40288 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40297 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40320 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40328 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40337 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40343 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40349 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40360 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40373 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40394 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40402 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40410 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40418 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40424 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40430 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40442 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40456 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40462 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40468 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40474 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40480 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40486 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40492 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40498 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40504 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40510 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40516 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40522 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40528 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40539 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40547 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40555 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40563 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40571 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40579 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13584 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40587 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40595 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40603 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40611 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40619 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40631 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40639 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40650 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40658 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40666 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40686 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40694 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40702 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40710 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40718 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40726 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40738 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 40746 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13742 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40754 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 40762 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40770 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40778 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40786 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 40794 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 40802 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 40810 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 40818 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 40826 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 40834 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 40842 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 40850 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 40860 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 40868 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 40876 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 40884 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40892 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40900 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 40908 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 40916 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 40924 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 40932 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13899 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40938 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 40944 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 40950 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40956 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40962 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40968 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40974 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 40980 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 40986 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 40992 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 40998 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41004 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41010 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13945 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41016 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13946 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41022 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41028 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41034 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41048 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41056 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 13977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41064 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 13989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41072 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41090 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41112 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41123 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41129 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41138 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41149 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14057 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41155 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41172 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14074 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41178 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14079 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41184 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41200 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41212 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41228 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14117 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41234 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14122 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41240 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14124 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41246 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41252 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14128 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41258 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14130 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41264 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41274 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41280 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14140 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41286 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14142 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41292 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14144 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41298 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41304 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14148 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41310 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41316 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41325 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14163 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41331 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41342 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41352 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41362 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14195 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41372 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41381 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14206 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41387 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14208 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41396 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41416 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14232 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41422 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14233 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41428 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14237 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41434 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41449 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41459 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14259 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41465 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41473 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41486 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41499 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14297 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41505 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14298 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41511 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14299 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41517 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41527 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41550 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41556 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41562 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41568 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41574 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41580 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41586 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41592 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41598 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41604 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41610 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41616 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 41622 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 41631 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 41640 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 41650 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 41659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 41668 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 41674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 41680 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 41689 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 41698 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 41707 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 41713 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 41719 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41725 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 41731 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41737 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41743 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41749 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41759 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41769 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41777 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 41783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 41789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41801 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41822 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41842 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 41851 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 41861 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41870 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 41879 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41890 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41901 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41912 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 41932 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41938 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 41949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 41965 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 41971 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41977 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 41985 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 41993 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42001 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42009 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42017 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42025 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42033 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42041 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42047 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42053 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42059 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42067 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42075 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42083 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14716 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42089 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42095 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42103 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42114 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42122 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42130 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42138 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42146 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42154 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42164 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42174 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42186 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42196 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42208 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14822 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42214 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42245 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42259 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42273 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42290 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42307 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42325 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42333 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42350 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42356 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42368 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42379 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42385 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42397 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42408 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 15002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42414 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 15003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42420 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 15004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42426 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 15015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42435 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 15020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42444 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 15028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42452 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 15032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 42466 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 15045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42475 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 15050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42484 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 15058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42494 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42502 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42510 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42518 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42526 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42537 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42549 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42561 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42574 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42582 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42591 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42600 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42609 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42618 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 42627 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42636 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 42642 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 42648 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 42656 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 42664 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42674 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42684 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15775 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 42690 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 42701 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 42711 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 42717 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 42723 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42731 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42739 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 42747 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 42753 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42759 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42765 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42771 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15826 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42777 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42783 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15831 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42789 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15832 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42795 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42801 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42807 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42813 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42819 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42825 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42831 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42837 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42843 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15847 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42849 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42855 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42861 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42867 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42876 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yylsp[0]), (yyvsp[0].item));
          }
#line 42884 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 42892 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyvsp[-3].var_type), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42901 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 42909 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 42920 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 42928 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 42936 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42944 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42961 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42969 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42977 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42990 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 42998 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 43006 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 43014 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 43020 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 43026 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43034 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43046 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43052 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43058 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43064 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43070 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 15982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43076 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 15983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43082 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 15988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43088 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 15990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43096 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 15994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43104 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 15998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43112 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43120 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43128 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43143 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16026 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43149 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43160 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43189 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16075 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43195 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43201 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43210 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43216 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43231 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16098 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43237 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43248 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43257 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43265 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43274 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43294 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 43302 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 43310 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43318 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 43326 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43345 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43364 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 43372 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43380 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43388 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43396 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43405 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43415 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43421 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43427 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43433 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43439 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43445 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43451 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43457 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43463 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43469 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43475 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16262 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43481 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 43490 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43509 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43518 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43536 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 43545 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43557 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43566 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43585 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43594 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43610 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43624 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43630 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43636 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 43642 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 43648 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43658 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43668 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 43679 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 43685 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43691 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43697 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43703 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43709 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 43715 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 43721 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 43727 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 43733 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 43739 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 43745 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 43751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 43757 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 43763 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 43769 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 43775 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 43784 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 43790 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 43808 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 43814 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 43820 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 43826 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 43832 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 43838 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 43844 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 43850 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 43856 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 43862 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 43868 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 43874 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 43880 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 43886 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 43892 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43898 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43904 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 43918 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 43932 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 43946 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43964 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43980 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43996 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44012 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44030 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44040 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44050 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44060 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44070 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44076 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44082 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44088 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44094 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 44108 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 44121 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 44136 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44147 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 44165 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44175 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_mfas) = {}; }
#line 44181 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 44190 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 44200 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44214 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 44229 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44244 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44259 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44275 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44291 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44301 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44311 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44321 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44334 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44347 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44358 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44369 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 44382 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44393 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44404 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44415 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 44426 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44436 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44448 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44469 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 16948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44481 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44499 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 44514 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 44538 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 17004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 44553 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 17018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44562 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44571 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 17031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44580 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44589 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44595 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44601 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44611 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44621 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44629 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44637 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44645 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44653 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17083 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44659 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 17085 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44665 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44671 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44677 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17094 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44683 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17096 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44691 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44700 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17105 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44706 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17107 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44712 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17111 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44718 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44727 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44737 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17125 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44743 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17129 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44749 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17130 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44755 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44761 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44767 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44773 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44779 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44785 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44791 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17148 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44797 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17149 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44803 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44816 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44829 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44839 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44849 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44859 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44865 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44871 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 44877 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 44885 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 44891 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 44897 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 44903 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17231 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 44909 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 44915 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 44921 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 44932 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 44938 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 44949 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17261 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44955 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17263 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44961 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17265 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44967 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 17298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 44982 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 17312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 44990 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17325 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44996 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17327 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45002 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17329 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45008 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17334 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 45014 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17339 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 45020 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17341 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 45026 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17343 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45032 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17348 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45038 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17350 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45044 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17352 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45050 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45090 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45142 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45148 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45154 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45160 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45166 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45172 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45178 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17468 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45187 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17474 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45196 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17492 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-10]).cpp.start;
            lex->create_info->options= (yyvsp[-9].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45233 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17525 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45264 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17568 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45295 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45326 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17634 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-3]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-2].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45355 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17660 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45363 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17666 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45408 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17707 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45420 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45479 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17775 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 45504 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17796 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45512 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17801 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45524 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17809 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45536 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17817 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$13*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45549 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45558 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45567 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45576 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45585 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45594 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45603 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45609 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45615 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45628 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45642 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45661 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17904 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45667 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17905 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45673 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45679 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45685 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17911 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45691 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45697 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45703 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45709 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45715 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45721 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45731 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45741 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45751 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45761 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45771 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45781 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45794 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45805 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 18003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45826 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 18023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 45834 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 18027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 45842 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 18034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 45850 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 18038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 45858 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 18042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 45866 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 18048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 45872 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 18049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 45878 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 18054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 45889 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 18060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 45895 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 18065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45906 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 18072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45917 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 18082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 45928 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 18089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 45942 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 18101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45948 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 18102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45954 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 18106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 45960 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 18108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 45969 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 18115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 45975 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 18117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 45984 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 18122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 45993 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 45999 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 46005 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 46022 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46026 "/var/lib/pb2/sb_1-6500051-1648043689.66/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
